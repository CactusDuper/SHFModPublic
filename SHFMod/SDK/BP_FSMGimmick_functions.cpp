#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_FSMGimmick

#include "Basic.hpp"

#include "BP_FSMGimmick_classes.hpp"
#include "BP_FSMGimmick_parameters.hpp"


namespace SDK
{

// Function BP_FSMGimmick.BP_FSMGimmick_C.Audio Set Gimmick State False
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_FSMGimmick_C::Audio_Set_Gimmick_State_False()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FSMGimmick_C", "Audio Set Gimmick State False");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_FSMGimmick.BP_FSMGimmick_C.Audio_SetGimmickStateTrue
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_FSMGimmick_C::Audio_SetGimmickStateTrue()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FSMGimmick_C", "Audio_SetGimmickStateTrue");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_FSMGimmick.BP_FSMGimmick_C.BndEvt__BP_FSMGimmick_InteractBox_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature
// (HasOutParams, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// int32                                   OtherBodyIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bFromSweep                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FHitResult&                SweepResult                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void ABP_FSMGimmick_C::BndEvt__BP_FSMGimmick_InteractBox_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FSMGimmick_C", "BndEvt__BP_FSMGimmick_InteractBox_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");

	Params::BP_FSMGimmick_C_BndEvt__BP_FSMGimmick_InteractBox_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;
	Parms.bFromSweep = bFromSweep;
	Parms.SweepResult = std::move(SweepResult);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_FSMGimmick.BP_FSMGimmick_C.BndEvt__BP_FSMGimmick_InteractBox_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// int32                                   OtherBodyIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_FSMGimmick_C::BndEvt__BP_FSMGimmick_InteractBox_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FSMGimmick_C", "BndEvt__BP_FSMGimmick_InteractBox_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature");

	Params::BP_FSMGimmick_C_BndEvt__BP_FSMGimmick_InteractBox_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_FSMGimmick.BP_FSMGimmick_C.BPI_Gimmick_CanOpenNotebook
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                                   Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_FSMGimmick_C::BPI_Gimmick_CanOpenNotebook(bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FSMGimmick_C", "BPI_Gimmick_CanOpenNotebook");

	Params::BP_FSMGimmick_C_BPI_Gimmick_CanOpenNotebook Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function BP_FSMGimmick.BP_FSMGimmick_C.BPI_Gimmick_GetCameraBlendInVariables
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// double*                                 BlendInTime                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double*                                 BlendInExp                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32*                                  ViewTargetBlend                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_FSMGimmick_C::BPI_Gimmick_GetCameraBlendInVariables(double* BlendInTime, double* BlendInExp, int32* ViewTargetBlend)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FSMGimmick_C", "BPI_Gimmick_GetCameraBlendInVariables");

	Params::BP_FSMGimmick_C_BPI_Gimmick_GetCameraBlendInVariables Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (BlendInTime != nullptr)
		*BlendInTime = Parms.BlendInTime;

	if (BlendInExp != nullptr)
		*BlendInExp = Parms.BlendInExp;

	if (ViewTargetBlend != nullptr)
		*ViewTargetBlend = Parms.ViewTargetBlend;
}


// Function BP_FSMGimmick.BP_FSMGimmick_C.BPI_Gimmick_GetCameraBlendOutVariables
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// double*                                 BlendOutTime                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double*                                 BlendOutExp                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32*                                  ViewTargetBlend                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_FSMGimmick_C::BPI_Gimmick_GetCameraBlendOutVariables(double* BlendOutTime, double* BlendOutExp, int32* ViewTargetBlend)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FSMGimmick_C", "BPI_Gimmick_GetCameraBlendOutVariables");

	Params::BP_FSMGimmick_C_BPI_Gimmick_GetCameraBlendOutVariables Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (BlendOutTime != nullptr)
		*BlendOutTime = Parms.BlendOutTime;

	if (BlendOutExp != nullptr)
		*BlendOutExp = Parms.BlendOutExp;

	if (ViewTargetBlend != nullptr)
		*ViewTargetBlend = Parms.ViewTargetBlend;
}


// Function BP_FSMGimmick.BP_FSMGimmick_C.BPI_Gimmick_GetCameraFadeVariables
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                                   BlendInCameraWithFade_0                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool*                                   BlendOutCameraWithFade_0                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double*                                 FadeInTime_0                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_FSMGimmick_C::BPI_Gimmick_GetCameraFadeVariables(bool* BlendInCameraWithFade_0, bool* BlendOutCameraWithFade_0, double* FadeInTime_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FSMGimmick_C", "BPI_Gimmick_GetCameraFadeVariables");

	Params::BP_FSMGimmick_C_BPI_Gimmick_GetCameraFadeVariables Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (BlendInCameraWithFade_0 != nullptr)
		*BlendInCameraWithFade_0 = Parms.BlendInCameraWithFade_0;

	if (BlendOutCameraWithFade_0 != nullptr)
		*BlendOutCameraWithFade_0 = Parms.BlendOutCameraWithFade_0;

	if (FadeInTime_0 != nullptr)
		*FadeInTime_0 = Parms.FadeInTime_0;
}


// Function BP_FSMGimmick.BP_FSMGimmick_C.BPI_Gimmick_GetEnableLightAfterBlendIn
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                                   AfterBlendIn                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double*                                 Delay                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_FSMGimmick_C::BPI_Gimmick_GetEnableLightAfterBlendIn(bool* AfterBlendIn, double* Delay)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FSMGimmick_C", "BPI_Gimmick_GetEnableLightAfterBlendIn");

	Params::BP_FSMGimmick_C_BPI_Gimmick_GetEnableLightAfterBlendIn Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AfterBlendIn != nullptr)
		*AfterBlendIn = Parms.AfterBlendIn;

	if (Delay != nullptr)
		*Delay = Parms.Delay;
}


// Function BP_FSMGimmick.BP_FSMGimmick_C.BPI_Gimmick_GetInteractPlayer
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ANocePlayerCharacter**            InteractPlayer                                         (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_FSMGimmick_C::BPI_Gimmick_GetInteractPlayer(class ANocePlayerCharacter** InteractPlayer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FSMGimmick_C", "BPI_Gimmick_GetInteractPlayer");

	Params::BP_FSMGimmick_C_BPI_Gimmick_GetInteractPlayer Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (InteractPlayer != nullptr)
		*InteractPlayer = Parms.InteractPlayer;
}


// Function BP_FSMGimmick.BP_FSMGimmick_C.BPI_Gimmick_GetNotebookContent
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// ENoceNotebookType*                      NotebookType_0                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName*                            NotebookName_0                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName*                            NotebookContent_0                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_FSMGimmick_C::BPI_Gimmick_GetNotebookContent(ENoceNotebookType* NotebookType_0, class FName* NotebookName_0, class FName* NotebookContent_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FSMGimmick_C", "BPI_Gimmick_GetNotebookContent");

	Params::BP_FSMGimmick_C_BPI_Gimmick_GetNotebookContent Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (NotebookType_0 != nullptr)
		*NotebookType_0 = Parms.NotebookType_0;

	if (NotebookName_0 != nullptr)
		*NotebookName_0 = Parms.NotebookName_0;

	if (NotebookContent_0 != nullptr)
		*NotebookContent_0 = Parms.NotebookContent_0;
}


// Function BP_FSMGimmick.BP_FSMGimmick_C.BPI_Gimmick_GetTargetCamera
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ACameraActor**                    CameraActor                                            (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_FSMGimmick_C::BPI_Gimmick_GetTargetCamera(class ACameraActor** CameraActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FSMGimmick_C", "BPI_Gimmick_GetTargetCamera");

	Params::BP_FSMGimmick_C_BPI_Gimmick_GetTargetCamera Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (CameraActor != nullptr)
		*CameraActor = Parms.CameraActor;
}


// Function BP_FSMGimmick.BP_FSMGimmick_C.BPI_Gimmick_OnCameraBlendIn
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_FSMGimmick_C::BPI_Gimmick_OnCameraBlendIn()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FSMGimmick_C", "BPI_Gimmick_OnCameraBlendIn");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_FSMGimmick.BP_FSMGimmick_C.BPI_Gimmick_OnCameraBlendInFinish
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_FSMGimmick_C::BPI_Gimmick_OnCameraBlendInFinish()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FSMGimmick_C", "BPI_Gimmick_OnCameraBlendInFinish");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_FSMGimmick.BP_FSMGimmick_C.BPI_Gimmick_OnCameraBlendOut
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_FSMGimmick_C::BPI_Gimmick_OnCameraBlendOut()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FSMGimmick_C", "BPI_Gimmick_OnCameraBlendOut");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_FSMGimmick.BP_FSMGimmick_C.BPI_Gimmick_OnComplete
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_FSMGimmick_C::BPI_Gimmick_OnComplete()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FSMGimmick_C", "BPI_Gimmick_OnComplete");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_FSMGimmick.BP_FSMGimmick_C.BPI_Gimmick_OnExit
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_FSMGimmick_C::BPI_Gimmick_OnExit()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FSMGimmick_C", "BPI_Gimmick_OnExit");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_FSMGimmick.BP_FSMGimmick_C.BPI_Gimmick_OnExitBlendOutFinish
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_FSMGimmick_C::BPI_Gimmick_OnExitBlendOutFinish()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FSMGimmick_C", "BPI_Gimmick_OnExitBlendOutFinish");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_FSMGimmick.BP_FSMGimmick_C.BPI_Gimmick_OnFadeOutFinishOnBlendOut
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_FSMGimmick_C::BPI_Gimmick_OnFadeOutFinishOnBlendOut()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FSMGimmick_C", "BPI_Gimmick_OnFadeOutFinishOnBlendOut");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_FSMGimmick.BP_FSMGimmick_C.BPI_Gimmick_OnInterrupted
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_FSMGimmick_C::BPI_Gimmick_OnInterrupted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FSMGimmick_C", "BPI_Gimmick_OnInterrupted");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_FSMGimmick.BP_FSMGimmick_C.BPI_Gimmick_OnNotebookClosed
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_FSMGimmick_C::BPI_Gimmick_OnNotebookClosed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FSMGimmick_C", "BPI_Gimmick_OnNotebookClosed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_FSMGimmick.BP_FSMGimmick_C.BPI_Gimmick_OnOpenNotebook
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_FSMGimmick_C::BPI_Gimmick_OnOpenNotebook()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FSMGimmick_C", "BPI_Gimmick_OnOpenNotebook");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_FSMGimmick.BP_FSMGimmick_C.BPI_Gimmick_OnPlayerUIInput
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// ENoceUIInputAction                      InAction                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_FSMGimmick_C::BPI_Gimmick_OnPlayerUIInput(ENoceUIInputAction InAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FSMGimmick_C", "BPI_Gimmick_OnPlayerUIInput");

	Params::BP_FSMGimmick_C_BPI_Gimmick_OnPlayerUIInput Parms{};

	Parms.InAction = InAction;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_FSMGimmick.BP_FSMGimmick_C.BPI_Gimmick_OnPrepare
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_FSMGimmick_C::BPI_Gimmick_OnPrepare()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FSMGimmick_C", "BPI_Gimmick_OnPrepare");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_FSMGimmick.BP_FSMGimmick_C.BPI_GImmick_OnPrepareBlendOutCamera
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_FSMGimmick_C::BPI_GImmick_OnPrepareBlendOutCamera()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FSMGimmick_C", "BPI_GImmick_OnPrepareBlendOutCamera");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_FSMGimmick.BP_FSMGimmick_C.BPI_Gimmick_SetEnvironmentAdjustWeight
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Weight                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_FSMGimmick_C::BPI_Gimmick_SetEnvironmentAdjustWeight(double Weight)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FSMGimmick_C", "BPI_Gimmick_SetEnvironmentAdjustWeight");

	Params::BP_FSMGimmick_C_BPI_Gimmick_SetEnvironmentAdjustWeight Parms{};

	Parms.Weight = Weight;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_FSMGimmick.BP_FSMGimmick_C.CanInteractWithPawnBP
// (Event, Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           InteractorPawn                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool ABP_FSMGimmick_C::CanInteractWithPawnBP(class AActor* InteractorPawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FSMGimmick_C", "CanInteractWithPawnBP");

	Params::BP_FSMGimmick_C_CanInteractWithPawnBP Parms{};

	Parms.InteractorPawn = InteractorPawn;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_FSMGimmick.BP_FSMGimmick_C.CompleteGimmick
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_FSMGimmick_C::CompleteGimmick()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FSMGimmick_C", "CompleteGimmick");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_FSMGimmick.BP_FSMGimmick_C.DelayEnableLightRoot
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_FSMGimmick_C::DelayEnableLightRoot()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FSMGimmick_C", "DelayEnableLightRoot");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_FSMGimmick.BP_FSMGimmick_C.EnableCameraPostProcess
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    InEnable                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_FSMGimmick_C::EnableCameraPostProcess(bool InEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FSMGimmick_C", "EnableCameraPostProcess");

	Params::BP_FSMGimmick_C_EnableCameraPostProcess Parms{};

	Parms.InEnable = InEnable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_FSMGimmick.BP_FSMGimmick_C.EnableExamineLight
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    EnableLight                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  BlendDuration                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_FSMGimmick_C::EnableExamineLight(bool EnableLight, double BlendDuration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FSMGimmick_C", "EnableExamineLight");

	Params::BP_FSMGimmick_C_EnableExamineLight Parms{};

	Parms.EnableLight = EnableLight;
	Parms.BlendDuration = BlendDuration;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_FSMGimmick.BP_FSMGimmick_C.ExecuteInstantFeedback
// (Event, Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           InteractPawn_0                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool ABP_FSMGimmick_C::ExecuteInstantFeedback(class AActor* InteractPawn_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FSMGimmick_C", "ExecuteInstantFeedback");

	Params::BP_FSMGimmick_C_ExecuteInstantFeedback Parms{};

	Parms.InteractPawn_0 = InteractPawn_0;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_FSMGimmick.BP_FSMGimmick_C.ExecuteUbergraph_BP_FSMGimmick
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_FSMGimmick_C::ExecuteUbergraph_BP_FSMGimmick(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FSMGimmick_C", "ExecuteUbergraph_BP_FSMGimmick");

	Params::BP_FSMGimmick_C_ExecuteUbergraph_BP_FSMGimmick Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_FSMGimmick.BP_FSMGimmick_C.ExitGimmick
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_FSMGimmick_C::ExitGimmick()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FSMGimmick_C", "ExitGimmick");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_FSMGimmick.BP_FSMGimmick_C.FindCameraFromChild
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_FSMGimmick_C::FindCameraFromChild()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FSMGimmick_C", "FindCameraFromChild");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_FSMGimmick.BP_FSMGimmick_C.Get Spot in Front Of Camera
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// double                                  OffsetX                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  OffsetY                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  OffsetZ                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

struct FVector ABP_FSMGimmick_C::Get_Spot_in_Front_Of_Camera(double OffsetX, double OffsetY, double OffsetZ)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FSMGimmick_C", "Get Spot in Front Of Camera");

	Params::BP_FSMGimmick_C_Get_Spot_in_Front_Of_Camera Parms{};

	Parms.OffsetX = OffsetX;
	Parms.OffsetY = OffsetY;
	Parms.OffsetZ = OffsetZ;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_FSMGimmick.BP_FSMGimmick_C.GetBlendInTime
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// double*                                 OutBlendTime                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_FSMGimmick_C::GetBlendInTime(double* OutBlendTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FSMGimmick_C", "GetBlendInTime");

	Params::BP_FSMGimmick_C_GetBlendInTime Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (OutBlendTime != nullptr)
		*OutBlendTime = Parms.OutBlendTime;
}


// Function BP_FSMGimmick.BP_FSMGimmick_C.GetBlendOutTime
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// double*                                 OutBlendTime                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_FSMGimmick_C::GetBlendOutTime(double* OutBlendTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FSMGimmick_C", "GetBlendOutTime");

	Params::BP_FSMGimmick_C_GetBlendOutTime Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (OutBlendTime != nullptr)
		*OutBlendTime = Parms.OutBlendTime;
}


// Function BP_FSMGimmick.BP_FSMGimmick_C.GetDebugTriggerInfo
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)

class FString ABP_FSMGimmick_C::GetDebugTriggerInfo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FSMGimmick_C", "GetDebugTriggerInfo");

	Params::BP_FSMGimmick_C_GetDebugTriggerInfo Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_FSMGimmick.BP_FSMGimmick_C.HandleSaveStatus
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_FSMGimmick_C::HandleSaveStatus()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FSMGimmick_C", "HandleSaveStatus");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_FSMGimmick.BP_FSMGimmick_C.InitializeCameraPostProcess
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_FSMGimmick_C::InitializeCameraPostProcess()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FSMGimmick_C", "InitializeCameraPostProcess");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_FSMGimmick.BP_FSMGimmick_C.InitializeExamineLight
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_FSMGimmick_C::InitializeExamineLight()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FSMGimmick_C", "InitializeExamineLight");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_FSMGimmick.BP_FSMGimmick_C.ManualCheckOverlapping
// (Event, Protected, BlueprintEvent)

void ABP_FSMGimmick_C::ManualCheckOverlapping()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FSMGimmick_C", "ManualCheckOverlapping");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_FSMGimmick.BP_FSMGimmick_C.NeedCustomBlendOut
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool*                                   Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_FSMGimmick_C::NeedCustomBlendOut(bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FSMGimmick_C", "NeedCustomBlendOut");

	Params::BP_FSMGimmick_C_NeedCustomBlendOut Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function BP_FSMGimmick.BP_FSMGimmick_C.NeedSetAudioState
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool*                                   Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_FSMGimmick_C::NeedSetAudioState(bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FSMGimmick_C", "NeedSetAudioState");

	Params::BP_FSMGimmick_C_NeedSetAudioState Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function BP_FSMGimmick.BP_FSMGimmick_C.NeedSetPlayerToUseGimmickState
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool*                                   Yes                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_FSMGimmick_C::NeedSetPlayerToUseGimmickState(bool* Yes)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FSMGimmick_C", "NeedSetPlayerToUseGimmickState");

	Params::BP_FSMGimmick_C_NeedSetPlayerToUseGimmickState Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Yes != nullptr)
		*Yes = Parms.Yes;
}


// Function BP_FSMGimmick.BP_FSMGimmick_C.OnExitBlendOutFinish
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_FSMGimmick_C::OnExitBlendOutFinish()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FSMGimmick_C", "OnExitBlendOutFinish");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_FSMGimmick.BP_FSMGimmick_C.OnGimmickInterrupted
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_FSMGimmick_C::OnGimmickInterrupted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FSMGimmick_C", "OnGimmickInterrupted");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_FSMGimmick.BP_FSMGimmick_C.OnNotebookClosed
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_FSMGimmick_C::OnNotebookClosed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FSMGimmick_C", "OnNotebookClosed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_FSMGimmick.BP_FSMGimmick_C.OnPlayerInputAction
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// ENoceInputAction                        InInputAction                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    InPressed                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_FSMGimmick_C::OnPlayerInputAction(ENoceInputAction InInputAction, bool InPressed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FSMGimmick_C", "OnPlayerInputAction");

	Params::BP_FSMGimmick_C_OnPlayerInputAction Parms{};

	Parms.InInputAction = InInputAction;
	Parms.InPressed = InPressed;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_FSMGimmick.BP_FSMGimmick_C.OnPlayerInputUIAction
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// ENoceUIInputAction                      InInputAction                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    InPressed                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_FSMGimmick_C::OnPlayerInputUIAction(ENoceUIInputAction InInputAction, bool InPressed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FSMGimmick_C", "OnPlayerInputUIAction");

	Params::BP_FSMGimmick_C_OnPlayerInputUIAction Parms{};

	Parms.InInputAction = InInputAction;
	Parms.InPressed = InPressed;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_FSMGimmick.BP_FSMGimmick_C.OnPrepareBlendOutCamera
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_FSMGimmick_C::OnPrepareBlendOutCamera()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FSMGimmick_C", "OnPrepareBlendOutCamera");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_FSMGimmick.BP_FSMGimmick_C.OnPrepareGimmick
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_FSMGimmick_C::OnPrepareGimmick()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FSMGimmick_C", "OnPrepareGimmick");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_FSMGimmick.BP_FSMGimmick_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_FSMGimmick_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FSMGimmick_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_FSMGimmick.BP_FSMGimmick_C.ReceiveEndPlay
// (Event, Protected, BlueprintEvent)
// Parameters:
// EEndPlayReason                          EndPlayReason                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_FSMGimmick_C::ReceiveEndPlay(EEndPlayReason EndPlayReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FSMGimmick_C", "ReceiveEndPlay");

	Params::BP_FSMGimmick_C_ReceiveEndPlay Parms{};

	Parms.EndPlayReason = EndPlayReason;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_FSMGimmick.BP_FSMGimmick_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_FSMGimmick_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FSMGimmick_C", "ReceiveTick");

	Params::BP_FSMGimmick_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_FSMGimmick.BP_FSMGimmick_C.SetCameraPostProcessBlendWeight
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   InWeight                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_FSMGimmick_C::SetCameraPostProcessBlendWeight(float InWeight)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FSMGimmick_C", "SetCameraPostProcessBlendWeight");

	Params::BP_FSMGimmick_C_SetCameraPostProcessBlendWeight Parms{};

	Parms.InWeight = InWeight;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_FSMGimmick.BP_FSMGimmick_C.SetEnvironmentAdjustWeight
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  InWeight                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_FSMGimmick_C::SetEnvironmentAdjustWeight(double InWeight)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FSMGimmick_C", "SetEnvironmentAdjustWeight");

	Params::BP_FSMGimmick_C_SetEnvironmentAdjustWeight Parms{};

	Parms.InWeight = InWeight;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_FSMGimmick.BP_FSMGimmick_C.SetLightIntensity
// (Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Alpha                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_FSMGimmick_C::SetLightIntensity(double Alpha)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FSMGimmick_C", "SetLightIntensity");

	Params::BP_FSMGimmick_C_SetLightIntensity Parms{};

	Parms.Alpha = Alpha;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_FSMGimmick.BP_FSMGimmick_C.SpawnFSMInstance
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_FSMGimmick_C::SpawnFSMInstance()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FSMGimmick_C", "SpawnFSMInstance");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_FSMGimmick.BP_FSMGimmick_C.SpawnTargetCamera
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_FSMGimmick_C::SpawnTargetCamera()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FSMGimmick_C", "SpawnTargetCamera");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_FSMGimmick.BP_FSMGimmick_C.StartGimmick
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ANocePlayerCharacter*             InCharacter                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_FSMGimmick_C::StartGimmick(class ANocePlayerCharacter* InCharacter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FSMGimmick_C", "StartGimmick");

	Params::BP_FSMGimmick_C_StartGimmick Parms{};

	Parms.InCharacter = InCharacter;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_FSMGimmick.BP_FSMGimmick_C.TickLightBlending
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  DeltaTime                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_FSMGimmick_C::TickLightBlending(double DeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FSMGimmick_C", "TickLightBlending");

	Params::BP_FSMGimmick_C_TickLightBlending Parms{};

	Parms.DeltaTime = DeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_FSMGimmick.BP_FSMGimmick_C.TryGetTargetCameraActor
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_FSMGimmick_C::TryGetTargetCameraActor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FSMGimmick_C", "TryGetTargetCameraActor");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_FSMGimmick.BP_FSMGimmick_C.UpdateExamineLightTransform
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_FSMGimmick_C::UpdateExamineLightTransform()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FSMGimmick_C", "UpdateExamineLightTransform");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_FSMGimmick.BP_FSMGimmick_C.UserConstructionScript
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ABP_FSMGimmick_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FSMGimmick_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}

}

