#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Dev_EasyRouteMaster

#include "Basic.hpp"

#include "BP_Dev_EasyRouteMaster_classes.hpp"
#include "BP_Dev_EasyRouteMaster_parameters.hpp"


namespace SDK
{

// Function BP_Dev_EasyRouteMaster.BP_Dev_EasyRouteMaster_C.StopEasyNode
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Index_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Dev_EasyRouteMaster_C::StopEasyNode(int32 Index_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Dev_EasyRouteMaster_C", "StopEasyNode");

	Params::BP_Dev_EasyRouteMaster_C_StopEasyNode Parms{};

	Parms.Index_0 = Index_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Dev_EasyRouteMaster.BP_Dev_EasyRouteMaster_C.StartEasyRoute
// (BlueprintCallable, BlueprintEvent)

void ABP_Dev_EasyRouteMaster_C::StartEasyRoute()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Dev_EasyRouteMaster_C", "StartEasyRoute");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Dev_EasyRouteMaster.BP_Dev_EasyRouteMaster_C.StartEasyNode
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Index_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Dev_EasyRouteMaster_C::StartEasyNode(int32 Index_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Dev_EasyRouteMaster_C", "StartEasyNode");

	Params::BP_Dev_EasyRouteMaster_C_StartEasyNode Parms{};

	Parms.Index_0 = Index_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Dev_EasyRouteMaster.BP_Dev_EasyRouteMaster_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Dev_EasyRouteMaster_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Dev_EasyRouteMaster_C", "ReceiveTick");

	Params::BP_Dev_EasyRouteMaster_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Dev_EasyRouteMaster.BP_Dev_EasyRouteMaster_C.ReceiveEndPlay
// (Event, Protected, BlueprintEvent)
// Parameters:
// EEndPlayReason                          EndPlayReason                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Dev_EasyRouteMaster_C::ReceiveEndPlay(EEndPlayReason EndPlayReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Dev_EasyRouteMaster_C", "ReceiveEndPlay");

	Params::BP_Dev_EasyRouteMaster_C_ReceiveEndPlay Parms{};

	Parms.EndPlayReason = EndPlayReason;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Dev_EasyRouteMaster.BP_Dev_EasyRouteMaster_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_Dev_EasyRouteMaster_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Dev_EasyRouteMaster_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Dev_EasyRouteMaster.BP_Dev_EasyRouteMaster_C.OnGameProgressChanged
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FGameplayTag&              NewTag                                                 (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)

void ABP_Dev_EasyRouteMaster_C::OnGameProgressChanged(const struct FGameplayTag& NewTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Dev_EasyRouteMaster_C", "OnGameProgressChanged");

	Params::BP_Dev_EasyRouteMaster_C_OnGameProgressChanged Parms{};

	Parms.NewTag = std::move(NewTag);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Dev_EasyRouteMaster.BP_Dev_EasyRouteMaster_C.OnEasyNodeEnd
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_Dev_EasyRouteMaster_C::OnEasyNodeEnd()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Dev_EasyRouteMaster_C", "OnEasyNodeEnd");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Dev_EasyRouteMaster.BP_Dev_EasyRouteMaster_C.GetCurrentPivot
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                                   IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

struct FVector ABP_Dev_EasyRouteMaster_C::GetCurrentPivot(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Dev_EasyRouteMaster_C", "GetCurrentPivot");

	Params::BP_Dev_EasyRouteMaster_C_GetCurrentPivot Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;
}


// Function BP_Dev_EasyRouteMaster.BP_Dev_EasyRouteMaster_C.ExecuteUbergraph_BP_Dev_EasyRouteMaster
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Dev_EasyRouteMaster_C::ExecuteUbergraph_BP_Dev_EasyRouteMaster(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Dev_EasyRouteMaster_C", "ExecuteUbergraph_BP_Dev_EasyRouteMaster");

	Params::BP_Dev_EasyRouteMaster_C_ExecuteUbergraph_BP_Dev_EasyRouteMaster Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Dev_EasyRouteMaster.BP_Dev_EasyRouteMaster_C.CollectNodes
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_Dev_EasyRouteMaster_C::CollectNodes()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Dev_EasyRouteMaster_C", "CollectNodes");

	UObject::ProcessEvent(Func, nullptr);
}

}

