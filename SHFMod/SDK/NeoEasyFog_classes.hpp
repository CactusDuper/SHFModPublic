#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: NeoEasyFog

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// Class NeoEasyFog.NeoEasyFogActor
// 0x0088 (0x0318 - 0x0290)
class ANeoEasyFogActor final : public AActor
{
public:
	bool                                          bPathtracerToggle;                                 // 0x0290(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_291[0x7];                                      // 0x0291(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture*                               BaseColorMap;                                      // 0x0298(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTexture*                               OpacityMap;                                        // 0x02A0(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTexture*                               NormalMap;                                         // 0x02A8(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLinearColor                           BaseColorTint;                                     // 0x02B0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         BaseColorContrast;                                 // 0x02C0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         BaseColorIntensity;                                // 0x02C4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         EmissiveIntensity;                                 // 0x02C8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         NormalMapIntensity;                                // 0x02CC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         FogDensity;                                        // 0x02D0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         GeometryFadingDistance;                            // 0x02D4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         CameraFadingDistance;                              // 0x02D8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bEyeAdaptionSwitch;                                // 0x02DC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bCastShadow;                                       // 0x02DD(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_2DE[0x2];                                      // 0x02DE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ViewAngleFade;                                     // 0x02E0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         WindIntensity;                                     // 0x02E4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         WindSpeedY;                                        // 0x02E8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         WindSpeedX;                                        // 0x02EC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         WindNoiseTiling;                                   // 0x02F0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         WindNoiseContrast;                                 // 0x02F4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStaticMeshComponent*                   FogCard;                                           // 0x02F8(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UMaterialInstanceDynamic*               FogMaterialInstance;                               // 0x0300(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UMaterialInterface*                     SourceMaterial;                                    // 0x0308(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UMaterialInterface*                     PathtracerMaterial;                                // 0x0310(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	void Init(bool bRecreatMat);
	void SetBaseColorContrast(float bValue);
	void SetBaseColorIntensity(float bValue);
	void SetBaseColorTint(const struct FLinearColor& bValue);
	void SetCameraFadingDistance(float bValue);
	void SetCastShadow(bool bValue);
	void SetEmissiveIntensity(float bValue);
	void SetEyeAdaptionSwitch(bool bValue);
	void SetFogDensity(float bValue);
	void SetGeometryFadingDistance(float bValue);
	void SetNormalMapIntensity(float bValue);
	void SetPathtracerToggle(bool bValue);
	void SetViewAngleFade(float bValue);
	void SetWindIntensity(float bValue);
	void SetWindNoiseContrast(float bValue);
	void SetWindNoiseTiling(float bValue);
	void SetWindSpeedX(float bValue);
	void SetWindSpeedY(float bValue);

	float GetBaseColorContrast() const;
	float GetBaseColorIntensity() const;
	struct FLinearColor GetBaseColorTint() const;
	float GetCameraFadingDistance() const;
	bool GetCastShadow() const;
	float GetEmissiveIntensity() const;
	bool GetEyeAdaptionSwitch() const;
	float GetFogDensity() const;
	float GetGeometryFadingDistance() const;
	float GetNormalMapIntensity() const;
	bool GetPathtracerToggle() const;
	float GetViewAngleFade() const;
	float GetWindIntensity() const;
	float GetWindNoiseContrast() const;
	float GetWindNoiseTiling() const;
	float GetWindSpeedX() const;
	float GetWindSpeedY() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("NeoEasyFogActor")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"NeoEasyFogActor")
	}
	static class ANeoEasyFogActor* GetDefaultObj()
	{
		return GetDefaultObjImpl<ANeoEasyFogActor>();
	}
};
DUMPER7_ASSERTS_ANeoEasyFogActor;

}

