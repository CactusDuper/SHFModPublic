#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_DoorShoji

#include "Basic.hpp"

#include "BP_DoorShoji_classes.hpp"
#include "BP_DoorShoji_parameters.hpp"


namespace SDK
{

// Function BP_DoorShoji.BP_DoorShoji_C.AdjustTriggerPosition
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_DoorShoji_C::AdjustTriggerPosition()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DoorShoji_C", "AdjustTriggerPosition");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DoorShoji.BP_DoorShoji_C.Audio_PortalOpen
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Lerp                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_DoorShoji_C::Audio_PortalOpen(double Lerp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DoorShoji_C", "Audio_PortalOpen");

	Params::BP_DoorShoji_C_Audio_PortalOpen Parms{};

	Parms.Lerp = Lerp;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DoorShoji.BP_DoorShoji_C.Audio_SetPortalPosition
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_DoorShoji_C::Audio_SetPortalPosition()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DoorShoji_C", "Audio_SetPortalPosition");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DoorShoji.BP_DoorShoji_C.BndEvt__BP_DoorShoji_A_TriggerBox_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature
// (HasOutParams, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// int32                                   OtherBodyIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bFromSweep                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FHitResult&                SweepResult                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void ABP_DoorShoji_C::BndEvt__BP_DoorShoji_A_TriggerBox_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DoorShoji_C", "BndEvt__BP_DoorShoji_A_TriggerBox_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");

	Params::BP_DoorShoji_C_BndEvt__BP_DoorShoji_A_TriggerBox_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;
	Parms.bFromSweep = bFromSweep;
	Parms.SweepResult = std::move(SweepResult);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DoorShoji.BP_DoorShoji_C.BndEvt__BP_DoorShoji_A_TriggerBox_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// int32                                   OtherBodyIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_DoorShoji_C::BndEvt__BP_DoorShoji_A_TriggerBox_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DoorShoji_C", "BndEvt__BP_DoorShoji_A_TriggerBox_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature");

	Params::BP_DoorShoji_C_BndEvt__BP_DoorShoji_A_TriggerBox_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DoorShoji.BP_DoorShoji_C.BP_OnRecordLoaded
// (Event, Public, BlueprintEvent)

void ABP_DoorShoji_C::BP_OnRecordLoaded()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DoorShoji_C", "BP_OnRecordLoaded");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DoorShoji.BP_DoorShoji_C.BPI_CloseDoor
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  InPlayRate                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_DoorShoji_C::BPI_CloseDoor(double InPlayRate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DoorShoji_C", "BPI_CloseDoor");

	Params::BP_DoorShoji_C_BPI_CloseDoor Parms{};

	Parms.InPlayRate = InPlayRate;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DoorShoji.BP_DoorShoji_C.BPI_DoMotionWarp
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                                   Value                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_DoorShoji_C::BPI_DoMotionWarp(bool* Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DoorShoji_C", "BPI_DoMotionWarp");

	Params::BP_DoorShoji_C_BPI_DoMotionWarp Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Value != nullptr)
		*Value = Parms.Value;
}


// Function BP_DoorShoji.BP_DoorShoji_C.BPI_Door_AutoUseCameraMode
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                                   Value                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_DoorShoji_C::BPI_Door_AutoUseCameraMode(bool* Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DoorShoji_C", "BPI_Door_AutoUseCameraMode");

	Params::BP_DoorShoji_C_BPI_Door_AutoUseCameraMode Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Value != nullptr)
		*Value = Parms.Value;
}


// Function BP_DoorShoji.BP_DoorShoji_C.BPI_Door_IsOpen
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                                   IsOpen                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_DoorShoji_C::BPI_Door_IsOpen(bool* IsOpen)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DoorShoji_C", "BPI_Door_IsOpen");

	Params::BP_DoorShoji_C_BPI_Door_IsOpen Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsOpen != nullptr)
		*IsOpen = Parms.IsOpen;
}


// Function BP_DoorShoji.BP_DoorShoji_C.BPI_ForceCloseDoor
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  AnimStartTime                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_DoorShoji_C::BPI_ForceCloseDoor(double AnimStartTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DoorShoji_C", "BPI_ForceCloseDoor");

	Params::BP_DoorShoji_C_BPI_ForceCloseDoor Parms{};

	Parms.AnimStartTime = AnimStartTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DoorShoji.BP_DoorShoji_C.BPI_ForceOpenDoor
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  AnimStartTime                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_DoorShoji_C::BPI_ForceOpenDoor(double AnimStartTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DoorShoji_C", "BPI_ForceOpenDoor");

	Params::BP_DoorShoji_C_BPI_ForceOpenDoor Parms{};

	Parms.AnimStartTime = AnimStartTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DoorShoji.BP_DoorShoji_C.BPI_GetAnimID
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32*                                  OutAnimID                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_DoorShoji_C::BPI_GetAnimID(int32* OutAnimID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DoorShoji_C", "BPI_GetAnimID");

	Params::BP_DoorShoji_C_BPI_GetAnimID Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (OutAnimID != nullptr)
		*OutAnimID = Parms.OutAnimID;
}


// Function BP_DoorShoji.BP_DoorShoji_C.BPI_GetCameraRotation
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FRotator*                        OutValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_DoorShoji_C::BPI_GetCameraRotation(struct FRotator* OutValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DoorShoji_C", "BPI_GetCameraRotation");

	Params::BP_DoorShoji_C_BPI_GetCameraRotation Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (OutValue != nullptr)
		*OutValue = std::move(Parms.OutValue);
}


// Function BP_DoorShoji.BP_DoorShoji_C.BPI_GetMotionWarpMarker
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             WarpTarget                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsLantern                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector*                         OutVector                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FRotator*                        OutRotation                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_DoorShoji_C::BPI_GetMotionWarpMarker(class FName WarpTarget, bool IsLantern, struct FVector* OutVector, struct FRotator* OutRotation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DoorShoji_C", "BPI_GetMotionWarpMarker");

	Params::BP_DoorShoji_C_BPI_GetMotionWarpMarker Parms{};

	Parms.WarpTarget = WarpTarget;
	Parms.IsLantern = IsLantern;

	UObject::ProcessEvent(Func, &Parms);

	if (OutVector != nullptr)
		*OutVector = std::move(Parms.OutVector);

	if (OutRotation != nullptr)
		*OutRotation = std::move(Parms.OutRotation);
}


// Function BP_DoorShoji.BP_DoorShoji_C.BPI_GetShojiHandMaker
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                                   OutUseHandeIK                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector*                         OutMaker                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_DoorShoji_C::BPI_GetShojiHandMaker(bool* OutUseHandeIK, struct FVector* OutMaker)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DoorShoji_C", "BPI_GetShojiHandMaker");

	Params::BP_DoorShoji_C_BPI_GetShojiHandMaker Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (OutUseHandeIK != nullptr)
		*OutUseHandeIK = Parms.OutUseHandeIK;

	if (OutMaker != nullptr)
		*OutMaker = std::move(Parms.OutMaker);
}


// Function BP_DoorShoji.BP_DoorShoji_C.BPI_IsDamageLimitHealth
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                                   OutValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_DoorShoji_C::BPI_IsDamageLimitHealth(bool* OutValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DoorShoji_C", "BPI_IsDamageLimitHealth");

	Params::BP_DoorShoji_C_BPI_IsDamageLimitHealth Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (OutValue != nullptr)
		*OutValue = Parms.OutValue;
}


// Function BP_DoorShoji.BP_DoorShoji_C.BPI_IsDoorReady
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                                   OutReady                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_DoorShoji_C::BPI_IsDoorReady(bool* OutReady)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DoorShoji_C", "BPI_IsDoorReady");

	Params::BP_DoorShoji_C_BPI_IsDoorReady Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (OutReady != nullptr)
		*OutReady = Parms.OutReady;
}


// Function BP_DoorShoji.BP_DoorShoji_C.BPI_IsShojiDoor
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                                   IsShoji                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_DoorShoji_C::BPI_IsShojiDoor(bool* IsShoji)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DoorShoji_C", "BPI_IsShojiDoor");

	Params::BP_DoorShoji_C_BPI_IsShojiDoor Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsShoji != nullptr)
		*IsShoji = Parms.IsShoji;
}


// Function BP_DoorShoji.BP_DoorShoji_C.BPI_OpenDoor
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  InPlayRate                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_DoorShoji_C::BPI_OpenDoor(double InPlayRate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DoorShoji_C", "BPI_OpenDoor");

	Params::BP_DoorShoji_C_BPI_OpenDoor Parms{};

	Parms.InPlayRate = InPlayRate;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DoorShoji.BP_DoorShoji_C.BPI_OpenDoorHalf
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  InPlayRate                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_DoorShoji_C::BPI_OpenDoorHalf(double InPlayRate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DoorShoji_C", "BPI_OpenDoorHalf");

	Params::BP_DoorShoji_C_BPI_OpenDoorHalf Parms{};

	Parms.InPlayRate = InPlayRate;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DoorShoji.BP_DoorShoji_C.BPI_ReturnToIdle
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_DoorShoji_C::BPI_ReturnToIdle()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DoorShoji_C", "BPI_ReturnToIdle");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DoorShoji.BP_DoorShoji_C.BPI_UseFigerAdd
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                                   Value                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_DoorShoji_C::BPI_UseFigerAdd(bool* Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DoorShoji_C", "BPI_UseFigerAdd");

	Params::BP_DoorShoji_C_BPI_UseFigerAdd Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Value != nullptr)
		*Value = Parms.Value;
}


// Function BP_DoorShoji.BP_DoorShoji_C.CanInteractWithPawnBP
// (Event, Protected, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           InteractorPawn                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool ABP_DoorShoji_C::CanInteractWithPawnBP(class AActor* InteractorPawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DoorShoji_C", "CanInteractWithPawnBP");

	Params::BP_DoorShoji_C_CanInteractWithPawnBP Parms{};

	Parms.InteractorPawn = InteractorPawn;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_DoorShoji.BP_DoorShoji_C.CanUseDoor
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool ABP_DoorShoji_C::CanUseDoor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DoorShoji_C", "CanUseDoor");

	Params::BP_DoorShoji_C_CanUseDoor Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_DoorShoji.BP_DoorShoji_C.DelaySetMeshTickEnabled
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   InDelay                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    InEnabled                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_DoorShoji_C::DelaySetMeshTickEnabled(float InDelay, bool InEnabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DoorShoji_C", "DelaySetMeshTickEnabled");

	Params::BP_DoorShoji_C_DelaySetMeshTickEnabled Parms{};

	Parms.InDelay = InDelay;
	Parms.InEnabled = InEnabled;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DoorShoji.BP_DoorShoji_C.ExecuteUbergraph_BP_DoorShoji
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_DoorShoji_C::ExecuteUbergraph_BP_DoorShoji(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DoorShoji_C", "ExecuteUbergraph_BP_DoorShoji");

	Params::BP_DoorShoji_C_ExecuteUbergraph_BP_DoorShoji Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DoorShoji.BP_DoorShoji_C.GetAnimID
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32*                                  OutAnimID                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_DoorShoji_C::GetAnimID(int32* OutAnimID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DoorShoji_C", "GetAnimID");

	Params::BP_DoorShoji_C_GetAnimID Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (OutAnimID != nullptr)
		*OutAnimID = Parms.OutAnimID;
}


// Function BP_DoorShoji.BP_DoorShoji_C.GetMotionWarpMarker
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsLantern                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector*                         Return_Value_Location                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FRotator*                        Return_Value_Rotation                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_DoorShoji_C::GetMotionWarpMarker(bool IsLantern, struct FVector* Return_Value_Location, struct FRotator* Return_Value_Rotation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DoorShoji_C", "GetMotionWarpMarker");

	Params::BP_DoorShoji_C_GetMotionWarpMarker Parms{};

	Parms.IsLantern = IsLantern;

	UObject::ProcessEvent(Func, &Parms);

	if (Return_Value_Location != nullptr)
		*Return_Value_Location = std::move(Parms.Return_Value_Location);

	if (Return_Value_Rotation != nullptr)
		*Return_Value_Rotation = std::move(Parms.Return_Value_Rotation);
}


// Function BP_DoorShoji.BP_DoorShoji_C.HandleInteractEnable
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    InEnable                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_DoorShoji_C::HandleInteractEnable(bool InEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DoorShoji_C", "HandleInteractEnable");

	Params::BP_DoorShoji_C_HandleInteractEnable Parms{};

	Parms.InEnable = InEnable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DoorShoji.BP_DoorShoji_C.IsPlayerInBattling
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool ABP_DoorShoji_C::IsPlayerInBattling()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DoorShoji_C", "IsPlayerInBattling");

	Params::BP_DoorShoji_C_IsPlayerInBattling Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_DoorShoji.BP_DoorShoji_C.OnBeginOverlap_LookAtTrigger1
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// int32                                   OtherBodyIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bFromSweep                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FHitResult&                SweepResult                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void ABP_DoorShoji_C::OnBeginOverlap_LookAtTrigger1(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DoorShoji_C", "OnBeginOverlap_LookAtTrigger1");

	Params::BP_DoorShoji_C_OnBeginOverlap_LookAtTrigger1 Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;
	Parms.bFromSweep = bFromSweep;
	Parms.SweepResult = std::move(SweepResult);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DoorShoji.BP_DoorShoji_C.OnBeginOverlap_LookAtTrigger2
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// int32                                   OtherBodyIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bFromSweep                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FHitResult&                SweepResult                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void ABP_DoorShoji_C::OnBeginOverlap_LookAtTrigger2(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DoorShoji_C", "OnBeginOverlap_LookAtTrigger2");

	Params::BP_DoorShoji_C_OnBeginOverlap_LookAtTrigger2 Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;
	Parms.bFromSweep = bFromSweep;
	Parms.SweepResult = std::move(SweepResult);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DoorShoji.BP_DoorShoji_C.OnDoorStartTimeChanged
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  InDoorStartTime                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_DoorShoji_C::OnDoorStartTimeChanged(double InDoorStartTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DoorShoji_C", "OnDoorStartTimeChanged");

	Params::BP_DoorShoji_C_OnDoorStartTimeChanged Parms{};

	Parms.InDoorStartTime = InDoorStartTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DoorShoji.BP_DoorShoji_C.OnEndOverlap_LookAtTrigger1
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// int32                                   OtherBodyIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_DoorShoji_C::OnEndOverlap_LookAtTrigger1(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DoorShoji_C", "OnEndOverlap_LookAtTrigger1");

	Params::BP_DoorShoji_C_OnEndOverlap_LookAtTrigger1 Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DoorShoji.BP_DoorShoji_C.OnEndOverlap_LookAtTrigger2
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// int32                                   OtherBodyIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_DoorShoji_C::OnEndOverlap_LookAtTrigger2(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DoorShoji_C", "OnEndOverlap_LookAtTrigger2");

	Params::BP_DoorShoji_C_OnEndOverlap_LookAtTrigger2 Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DoorShoji.BP_DoorShoji_C.OnLeftOpenHalf
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_DoorShoji_C::OnLeftOpenHalf()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DoorShoji_C", "OnLeftOpenHalf");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DoorShoji.BP_DoorShoji_C.OnPlayerInteracting
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    InUsing                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_DoorShoji_C::OnPlayerInteracting(bool InUsing)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DoorShoji_C", "OnPlayerInteracting");

	Params::BP_DoorShoji_C_OnPlayerInteracting Parms{};

	Parms.InUsing = InUsing;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DoorShoji.BP_DoorShoji_C.OnSetMeshTickEnabled
// (BlueprintCallable, BlueprintEvent)

void ABP_DoorShoji_C::OnSetMeshTickEnabled()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DoorShoji_C", "OnSetMeshTickEnabled");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DoorShoji.BP_DoorShoji_C.Play Open Half
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  InPlayRate                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_DoorShoji_C::Play_Open_Half(double InPlayRate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DoorShoji_C", "Play Open Half");

	Params::BP_DoorShoji_C_Play_Open_Half Parms{};

	Parms.InPlayRate = InPlayRate;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DoorShoji.BP_DoorShoji_C.PlayClose
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  InPlayRate                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_DoorShoji_C::PlayClose(double InPlayRate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DoorShoji_C", "PlayClose");

	Params::BP_DoorShoji_C_PlayClose Parms{};

	Parms.InPlayRate = InPlayRate;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DoorShoji.BP_DoorShoji_C.PlayOpen
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  InPlayRate                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_DoorShoji_C::PlayOpen(double InPlayRate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DoorShoji_C", "PlayOpen");

	Params::BP_DoorShoji_C_PlayOpen Parms{};

	Parms.InPlayRate = InPlayRate;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DoorShoji.BP_DoorShoji_C.PortalOpen_Fast__FinishedFunc
// (BlueprintEvent)

void ABP_DoorShoji_C::PortalOpen_Fast__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DoorShoji_C", "PortalOpen_Fast__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DoorShoji.BP_DoorShoji_C.PortalOpen_Fast__UpdateFunc
// (BlueprintEvent)

void ABP_DoorShoji_C::PortalOpen_Fast__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DoorShoji_C", "PortalOpen_Fast__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DoorShoji.BP_DoorShoji_C.PortalOpen_Normal__FinishedFunc
// (BlueprintEvent)

void ABP_DoorShoji_C::PortalOpen_Normal__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DoorShoji_C", "PortalOpen_Normal__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DoorShoji.BP_DoorShoji_C.PortalOpen_Normal__UpdateFunc
// (BlueprintEvent)

void ABP_DoorShoji_C::PortalOpen_Normal__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DoorShoji_C", "PortalOpen_Normal__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DoorShoji.BP_DoorShoji_C.Preview Half Open
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_DoorShoji_C::Preview_Half_Open()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DoorShoji_C", "Preview Half Open");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DoorShoji.BP_DoorShoji_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_DoorShoji_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DoorShoji_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DoorShoji.BP_DoorShoji_C.ReceiveEndPlay
// (Event, Protected, BlueprintEvent)
// Parameters:
// EEndPlayReason                          EndPlayReason                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_DoorShoji_C::ReceiveEndPlay(EEndPlayReason EndPlayReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DoorShoji_C", "ReceiveEndPlay");

	Params::BP_DoorShoji_C_ReceiveEndPlay Parms{};

	Parms.EndPlayReason = EndPlayReason;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DoorShoji.BP_DoorShoji_C.SetPortalScale
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FVector&                   Scale                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const class FString&                    Reason                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void ABP_DoorShoji_C::SetPortalScale(const struct FVector& Scale, const class FString& Reason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DoorShoji_C", "SetPortalScale");

	Params::BP_DoorShoji_C_SetPortalScale Parms{};

	Parms.Scale = std::move(Scale);
	Parms.Reason = std::move(Reason);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DoorShoji.BP_DoorShoji_C.Setup
// (BlueprintCallable, BlueprintEvent)

void ABP_DoorShoji_C::Setup()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DoorShoji_C", "Setup");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DoorShoji.BP_DoorShoji_C.UpdateActiveTrigger
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_DoorShoji_C::UpdateActiveTrigger()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DoorShoji_C", "UpdateActiveTrigger");

	UObject::ProcessEvent(Func, nullptr);
}

}

