#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_NoceHitPerformComponent

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "CoreUObject_structs.hpp"
#include "GameNoce_structs.hpp"
#include "NeoAudio_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_NoceHitPerformComponent.BP_NoceHitPerformComponent_C
// 0x0158 (0x01F8 - 0x00A0)
class UBP_NoceHitPerformComponent_C final : public UActorComponent
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x00A0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	bool                                          DebugHitMove;                                      // 0x00A8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UNoceHitPerformDataAsset*               HitPerformDataAsset;                               // 0x00B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UNoceDeflectPerformDataAsset*           DeflectPerformDataAsset;                           // 0x00B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UNoceDeflectPerformDataAsset*           WeaponBreakPerformDataAsset;                       // 0x00C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UNoceHitFriendDataAsset*                HitFriendDataAsset;                                // 0x00C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             OwnerCharacter;                                    // 0x00D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	class UNeoAudioSoundComponent*                NeoAudioSound;                                     // 0x00D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 MeshComponent;                                     // 0x00E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, NoDestructor, AdvancedDisplay, UObjectWrapper, HasGetValueTypeHash)
	class UCurveFloat*                            HitMoveCurve;                                      // 0x00E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	double                                        HitMoveCurveMulipiler;                             // 0x00F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HitMoveVector;                                     // 0x00F8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	double                                        HitMoveTime;                                       // 0x0110(0x0008)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	double                                        HitMoveTimer;                                      // 0x0118(0x0008)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	int32                                         HitMoveApplyCount;                                 // 0x0120(0x0004)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	uint8                                         Pad_124[0x4];                                      // 0x0124(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        TotalHitMoveDistance;                              // 0x0128(0x0008)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	class UNoceTimeComponent*                     TimeComponent;                                     // 0x0130(0x0008)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	class UNoceCheatManager*                      NoceCheatManager;                                  // 0x0138(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FSoftObjectPath                        DebugAxisVFX;                                      // 0x0140(0x0020)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	struct FNeoAudioTriggerIdHandle               UISoundTriggerId_InputForbidStaimanTired;          // 0x0160(0x0008)(Edit, BlueprintVisible, NoDestructor)
	struct FNeoAudioTriggerIdHandle               UISoundTriggerId_FocusCharged;                     // 0x0168(0x0008)(Edit, BlueprintVisible, NoDestructor)
	double                                        NoiseDuration;                                     // 0x0170(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        NoiseCounts;                                       // 0x0178(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CurrNoiseCount;                                    // 0x0180(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                NoiseLocation;                                     // 0x0188(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 NoiseCauser;                                       // 0x01A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           NoiseTimerHandle;                                  // 0x01A8(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class USkinnedDecalSampler*                   SkinnedDecalSampler;                               // 0x01B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	double                                        NoiseLoudness;                                     // 0x01B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        NoiseMaxRange;                                     // 0x01C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   NoiseTag;                                          // 0x01C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          NoiseUseLineTrace;                                 // 0x01D0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D1[0x7];                                      // 0x01D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        ClearSpawnedNiagaraTime;                           // 0x01D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        ClearSpawnedNiagaraTimer;                          // 0x01E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UNiagaraComponent*>              SpawnedNiagaras;                                   // 0x01E8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)

public:
	void ApplyHitMoveDistance(double InQueryTime);
	void ApplyHitStop(class AActor* InAttackActor, class AActor* InHitActor, double InTimeDilation, double InDuration);
	void ClearSpawnedNiagara(bool InForceClear, double InDeltaTime);
	void ExecuteUbergraph_BP_NoceHitPerformComponent(int32 EntryPoint);
	struct FNoceDeflectPerformSetting FindDeflectPerformSetting(class UNoceDeflectPerformDataAsset*& InDeflectPerformDataAsset, class FName InWeaponName, bool* ReturnFind);
	void FindHitPerformComboRotation(class AActor* InAttacker, class FName InComboName, bool* OutFind, struct FRotator* OutRotator);
	struct FNoceHitPerformSetting FindHitPerformSetting(class AActor* InAttacker, class FName InComboName, bool* ReturnFind);
	void FindWincePerformUnit(ENoceWinceType InWinceType, bool* OutFind, struct FNoceWincePerformUnit* OutWincePerformUnit);
	void GetHitFriendWinceType(class FName ComboName, ENoceWinceType* MyWinceType);
	void GetHitPerformGroupName(class AActor* InAttacker, class FName* GroupName);
	void Handle_on_Deflect(struct FNoceAttackDeflectResult& InDeflectResult);
	void HandleHitMove(const struct FNoceAttackHitResult& InAttackHitResult, ENoceWinceType InWinceType);
	void HandleHitPerform(struct FNoceAttackHitResult& InAttackHitResult);
	void HandleOnEnterEvent();
	void HandleOnWince(class AActor* InAttacker, ENoceWinceType InWinceType, const struct FVector& InHitLocation);
	void Initialize();
	void OnPlayerFocusCharged();
	void OnPlayerInputForbidWhenStaminaTired();
	void Play_Force_Feedback_and_UISound(ENoceControllerVibrationType InVibrationType, const struct FNeoAudioTriggerIdHandle& InUISoundTriggerId);
	void PlayAudio(const struct FNeoAudioTriggerIdHandle& InAudioTriggerIdHandle, const struct FVector& InAudioPlayLocation, class AActor* Character, class AActor* HitActor);
	void PlayCameraShake(TSubclassOf<class UCameraShakeBase> InCameraShakeClass);
	void PlayForceFeedback(class UForceFeedbackEffect* InForceFeedback);
	void PlayParticle(bool InAffectedByHitStop, bool InAttached, class AActor* InAttacker, class UNiagaraSystem* InNiagaraSystem, class FName InComboName, class FName InHitBoneName, const struct FVector& InImpactPoint, const struct FVector& InImpactNormal, const struct FVector& InCloseHitLocation, ENoceHitPerformParticleRotationType InParticleRotationType, ENoceWoundType InWoundType);
	void PlayParticleDeflect(bool InAffectedByHitStop, bool InAttached, class UNiagaraSystem* InNiagaraSystem, class UPrimitiveComponent* InMeshComp, class FName InHitBoneName, const struct FVector& InImpactPoint, const struct FVector& InImpactNormal);
	void PlayPostProcess(ENoceHitPerformPostProcessType InPostProcessType);
	void PlayWinceParticle(bool InAffectedByHitStop, bool InAttached, class UNiagaraSystem* InNiagaraSystem, const struct FVector& InSpawnLocation);
	void ReceiveBeginPlay();
	void ReceiveEndPlay(EEndPlayReason EndPlayReason);
	void ReceiveTick(float DeltaSeconds);
	void ReportNoiseByTimer();
	void ReportNoiseEvent(class AActor* InAttacker, const struct FVector& InLocation, double InLoudness, double InMaxRange, class FName InTag, bool InUseLineTrace, bool InHit);
	void RequestCurveMove(class UCurveFloat* MoveCurve, const struct FVector& MoveVector);
	void SetAudioSwitch(class UObject* Object, class UNeoAudioSoundComponent* NeoAudioSound_0);
	void ShowDebugVFXAtLocation(const struct FVector& InLocation, const struct FRotator& InRotation);
	void ShowDebugVFXAttached(class FName InBoneName, const struct FVector& InLocation, const struct FRotator& InRotation);
	void UpdateHitMove(double InDeltaTime);

public:
	static class UClass* StaticClass()
	{
		BP_STATIC_CLASS_IMPL("BP_NoceHitPerformComponent_C")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"BP_NoceHitPerformComponent_C")
	}
	static class UBP_NoceHitPerformComponent_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_NoceHitPerformComponent_C>();
	}
};
DUMPER7_ASSERTS_UBP_NoceHitPerformComponent_C;

}

