#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_MultiRummage_Base

#include "Basic.hpp"

#include "BP_MultiRummage_Base_classes.hpp"
#include "BP_MultiRummage_Base_parameters.hpp"


namespace SDK
{

// Function BP_MultiRummage_Base.BP_MultiRummage_Base_C.Audio Set Gimmick State False
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_MultiRummage_Base_C::Audio_Set_Gimmick_State_False()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MultiRummage_Base_C", "Audio Set Gimmick State False");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MultiRummage_Base.BP_MultiRummage_Base_C.Audio_SetGimmickStateTrue
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_MultiRummage_Base_C::Audio_SetGimmickStateTrue()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MultiRummage_Base_C", "Audio_SetGimmickStateTrue");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MultiRummage_Base.BP_MultiRummage_Base_C.CanCompeteGimmick
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                                   Output                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MultiRummage_Base_C::CanCompeteGimmick(bool* Output)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MultiRummage_Base_C", "CanCompeteGimmick");

	Params::BP_MultiRummage_Base_C_CanCompeteGimmick Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Output != nullptr)
		*Output = Parms.Output;
}


// Function BP_MultiRummage_Base.BP_MultiRummage_Base_C.CanInteractWithPawnBP
// (Event, Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           InteractorPawn                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool ABP_MultiRummage_Base_C::CanInteractWithPawnBP(class AActor* InteractorPawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MultiRummage_Base_C", "CanInteractWithPawnBP");

	Params::BP_MultiRummage_Base_C_CanInteractWithPawnBP Parms{};

	Parms.InteractorPawn = InteractorPawn;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_MultiRummage_Base.BP_MultiRummage_Base_C.ExecuteUbergraph_BP_MultiRummage_Base
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MultiRummage_Base_C::ExecuteUbergraph_BP_MultiRummage_Base(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MultiRummage_Base_C", "ExecuteUbergraph_BP_MultiRummage_Base");

	Params::BP_MultiRummage_Base_C_ExecuteUbergraph_BP_MultiRummage_Base Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MultiRummage_Base.BP_MultiRummage_Base_C.ExtraPerform
// (Protected, BlueprintCallable, BlueprintEvent)

void ABP_MultiRummage_Base_C::ExtraPerform()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MultiRummage_Base_C", "ExtraPerform");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MultiRummage_Base.BP_MultiRummage_Base_C.GetHintLocationBP
// (Event, Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

struct FVector ABP_MultiRummage_Base_C::GetHintLocationBP()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MultiRummage_Base_C", "GetHintLocationBP");

	Params::BP_MultiRummage_Base_C_GetHintLocationBP Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_MultiRummage_Base.BP_MultiRummage_Base_C.HandleSaveStatus
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_MultiRummage_Base_C::HandleSaveStatus()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MultiRummage_Base_C", "HandleSaveStatus");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MultiRummage_Base.BP_MultiRummage_Base_C.OnDrawerItemPickedUp
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBP_RummageTargetComponent_C*     Source                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void ABP_MultiRummage_Base_C::OnDrawerItemPickedUp(class UBP_RummageTargetComponent_C* Source)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MultiRummage_Base_C", "OnDrawerItemPickedUp");

	Params::BP_MultiRummage_Base_C_OnDrawerItemPickedUp Parms{};

	Parms.Source = Source;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MultiRummage_Base.BP_MultiRummage_Base_C.OnDrawerPickupSpawned
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_Interact_Pickup_C*            InItem                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_MultiRummage_Base_C::OnDrawerPickupSpawned(class ABP_Interact_Pickup_C* InItem)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MultiRummage_Base_C", "OnDrawerPickupSpawned");

	Params::BP_MultiRummage_Base_C_OnDrawerPickupSpawned Parms{};

	Parms.InItem = InItem;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MultiRummage_Base.BP_MultiRummage_Base_C.OnExtraPerformEnd
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_MultiRummage_Base_C::OnExtraPerformEnd()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MultiRummage_Base_C", "OnExtraPerformEnd");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MultiRummage_Base.BP_MultiRummage_Base_C.OnPerformTimeEnd
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBP_RummageTargetComponent_C*     Source                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void ABP_MultiRummage_Base_C::OnPerformTimeEnd(class UBP_RummageTargetComponent_C* Source)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MultiRummage_Base_C", "OnPerformTimeEnd");

	Params::BP_MultiRummage_Base_C_OnPerformTimeEnd Parms{};

	Parms.Source = Source;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MultiRummage_Base.BP_MultiRummage_Base_C.PerformRummage
// (Protected, BlueprintCallable, BlueprintEvent)

void ABP_MultiRummage_Base_C::PerformRummage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MultiRummage_Base_C", "PerformRummage");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MultiRummage_Base.BP_MultiRummage_Base_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_MultiRummage_Base_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MultiRummage_Base_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MultiRummage_Base.BP_MultiRummage_Base_C.ReceiveEndPlay
// (Event, Protected, BlueprintEvent)
// Parameters:
// EEndPlayReason                          EndPlayReason                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MultiRummage_Base_C::ReceiveEndPlay(EEndPlayReason EndPlayReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MultiRummage_Base_C", "ReceiveEndPlay");

	Params::BP_MultiRummage_Base_C_ReceiveEndPlay Parms{};

	Parms.EndPlayReason = EndPlayReason;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MultiRummage_Base.BP_MultiRummage_Base_C.SetupPickups
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_MultiRummage_Base_C::SetupPickups()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MultiRummage_Base_C", "SetupPickups");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MultiRummage_Base.BP_MultiRummage_Base_C.SpawnTargetStuff
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_MultiRummage_Base_C::SpawnTargetStuff()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MultiRummage_Base_C", "SpawnTargetStuff");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MultiRummage_Base.BP_MultiRummage_Base_C.UpdateCurrent
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_MultiRummage_Base_C::UpdateCurrent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MultiRummage_Base_C", "UpdateCurrent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MultiRummage_Base.BP_MultiRummage_Base_C.UpdateDrawerSaveData
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_MultiRummage_Base_C::UpdateDrawerSaveData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MultiRummage_Base_C", "UpdateDrawerSaveData");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MultiRummage_Base.BP_MultiRummage_Base_C.UpdateUsable
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_MultiRummage_Base_C::UpdateUsable()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MultiRummage_Base_C", "UpdateUsable");

	UObject::ProcessEvent(Func, nullptr);
}

}

