#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Noce_Hinako_GameMode

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "GameNoce_classes.hpp"
#include "GameplayTags_structs.hpp"
#include "NeoAudio_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Noce_Hinako_GameMode.BP_Noce_Hinako_GameMode_C
// 0x0100 (0x0508 - 0x0408)
class ABP_Noce_Hinako_GameMode_C final : public ANoceGameMode
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0408(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UNeoWindComponent*                      NeoWind;                                           // 0x0410(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBPC_GM_EnmManager_C*                   BPC_GM_EnmManager;                                 // 0x0418(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0420(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	bool                                          DebugPlayerAutoRevive;                             // 0x0428(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_429[0x7];                                      // 0x0429(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftClassPtr<class UClass>                   HinakoClawClass;                                   // 0x0430(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	struct FRotator                               ControlRotationFromSave;                           // 0x0458(0x0018)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          HasControlRotationFromSave;                        // 0x0470(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ForceEndBlackScreen;                               // 0x0471(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_472[0x6];                                      // 0x0472(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           TickInitTimerHandle;                               // 0x0478(0x0008)(Edit, BlueprintVisible, Transient, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	TArray<struct FSoftClassPath>                 PreloadWidgets;                                    // 0x0480(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FNeoAudioPostEventParam                BGMFadeInEvent;                                    // 0x0490(0x0070)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FGameplayTag                           BGMChapterTag;                                     // 0x0500(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	class AActor* ChoosePlayerStart(class AController* Player);
	void ExecuteUbergraph_BP_Noce_Hinako_GameMode(int32 EntryPoint);
	int32 GetAttackRightMaxCount_BP();
	class UClass* GetDefaultPawnClassForController(class AController* InController);
	void InitStartSpot(class AActor* StartSpot, class AController* NewPlayer);
	bool IsPlayerLocationStreaming();
	void K2_OnRestartPlayer(class AController* NewPlayer);
	void OnGameInitializeBP();
	void PlayBGM();
	void ReceiveBeginPlay();
	void ReceiveEndPlay(EEndPlayReason EndPlayReason);
	void RequestFadeForEditor(bool FadeIn);
	void RequestGameOver_BP();
	void SetDebugPlayerAutoRevive_BP(bool InValue);
	void TickInitialize();
	void TryTeleportToSavePoint(class AController* Player);

public:
	static class UClass* StaticClass()
	{
		BP_STATIC_CLASS_IMPL("BP_Noce_Hinako_GameMode_C")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"BP_Noce_Hinako_GameMode_C")
	}
	static class ABP_Noce_Hinako_GameMode_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Noce_Hinako_GameMode_C>();
	}
};
DUMPER7_ASSERTS_ABP_Noce_Hinako_GameMode_C;

}

