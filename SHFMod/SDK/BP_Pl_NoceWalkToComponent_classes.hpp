#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Pl_NoceWalkToComponent

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "CoreUObject_structs.hpp"
#include "GameNoce_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Pl_NoceWalkToComponent.BP_Pl_NoceWalkToComponent_C
// 0x0118 (0x01B8 - 0x00A0)
class UBP_Pl_NoceWalkToComponent_C final : public UActorComponent
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x00A0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class ANocePlayerController*                  NocePlayerController;                              // 0x00A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class APlayerCameraManager*                   PlayerCameraManager;                               // 0x00B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class ANocePlayerCharacter*                   NocePlayerCharacter;                               // 0x00B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               WalkToCameraRotationCurrent;                       // 0x00C0(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FRotator                               WalkToCameraRotation;                              // 0x00D8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FRotator                               RunToRotation;                                     // 0x00F0(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FVector                                WalkToInputVector;                                 // 0x0108(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                WalkToLocation;                                    // 0x0120(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CachedDistanceSquared;                             // 0x0138(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CameraLerpTimer;                                   // 0x0140(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CameraLerpTime;                                    // 0x0148(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsWalkTo;                                          // 0x0150(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsWalkToWithCameraRotation;                        // 0x0151(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsRunTo;                                           // 0x0152(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsForceStay;                                       // 0x0153(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_154[0x4];                                      // 0x0154(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           WalkToStartDelayTimerHandle;                       // 0x0158(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           WalkToReturnIdleTimerHandle;                       // 0x0160(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           WalkToWithCameraStartDelayTimerHandle;             // 0x0168(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           WalkToWithCameraReturnLocoTimerHandle;             // 0x0170(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UBP_NocePlayerCameraRotateComponent_C*  PlayerCameraRotate;                                // 0x0178(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TMulticastInlineDelegate<void()>              OnReachTarget;                                     // 0x0180(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	struct FTimerHandle                           RunToTimerHandle;                                  // 0x0190(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          LimitInput;                                        // 0x0198(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_199[0x3];                                      // 0x0199(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         RunToAngle;                                        // 0x019C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        RunToInputForward;                                 // 0x01A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        RunToInputRight;                                   // 0x01A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsStopWalking;                                     // 0x01B0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ApplyInputVector();
	void EnableForceStay(bool InEnable);
	void ExecuteUbergraph_BP_Pl_NoceWalkToComponent(int32 EntryPoint);
	bool GetIsRunTo();
	bool GetIsWalkTo();
	bool GetIsWalkToWithCameraRotation();
	void GetRunToInfo(bool* OutIsRunTo, double* OutInputForward, double* OutInputRight, double* OutInputLength);
	void HandleOnEnterEvent();
	void HandleWalkToStartDelayTimerUp();
	void HandleWalkToWithCameraStartDelayTimerUp();
	void Initialize();
	void IsReachWalkToLocation(bool* IsReached);
	void LerpCameraRotation(double InDeltaSeconds);
	void ReceiveBeginPlay();
	void ReceiveTick(float DeltaSeconds);
	void RunToWaitDurationEnd();
	void SetStopWalking(bool IsStop);
	void SetupInputVector();
	void SetupLimitInput(bool InLimitInput, bool InCanSprint);
	void StartRunTo(const struct FRotator& InRunToRotation, double InRunToDuration, bool InLimitInput);
	void StartWalkTo(double InStartDelayTime, const struct FVector& InWalkToLocation, double InCameraLerpTime, bool InLimitInput);
	void StartWalkToWithCameraRotation(double InStartDelayTime, const struct FRotator& InCameraRotation, const struct FVector& InWalkToLocation, double InCameraLerpTime, bool InLimitInput);
	void StopWalkToLocation();
	void UpdateForceStay(double InDeltaSeconds);
	void UpdateRunTo();
	void UpdateWalkTo(double InDeltaSeconds);
	void UpdateWalkToWithCameraRotation(double InDeltaSeconds);
	void WalkToReturnToIdle();
	void WalkToWitchCameraReturnToLoco();

public:
	static class UClass* StaticClass()
	{
		BP_STATIC_CLASS_IMPL("BP_Pl_NoceWalkToComponent_C")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"BP_Pl_NoceWalkToComponent_C")
	}
	static class UBP_Pl_NoceWalkToComponent_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_Pl_NoceWalkToComponent_C>();
	}
};
DUMPER7_ASSERTS_UBP_Pl_NoceWalkToComponent_C;

}

