#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_NoceBattlePositionSubsystem

#include "Basic.hpp"

#include "BP_NoceBattlePositionSubsystem_classes.hpp"
#include "BP_NoceBattlePositionSubsystem_parameters.hpp"


namespace SDK
{

// Function BP_NoceBattlePositionSubsystem.BP_NoceBattlePositionSubsystem_C.CalculateMyScore
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class ANoceEnemyCharacter*              Enemy                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// ENoceBattlePositionTier                 Tier                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   ReferenceLocation                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double*                                 Score                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_NoceBattlePositionSubsystem_C::CalculateMyScore(class ANoceEnemyCharacter* Enemy, ENoceBattlePositionTier Tier, const struct FVector& ReferenceLocation, double* Score)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NoceBattlePositionSubsystem_C", "CalculateMyScore");

	Params::BP_NoceBattlePositionSubsystem_C_CalculateMyScore Parms{};

	Parms.Enemy = Enemy;
	Parms.Tier = Tier;
	Parms.ReferenceLocation = std::move(ReferenceLocation);

	UObject::ProcessEvent(Func, &Parms);

	if (Score != nullptr)
		*Score = Parms.Score;
}


// Function BP_NoceBattlePositionSubsystem.BP_NoceBattlePositionSubsystem_C.Deinitialize_BP
// (Event, Protected, BlueprintEvent)

void UBP_NoceBattlePositionSubsystem_C::Deinitialize_BP()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NoceBattlePositionSubsystem_C", "Deinitialize_BP");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_NoceBattlePositionSubsystem.BP_NoceBattlePositionSubsystem_C.DrawLocationGizmo
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_NoceBattlePositionSubsystem_C::DrawLocationGizmo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NoceBattlePositionSubsystem_C", "DrawLocationGizmo");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_NoceBattlePositionSubsystem.BP_NoceBattlePositionSubsystem_C.EnemiesCenterDirection
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FVector*                         Dir                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_NoceBattlePositionSubsystem_C::EnemiesCenterDirection(struct FVector* Dir)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NoceBattlePositionSubsystem_C", "EnemiesCenterDirection");

	Params::BP_NoceBattlePositionSubsystem_C_EnemiesCenterDirection Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Dir != nullptr)
		*Dir = std::move(Parms.Dir);
}


// Function BP_NoceBattlePositionSubsystem.BP_NoceBattlePositionSubsystem_C.ExecuteUbergraph_BP_NoceBattlePositionSubsystem
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_NoceBattlePositionSubsystem_C::ExecuteUbergraph_BP_NoceBattlePositionSubsystem(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NoceBattlePositionSubsystem_C", "ExecuteUbergraph_BP_NoceBattlePositionSubsystem");

	Params::BP_NoceBattlePositionSubsystem_C_ExecuteUbergraph_BP_NoceBattlePositionSubsystem Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_NoceBattlePositionSubsystem.BP_NoceBattlePositionSubsystem_C.GetCurrentDirection
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FVector*                         Direction                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_NoceBattlePositionSubsystem_C::GetCurrentDirection(struct FVector* Direction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NoceBattlePositionSubsystem_C", "GetCurrentDirection");

	Params::BP_NoceBattlePositionSubsystem_C_GetCurrentDirection Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Direction != nullptr)
		*Direction = std::move(Parms.Direction);
}


// Function BP_NoceBattlePositionSubsystem.BP_NoceBattlePositionSubsystem_C.GetFanBackDistance
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// ENoceBattlePositionTier                 Tier                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double*                                 Distance                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_NoceBattlePositionSubsystem_C::GetFanBackDistance(ENoceBattlePositionTier Tier, double* Distance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NoceBattlePositionSubsystem_C", "GetFanBackDistance");

	Params::BP_NoceBattlePositionSubsystem_C_GetFanBackDistance Parms{};

	Parms.Tier = Tier;

	UObject::ProcessEvent(Func, &Parms);

	if (Distance != nullptr)
		*Distance = Parms.Distance;
}


// Function BP_NoceBattlePositionSubsystem.BP_NoceBattlePositionSubsystem_C.GetFanFrontDistance
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// ENoceBattlePositionTier                 Tier                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double*                                 Distance                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_NoceBattlePositionSubsystem_C::GetFanFrontDistance(ENoceBattlePositionTier Tier, double* Distance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NoceBattlePositionSubsystem_C", "GetFanFrontDistance");

	Params::BP_NoceBattlePositionSubsystem_C_GetFanFrontDistance Parms{};

	Parms.Tier = Tier;

	UObject::ProcessEvent(Func, &Parms);

	if (Distance != nullptr)
		*Distance = Parms.Distance;
}


// Function BP_NoceBattlePositionSubsystem.BP_NoceBattlePositionSubsystem_C.GetMyBattlePosition
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           MyActor                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool*                                   Success                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector*                         Location                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// ENoceBattlePositionTier*                Tier                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_NoceBattlePositionSubsystem_C::GetMyBattlePosition(class AActor* MyActor, bool* Success, struct FVector* Location, ENoceBattlePositionTier* Tier)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NoceBattlePositionSubsystem_C", "GetMyBattlePosition");

	Params::BP_NoceBattlePositionSubsystem_C_GetMyBattlePosition Parms{};

	Parms.MyActor = MyActor;

	UObject::ProcessEvent(Func, &Parms);

	if (Success != nullptr)
		*Success = Parms.Success;

	if (Location != nullptr)
		*Location = std::move(Parms.Location);

	if (Tier != nullptr)
		*Tier = Parms.Tier;
}


// Function BP_NoceBattlePositionSubsystem.BP_NoceBattlePositionSubsystem_C.Ignore Tags Condition
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class ANoceEnemyCharacter*              Enemy                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool*                                   Bool                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_NoceBattlePositionSubsystem_C::Ignore_Tags_Condition(class ANoceEnemyCharacter* Enemy, bool* Bool)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NoceBattlePositionSubsystem_C", "Ignore Tags Condition");

	Params::BP_NoceBattlePositionSubsystem_C_Ignore_Tags_Condition Parms{};

	Parms.Enemy = Enemy;

	UObject::ProcessEvent(Func, &Parms);

	if (Bool != nullptr)
		*Bool = Parms.Bool;
}


// Function BP_NoceBattlePositionSubsystem.BP_NoceBattlePositionSubsystem_C.IndexTransferToTier
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   Index_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// ENoceBattlePositionTier*                Tier                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_NoceBattlePositionSubsystem_C::IndexTransferToTier(int32 Index_0, ENoceBattlePositionTier* Tier)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NoceBattlePositionSubsystem_C", "IndexTransferToTier");

	Params::BP_NoceBattlePositionSubsystem_C_IndexTransferToTier Parms{};

	Parms.Index_0 = Index_0;

	UObject::ProcessEvent(Func, &Parms);

	if (Tier != nullptr)
		*Tier = Parms.Tier;
}


// Function BP_NoceBattlePositionSubsystem.BP_NoceBattlePositionSubsystem_C.Initialize_BP
// (Event, Protected, BlueprintEvent)

void UBP_NoceBattlePositionSubsystem_C::Initialize_BP()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NoceBattlePositionSubsystem_C", "Initialize_BP");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_NoceBattlePositionSubsystem.BP_NoceBattlePositionSubsystem_C.IsAllQueryFinished
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool*                                   Value                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_NoceBattlePositionSubsystem_C::IsAllQueryFinished(bool* Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NoceBattlePositionSubsystem_C", "IsAllQueryFinished");

	Params::BP_NoceBattlePositionSubsystem_C_IsAllQueryFinished Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Value != nullptr)
		*Value = Parms.Value;
}


// Function BP_NoceBattlePositionSubsystem.BP_NoceBattlePositionSubsystem_C.IsInMyBattleField
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class AActor*                           ItsActor                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool*                                   Value                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// ENoceBattlePositionTier*                Tier                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_NoceBattlePositionSubsystem_C::IsInMyBattleField(class AActor* ItsActor, bool* Value, ENoceBattlePositionTier* Tier)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NoceBattlePositionSubsystem_C", "IsInMyBattleField");

	Params::BP_NoceBattlePositionSubsystem_C_IsInMyBattleField Parms{};

	Parms.ItsActor = ItsActor;

	UObject::ProcessEvent(Func, &Parms);

	if (Value != nullptr)
		*Value = Parms.Value;

	if (Tier != nullptr)
		*Tier = Parms.Tier;
}


// Function BP_NoceBattlePositionSubsystem.BP_NoceBattlePositionSubsystem_C.IsInMyBattleFieldTier
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class AActor*                           ItsActor                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool*                                   Value                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// ENoceBattlePositionTier*                Tier                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_NoceBattlePositionSubsystem_C::IsInMyBattleFieldTier(class AActor* ItsActor, bool* Value, ENoceBattlePositionTier* Tier)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NoceBattlePositionSubsystem_C", "IsInMyBattleFieldTier");

	Params::BP_NoceBattlePositionSubsystem_C_IsInMyBattleFieldTier Parms{};

	Parms.ItsActor = ItsActor;

	UObject::ProcessEvent(Func, &Parms);

	if (Value != nullptr)
		*Value = Parms.Value;

	if (Tier != nullptr)
		*Tier = Parms.Tier;
}


// Function BP_NoceBattlePositionSubsystem.BP_NoceBattlePositionSubsystem_C.IsQueryProcessing
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool*                                   Value                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_NoceBattlePositionSubsystem_C::IsQueryProcessing(bool* Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NoceBattlePositionSubsystem_C", "IsQueryProcessing");

	Params::BP_NoceBattlePositionSubsystem_C_IsQueryProcessing Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Value != nullptr)
		*Value = Parms.Value;
}


// Function BP_NoceBattlePositionSubsystem.BP_NoceBattlePositionSubsystem_C.OnPrimaryQueryFinished
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UEnvQueryInstanceBlueprintWrapper*QueryInstance                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// EEnvQueryStatus                         QueryStatus                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_NoceBattlePositionSubsystem_C::OnPrimaryQueryFinished(class UEnvQueryInstanceBlueprintWrapper* QueryInstance, EEnvQueryStatus QueryStatus)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NoceBattlePositionSubsystem_C", "OnPrimaryQueryFinished");

	Params::BP_NoceBattlePositionSubsystem_C_OnPrimaryQueryFinished Parms{};

	Parms.QueryInstance = QueryInstance;
	Parms.QueryStatus = QueryStatus;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_NoceBattlePositionSubsystem.BP_NoceBattlePositionSubsystem_C.OnSecondaryQueryFinished
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UEnvQueryInstanceBlueprintWrapper*QueryInstance                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// EEnvQueryStatus                         QueryStatus                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_NoceBattlePositionSubsystem_C::OnSecondaryQueryFinished(class UEnvQueryInstanceBlueprintWrapper* QueryInstance, EEnvQueryStatus QueryStatus)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NoceBattlePositionSubsystem_C", "OnSecondaryQueryFinished");

	Params::BP_NoceBattlePositionSubsystem_C_OnSecondaryQueryFinished Parms{};

	Parms.QueryInstance = QueryInstance;
	Parms.QueryStatus = QueryStatus;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_NoceBattlePositionSubsystem.BP_NoceBattlePositionSubsystem_C.OnSystemEnabledChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    NewValue                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_NoceBattlePositionSubsystem_C::OnSystemEnabledChanged(bool NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NoceBattlePositionSubsystem_C", "OnSystemEnabledChanged");

	Params::BP_NoceBattlePositionSubsystem_C_OnSystemEnabledChanged Parms{};

	Parms.NewValue = NewValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_NoceBattlePositionSubsystem.BP_NoceBattlePositionSubsystem_C.RetryAllQuery
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  RetryDelay                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_NoceBattlePositionSubsystem_C::RetryAllQuery(double RetryDelay)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NoceBattlePositionSubsystem_C", "RetryAllQuery");

	Params::BP_NoceBattlePositionSubsystem_C_RetryAllQuery Parms{};

	Parms.RetryDelay = RetryDelay;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_NoceBattlePositionSubsystem.BP_NoceBattlePositionSubsystem_C.RunAllQuery
// (BlueprintCallable, BlueprintEvent)

void UBP_NoceBattlePositionSubsystem_C::RunAllQuery()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NoceBattlePositionSubsystem_C", "RunAllQuery");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_NoceBattlePositionSubsystem.BP_NoceBattlePositionSubsystem_C.Tick_BP
// (Event, Protected, BlueprintEvent)
// Parameters:
// float                                   DeltaTime                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_NoceBattlePositionSubsystem_C::Tick_BP(float DeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NoceBattlePositionSubsystem_C", "Tick_BP");

	Params::BP_NoceBattlePositionSubsystem_C_Tick_BP Parms{};

	Parms.DeltaTime = DeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_NoceBattlePositionSubsystem.BP_NoceBattlePositionSubsystem_C.TickReferenceDirection
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  DeltaTime                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_NoceBattlePositionSubsystem_C::TickReferenceDirection(double DeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NoceBattlePositionSubsystem_C", "TickReferenceDirection");

	Params::BP_NoceBattlePositionSubsystem_C_TickReferenceDirection Parms{};

	Parms.DeltaTime = DeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_NoceBattlePositionSubsystem.BP_NoceBattlePositionSubsystem_C.TrackEnemyPosition
// (Protected, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_NoceBattlePositionSubsystem_C::TrackEnemyPosition()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NoceBattlePositionSubsystem_C", "TrackEnemyPosition");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_NoceBattlePositionSubsystem.BP_NoceBattlePositionSubsystem_C.WorldBeginPlay_BP
// (Event, Protected, BlueprintEvent)

void UBP_NoceBattlePositionSubsystem_C::WorldBeginPlay_BP()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NoceBattlePositionSubsystem_C", "WorldBeginPlay_BP");

	UObject::ProcessEvent(Func, nullptr);
}

}

