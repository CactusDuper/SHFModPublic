#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPC_NoceRagdollController

#include "Basic.hpp"

#include "BPC_NoceRagdollController_classes.hpp"
#include "BPC_NoceRagdollController_parameters.hpp"


namespace SDK
{

// Function BPC_NoceRagdollController.BPC_NoceRagdollController_C.Allow Start Ragdoll
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool*                                   Value                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPC_NoceRagdollController_C::Allow_Start_Ragdoll(bool* Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_NoceRagdollController_C", "Allow Start Ragdoll");

	Params::BPC_NoceRagdollController_C_Allow_Start_Ragdoll Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Value != nullptr)
		*Value = Parms.Value;
}


// Function BPC_NoceRagdollController.BPC_NoceRagdollController_C.AvoidPopping
// (Public, BlueprintCallable, BlueprintEvent)

void UBPC_NoceRagdollController_C::AvoidPopping()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_NoceRagdollController_C", "AvoidPopping");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPC_NoceRagdollController.BPC_NoceRagdollController_C.CheckCollisionBySetting
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<struct FF_CheckTransformRagdollBoneData>&Setting                                                (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool UBPC_NoceRagdollController_C::CheckCollisionBySetting(TArray<struct FF_CheckTransformRagdollBoneData>& Setting)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_NoceRagdollController_C", "CheckCollisionBySetting");

	Params::BPC_NoceRagdollController_C_CheckCollisionBySetting Parms{};

	Parms.Setting = std::move(Setting);

	UObject::ProcessEvent(Func, &Parms);

	Setting = std::move(Parms.Setting);

	return Parms.ReturnValue;
}


// Function BPC_NoceRagdollController.BPC_NoceRagdollController_C.CheckTransformToRagdollRequest
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool UBPC_NoceRagdollController_C::CheckTransformToRagdollRequest()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_NoceRagdollController_C", "CheckTransformToRagdollRequest");

	Params::BPC_NoceRagdollController_C_CheckTransformToRagdollRequest Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BPC_NoceRagdollController.BPC_NoceRagdollController_C.ClearExtraBoneCheck
// (Public, BlueprintCallable, BlueprintEvent)

void UBPC_NoceRagdollController_C::ClearExtraBoneCheck()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_NoceRagdollController_C", "ClearExtraBoneCheck");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPC_NoceRagdollController.BPC_NoceRagdollController_C.EndFlow
// (Protected, BlueprintCallable, BlueprintEvent)

void UBPC_NoceRagdollController_C::EndFlow()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_NoceRagdollController_C", "EndFlow");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPC_NoceRagdollController.BPC_NoceRagdollController_C.ExecuteUbergraph_BPC_NoceRagdollController
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPC_NoceRagdollController_C::ExecuteUbergraph_BPC_NoceRagdollController(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_NoceRagdollController_C", "ExecuteUbergraph_BPC_NoceRagdollController");

	Params::BPC_NoceRagdollController_C_ExecuteUbergraph_BPC_NoceRagdollController Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPC_NoceRagdollController.BPC_NoceRagdollController_C.InitializeFlow
// (Protected, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBPC_NoceRagdollController_C::InitializeFlow()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_NoceRagdollController_C", "InitializeFlow");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPC_NoceRagdollController.BPC_NoceRagdollController_C.IsMeshNameMatched
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// const class FString&                    MeshName                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool UBPC_NoceRagdollController_C::IsMeshNameMatched(const class FString& MeshName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_NoceRagdollController_C", "IsMeshNameMatched");

	Params::BPC_NoceRagdollController_C_IsMeshNameMatched Parms{};

	Parms.MeshName = std::move(MeshName);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BPC_NoceRagdollController.BPC_NoceRagdollController_C.LoadRecord
// (BlueprintCallable, BlueprintEvent)

void UBPC_NoceRagdollController_C::LoadRecord()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_NoceRagdollController_C", "LoadRecord");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPC_NoceRagdollController.BPC_NoceRagdollController_C.MakeRecord
// (BlueprintCallable, BlueprintEvent)

void UBPC_NoceRagdollController_C::MakeRecord()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_NoceRagdollController_C", "MakeRecord");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPC_NoceRagdollController.BPC_NoceRagdollController_C.OnDelayRagdoll
// (BlueprintCallable, BlueprintEvent)

void UBPC_NoceRagdollController_C::OnDelayRagdoll()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_NoceRagdollController_C", "OnDelayRagdoll");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPC_NoceRagdollController.BPC_NoceRagdollController_C.PreActivateRagdoll
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBPC_NoceRagdollController_C::PreActivateRagdoll()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_NoceRagdollController_C", "PreActivateRagdoll");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPC_NoceRagdollController.BPC_NoceRagdollController_C.ProcessToAnimationCore
// (BlueprintCallable, BlueprintEvent)

void UBPC_NoceRagdollController_C::ProcessToAnimationCore()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_NoceRagdollController_C", "ProcessToAnimationCore");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPC_NoceRagdollController.BPC_NoceRagdollController_C.ReceiveBeginPlay
// (Event, Public, BlueprintEvent)

void UBPC_NoceRagdollController_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_NoceRagdollController_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPC_NoceRagdollController.BPC_NoceRagdollController_C.ReceiveEndPlay
// (Event, Public, BlueprintEvent)
// Parameters:
// EEndPlayReason                          EndPlayReason                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPC_NoceRagdollController_C::ReceiveEndPlay(EEndPlayReason EndPlayReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_NoceRagdollController_C", "ReceiveEndPlay");

	Params::BPC_NoceRagdollController_C_ReceiveEndPlay Parms{};

	Parms.EndPlayReason = EndPlayReason;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPC_NoceRagdollController.BPC_NoceRagdollController_C.ReceiveMeshOnHitEvent
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              HitComponent                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   NormalImpulse                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FHitResult&                Hit                                                    (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void UBPC_NoceRagdollController_C::ReceiveMeshOnHitEvent(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, const struct FHitResult& Hit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_NoceRagdollController_C", "ReceiveMeshOnHitEvent");

	Params::BPC_NoceRagdollController_C_ReceiveMeshOnHitEvent Parms{};

	Parms.HitComponent = HitComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.NormalImpulse = std::move(NormalImpulse);
	Parms.Hit = std::move(Hit);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPC_NoceRagdollController.BPC_NoceRagdollController_C.ReceiveOnResurrect
// (Protected, BlueprintCallable, BlueprintEvent)

void UBPC_NoceRagdollController_C::ReceiveOnResurrect()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_NoceRagdollController_C", "ReceiveOnResurrect");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPC_NoceRagdollController.BPC_NoceRagdollController_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPC_NoceRagdollController_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_NoceRagdollController_C", "ReceiveTick");

	Params::BPC_NoceRagdollController_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPC_NoceRagdollController.BPC_NoceRagdollController_C.ReturnFromRagdoll
// (BlueprintCallable, BlueprintEvent)

void UBPC_NoceRagdollController_C::ReturnFromRagdoll()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_NoceRagdollController_C", "ReturnFromRagdoll");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPC_NoceRagdollController.BPC_NoceRagdollController_C.SetCapsuleOrientation
// (Protected, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBPC_NoceRagdollController_C::SetCapsuleOrientation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_NoceRagdollController_C", "SetCapsuleOrientation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPC_NoceRagdollController.BPC_NoceRagdollController_C.SetCapsuleTransform
// (Protected, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBPC_NoceRagdollController_C::SetCapsuleTransform()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_NoceRagdollController_C", "SetCapsuleTransform");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPC_NoceRagdollController.BPC_NoceRagdollController_C.SetExtraBoneCheck
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<struct FF_CheckTransformRagdollBoneData>&CheckSetting                                           (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UBPC_NoceRagdollController_C::SetExtraBoneCheck(TArray<struct FF_CheckTransformRagdollBoneData>& CheckSetting)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_NoceRagdollController_C", "SetExtraBoneCheck");

	Params::BPC_NoceRagdollController_C_SetExtraBoneCheck Parms{};

	Parms.CheckSetting = std::move(CheckSetting);

	UObject::ProcessEvent(Func, &Parms);

	CheckSetting = std::move(Parms.CheckSetting);
}


// Function BPC_NoceRagdollController.BPC_NoceRagdollController_C.SetNewPhyAsset
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USkeletalMeshComponent*           MeshComp                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UBPC_NoceRagdollController_C::SetNewPhyAsset(class USkeletalMeshComponent* MeshComp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_NoceRagdollController_C", "SetNewPhyAsset");

	Params::BPC_NoceRagdollController_C_SetNewPhyAsset Parms{};

	Parms.MeshComp = MeshComp;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPC_NoceRagdollController.BPC_NoceRagdollController_C.SetOrigiPhyAsset
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USkeletalMeshComponent*           MeshComp                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UBPC_NoceRagdollController_C::SetOrigiPhyAsset(class USkeletalMeshComponent* MeshComp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_NoceRagdollController_C", "SetOrigiPhyAsset");

	Params::BPC_NoceRagdollController_C_SetOrigiPhyAsset Parms{};

	Parms.MeshComp = MeshComp;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPC_NoceRagdollController.BPC_NoceRagdollController_C.SetStatus
// (Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// ENoceRagdollStatus                      NewStatus                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPC_NoceRagdollController_C::SetStatus(ENoceRagdollStatus NewStatus)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_NoceRagdollController_C", "SetStatus");

	Params::BPC_NoceRagdollController_C_SetStatus Parms{};

	Parms.NewStatus = NewStatus;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPC_NoceRagdollController.BPC_NoceRagdollController_C.SnapshotRagdollPose
// (Public, BlueprintCallable, BlueprintEvent)

void UBPC_NoceRagdollController_C::SnapshotRagdollPose()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_NoceRagdollController_C", "SnapshotRagdollPose");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPC_NoceRagdollController.BPC_NoceRagdollController_C.TickCapsuleLocation
// (Protected, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPC_NoceRagdollController_C::TickCapsuleLocation(double DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_NoceRagdollController_C", "TickCapsuleLocation");

	Params::BPC_NoceRagdollController_C_TickCapsuleLocation Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPC_NoceRagdollController.BPC_NoceRagdollController_C.TickRagdollStatus
// (Protected, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPC_NoceRagdollController_C::TickRagdollStatus(double DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_NoceRagdollController_C", "TickRagdollStatus");

	Params::BPC_NoceRagdollController_C_TickRagdollStatus Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPC_NoceRagdollController.BPC_NoceRagdollController_C.ToRagdoll
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBPC_NoceRagdollController_C::ToRagdoll()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_NoceRagdollController_C", "ToRagdoll");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPC_NoceRagdollController.BPC_NoceRagdollController_C.TryMorphToDeadLocation
// (Public, BlueprintCallable, BlueprintEvent)

void UBPC_NoceRagdollController_C::TryMorphToDeadLocation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_NoceRagdollController_C", "TryMorphToDeadLocation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPC_NoceRagdollController.BPC_NoceRagdollController_C.UnregisterMeshOnHitEvent
// (Public, BlueprintCallable, BlueprintEvent)

void UBPC_NoceRagdollController_C::UnregisterMeshOnHitEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_NoceRagdollController_C", "UnregisterMeshOnHitEvent");

	UObject::ProcessEvent(Func, nullptr);
}

}

