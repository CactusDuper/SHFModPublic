#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Map

#include "Basic.hpp"

#include "WBP_Map_classes.hpp"
#include "WBP_Map_parameters.hpp"


namespace SDK
{

// Function WBP_Map.WBP_Map_C.BP_DisableInputs
// (Event, Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                                   NoUse                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_Map_C::BP_DisableInputs(bool* NoUse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Map_C", "BP_DisableInputs");

	Params::WBP_Map_C_BP_DisableInputs Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (NoUse != nullptr)
		*NoUse = Parms.NoUse;
}


// Function WBP_Map.WBP_Map_C.BP_EnableInputs
// (Event, Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                                   NoUse                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_Map_C::BP_EnableInputs(bool* NoUse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Map_C", "BP_EnableInputs");

	Params::WBP_Map_C_BP_EnableInputs Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (NoUse != nullptr)
		*NoUse = Parms.NoUse;
}


// Function WBP_Map.WBP_Map_C.BP_HideCommon
// (Event, Protected, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                                   NoUse                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_Map_C::BP_HideCommon(bool* NoUse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Map_C", "BP_HideCommon");

	Params::WBP_Map_C_BP_HideCommon Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (NoUse != nullptr)
		*NoUse = Parms.NoUse;
}


// Function WBP_Map.WBP_Map_C.BP_ShowCommon
// (Event, Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                                   NoUse                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_Map_C::BP_ShowCommon(bool* NoUse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Map_C", "BP_ShowCommon");

	Params::WBP_Map_C_BP_ShowCommon Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (NoUse != nullptr)
		*NoUse = Parms.NoUse;
}


// Function WBP_Map.WBP_Map_C.ClampTranslation
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// const struct FVector2D&                 Pos2D                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector2D*                       OurPos2D                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_Map_C::ClampTranslation(const struct FVector2D& Pos2D, struct FVector2D* OurPos2D)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Map_C", "ClampTranslation");

	Params::WBP_Map_C_ClampTranslation Parms{};

	Parms.Pos2D = std::move(Pos2D);

	UObject::ProcessEvent(Func, &Parms);

	if (OurPos2D != nullptr)
		*OurPos2D = std::move(Parms.OurPos2D);
}


// Function WBP_Map.WBP_Map_C.ClearLastArea
// (Public, BlueprintCallable, BlueprintEvent)

void UWBP_Map_C::ClearLastArea()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Map_C", "ClearLastArea");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_Map.WBP_Map_C.ClearResource
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                                   NoUse                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_Map_C::ClearResource(bool* NoUse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Map_C", "ClearResource");

	Params::WBP_Map_C_ClearResource Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (NoUse != nullptr)
		*NoUse = Parms.NoUse;
}


// Function WBP_Map.WBP_Map_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UWBP_Map_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Map_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_Map.WBP_Map_C.CreateMapIconWidgets
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<struct FNoceMapGeneralIconData>& Data                                                   (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// TArray<class UNoceMapIconWidget*>*      Result                                                 (Parm, OutParm, ContainsInstancedReference)

void UWBP_Map_C::CreateMapIconWidgets(TArray<struct FNoceMapGeneralIconData>& Data, TArray<class UNoceMapIconWidget*>* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Map_C", "CreateMapIconWidgets");

	Params::WBP_Map_C_CreateMapIconWidgets Parms{};

	Parms.Data = std::move(Data);

	UObject::ProcessEvent(Func, &Parms);

	Data = std::move(Parms.Data);

	if (Result != nullptr)
		*Result = std::move(Parms.Result);
}


// Function WBP_Map.WBP_Map_C.CreateTabData
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UNoceMapAreaWidget*               Widget                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UWBP_Map_C::CreateTabData(class UNoceMapAreaWidget* Widget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Map_C", "CreateTabData");

	Params::WBP_Map_C_CreateTabData Parms{};

	Parms.Widget = Widget;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_Map.WBP_Map_C.Destruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UWBP_Map_C::Destruct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Map_C", "Destruct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_Map.WBP_Map_C.ExecuteUbergraph_WBP_Map
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_Map_C::ExecuteUbergraph_WBP_Map(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Map_C", "ExecuteUbergraph_WBP_Map");

	Params::WBP_Map_C_ExecuteUbergraph_WBP_Map Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_Map.WBP_Map_C.GetDefaultTabIndex
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

int32 UWBP_Map_C::GetDefaultTabIndex()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Map_C", "GetDefaultTabIndex");

	Params::WBP_Map_C_GetDefaultTabIndex Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function WBP_Map.WBP_Map_C.GetScaleArea
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// ENoceMapArea                            InArea                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// ENoceMapArea                            InScaleArea                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// ENoceMapArea                            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

ENoceMapArea UWBP_Map_C::GetScaleArea(ENoceMapArea InArea, ENoceMapArea InScaleArea)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Map_C", "GetScaleArea");

	Params::WBP_Map_C_GetScaleArea Parms{};

	Parms.InArea = InArea;
	Parms.InScaleArea = InScaleArea;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function WBP_Map.WBP_Map_C.HandleKeyUp
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FKey&                      InKey                                                  (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)

void UWBP_Map_C::HandleKeyUp(const struct FKey& InKey)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Map_C", "HandleKeyUp");

	Params::WBP_Map_C_HandleKeyUp Parms{};

	Parms.InKey = std::move(InKey);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_Map.WBP_Map_C.HandleNotRepeatKeys
// (Event, Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FInputEvent&               InInputEvent                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// const struct FKey&                      InKey                                                  (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool UWBP_Map_C::HandleNotRepeatKeys(const struct FInputEvent& InInputEvent, const struct FKey& InKey)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Map_C", "HandleNotRepeatKeys");

	Params::WBP_Map_C_HandleNotRepeatKeys Parms{};

	Parms.InInputEvent = std::move(InInputEvent);
	Parms.InKey = std::move(InKey);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function WBP_Map.WBP_Map_C.IsInView
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// const struct FVector&                   Pos                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector2D&                 CenterPos                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector2D&                 HalfRange                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  InvAngleDeg                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsMultiFloor                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector2D&                 FloorHeightRange                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FGameplayTagContainer&     ShowTag                                                (BlueprintVisible, BlueprintReadOnly, Parm)
// const struct FGameplayTagContainer&     HideTag                                                (BlueprintVisible, BlueprintReadOnly, Parm)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool UWBP_Map_C::IsInView(const struct FVector& Pos, const struct FVector2D& CenterPos, const struct FVector2D& HalfRange, double InvAngleDeg, bool IsMultiFloor, const struct FVector2D& FloorHeightRange, const struct FGameplayTagContainer& ShowTag, const struct FGameplayTagContainer& HideTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Map_C", "IsInView");

	Params::WBP_Map_C_IsInView Parms{};

	Parms.Pos = std::move(Pos);
	Parms.CenterPos = std::move(CenterPos);
	Parms.HalfRange = std::move(HalfRange);
	Parms.InvAngleDeg = InvAngleDeg;
	Parms.IsMultiFloor = IsMultiFloor;
	Parms.FloorHeightRange = std::move(FloorHeightRange);
	Parms.ShowTag = std::move(ShowTag);
	Parms.HideTag = std::move(HideTag);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function WBP_Map.WBP_Map_C.IsUGDB1Visible
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool UWBP_Map_C::IsUGDB1Visible()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Map_C", "IsUGDB1Visible");

	Params::WBP_Map_C_IsUGDB1Visible Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function WBP_Map.WBP_Map_C.LoadMap
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const ENoceMapArea                      Area                                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<class UNoceMapAreaWidget*>&      OldBackgrounds                                         (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)

void UWBP_Map_C::LoadMap(const ENoceMapArea Area, TArray<class UNoceMapAreaWidget*>& OldBackgrounds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Map_C", "LoadMap");

	Params::WBP_Map_C_LoadMap Parms{};

	Parms.Area = Area;
	Parms.OldBackgrounds = std::move(OldBackgrounds);

	UObject::ProcessEvent(Func, &Parms);

	OldBackgrounds = std::move(Parms.OldBackgrounds);
}


// Function WBP_Map.WBP_Map_C.OnAnalogValueChanged
// (Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FGeometry&                 MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// const struct FAnalogInputEvent&         InAnalogInputEvent                                     (BlueprintVisible, BlueprintReadOnly, Parm)
// struct FEventReply                      ReturnValue                                            (Parm, OutParm, ReturnParm)

struct FEventReply UWBP_Map_C::OnAnalogValueChanged(const struct FGeometry& MyGeometry, const struct FAnalogInputEvent& InAnalogInputEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Map_C", "OnAnalogValueChanged");

	Params::WBP_Map_C_OnAnalogValueChanged Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InAnalogInputEvent = std::move(InAnalogInputEvent);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function WBP_Map.WBP_Map_C.OnInitialized
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UWBP_Map_C::OnInitialized()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Map_C", "OnInitialized");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_Map.WBP_Map_C.OnKeyUp
// (BlueprintCosmetic, Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FGeometry&                 MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// const struct FKeyEvent&                 InKeyEvent                                             (BlueprintVisible, BlueprintReadOnly, Parm)
// struct FEventReply                      ReturnValue                                            (Parm, OutParm, ReturnParm)

struct FEventReply UWBP_Map_C::OnKeyUp(const struct FGeometry& MyGeometry, const struct FKeyEvent& InKeyEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Map_C", "OnKeyUp");

	Params::WBP_Map_C_OnKeyUp Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InKeyEvent = std::move(InKeyEvent);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function WBP_Map.WBP_Map_C.OnMouseButtonDown
// (BlueprintCosmetic, Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FGeometry&                 MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// const struct FPointerEvent&             MouseEvent                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// struct FEventReply                      ReturnValue                                            (Parm, OutParm, ReturnParm)

struct FEventReply UWBP_Map_C::OnMouseButtonDown(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Map_C", "OnMouseButtonDown");

	Params::WBP_Map_C_OnMouseButtonDown Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.MouseEvent = std::move(MouseEvent);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function WBP_Map.WBP_Map_C.OnMouseButtonUp
// (BlueprintCosmetic, Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FGeometry&                 MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// const struct FPointerEvent&             MouseEvent                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// struct FEventReply                      ReturnValue                                            (Parm, OutParm, ReturnParm)

struct FEventReply UWBP_Map_C::OnMouseButtonUp(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Map_C", "OnMouseButtonUp");

	Params::WBP_Map_C_OnMouseButtonUp Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.MouseEvent = std::move(MouseEvent);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function WBP_Map.WBP_Map_C.OnMouseLeave
// (BlueprintCosmetic, Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// const struct FPointerEvent&             MouseEvent                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UWBP_Map_C::OnMouseLeave(const struct FPointerEvent& MouseEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Map_C", "OnMouseLeave");

	Params::WBP_Map_C_OnMouseLeave Parms{};

	Parms.MouseEvent = std::move(MouseEvent);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_Map.WBP_Map_C.OnMouseWheel
// (BlueprintCosmetic, Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FGeometry&                 MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// const struct FPointerEvent&             MouseEvent                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// struct FEventReply                      ReturnValue                                            (Parm, OutParm, ReturnParm)

struct FEventReply UWBP_Map_C::OnMouseWheel(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Map_C", "OnMouseWheel");

	Params::WBP_Map_C_OnMouseWheel Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.MouseEvent = std::move(MouseEvent);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function WBP_Map.WBP_Map_C.OnSelectMap
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Index_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_Map_C::OnSelectMap(int32 Index_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Map_C", "OnSelectMap");

	Params::WBP_Map_C_OnSelectMap Parms{};

	Parms.Index_0 = Index_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_Map.WBP_Map_C.OnSelectNextFloor
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UWBP_Map_C::OnSelectNextFloor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Map_C", "OnSelectNextFloor");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_Map.WBP_Map_C.OnSelectPreviousFloor
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UWBP_Map_C::OnSelectPreviousFloor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Map_C", "OnSelectPreviousFloor");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_Map.WBP_Map_C.ResetPos
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    SetPos                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_Map_C::ResetPos(bool SetPos)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Map_C", "ResetPos");

	Params::WBP_Map_C_ResetPos Parms{};

	Parms.SetPos = SetPos;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_Map.WBP_Map_C.SetAllData
// (Event, Protected, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                                   NoUse                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_Map_C::SetAllData(bool* NoUse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Map_C", "SetAllData");

	Params::WBP_Map_C_SetAllData Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (NoUse != nullptr)
		*NoUse = Parms.NoUse;
}


// Function WBP_Map.WBP_Map_C.SetupIcons
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UWBP_Map_C::SetupIcons()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Map_C", "SetupIcons");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_Map.WBP_Map_C.StartMovingToTarget
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FVector2D&                 InTargetLocation                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_Map_C::StartMovingToTarget(const struct FVector2D& InTargetLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Map_C", "StartMovingToTarget");

	Params::WBP_Map_C_StartMovingToTarget Parms{};

	Parms.InTargetLocation = std::move(InTargetLocation);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_Map.WBP_Map_C.Tick
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// const struct FGeometry&                 MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// float                                   InDeltaTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_Map_C::Tick(const struct FGeometry& MyGeometry, float InDeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Map_C", "Tick");

	Params::WBP_Map_C_Tick Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InDeltaTime = InDeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_Map.WBP_Map_C.TransformMap
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  DeltaTime                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_Map_C::TransformMap(double DeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Map_C", "TransformMap");

	Params::WBP_Map_C_TransformMap Parms{};

	Parms.DeltaTime = DeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_Map.WBP_Map_C.UpdateAnalogValue
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FAnalogInputEvent&         Event                                                  (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// const struct FKey&                      Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// float&                                  TargetVariable                                         (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool*                                   Handled                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_Map_C::UpdateAnalogValue(const struct FAnalogInputEvent& Event, const struct FKey& Key, float& TargetVariable, bool* Handled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Map_C", "UpdateAnalogValue");

	Params::WBP_Map_C_UpdateAnalogValue Parms{};

	Parms.Event = std::move(Event);
	Parms.Key = std::move(Key);
	Parms.TargetVariable = TargetVariable;

	UObject::ProcessEvent(Func, &Parms);

	TargetVariable = Parms.TargetVariable;

	if (Handled != nullptr)
		*Handled = Parms.Handled;
}


// Function WBP_Map.WBP_Map_C.UpdateFloorTabInput
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FInputEvent&               InInputEvent                                           (BlueprintVisible, BlueprintReadOnly, Parm)
// const struct FKey&                      InKey                                                  (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// bool*                                   IsTriggered                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_Map_C::UpdateFloorTabInput(const struct FInputEvent& InInputEvent, const struct FKey& InKey, bool* IsTriggered)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Map_C", "UpdateFloorTabInput");

	Params::WBP_Map_C_UpdateFloorTabInput Parms{};

	Parms.InInputEvent = std::move(InInputEvent);
	Parms.InKey = std::move(InKey);

	UObject::ProcessEvent(Func, &Parms);

	if (IsTriggered != nullptr)
		*IsTriggered = Parms.IsTriggered;
}


// Function WBP_Map.WBP_Map_C.UpdateIconPos
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UNoceMapIconWidget*               IconWidget                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// bool*                                   IsInView_0                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_Map_C::UpdateIconPos(class UNoceMapIconWidget* IconWidget, bool* IsInView_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Map_C", "UpdateIconPos");

	Params::WBP_Map_C_UpdateIconPos Parms{};

	Parms.IconWidget = IconWidget;

	UObject::ProcessEvent(Func, &Parms);

	if (IsInView_0 != nullptr)
		*IsInView_0 = Parms.IsInView_0;
}


// Function WBP_Map.WBP_Map_C.UpdateMapCenterAndRange
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UWBP_Map_C::UpdateMapCenterAndRange()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Map_C", "UpdateMapCenterAndRange");

	UObject::ProcessEvent(Func, nullptr);
}

}

