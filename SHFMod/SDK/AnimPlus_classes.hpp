#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AnimPlus

#include "Basic.hpp"

#include "Engine_classes.hpp"
#include "DataTablePlus_classes.hpp"


namespace SDK
{

// Class AnimPlus.AnimPlusBankComponent
// 0x0050 (0x00F0 - 0x00A0)
class UAnimPlusBankComponent final : public UActorComponent
{
public:
	uint8                                         Pad_A0[0x8];                                       // 0x00A0(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimPlusBankDataTable*                 ExtraAnimBank;                                     // 0x00A8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAnimPlusBankDataTable*                 CurrentAnimBank;                                   // 0x00B0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAnimPlusBankDataTable*                 DefaultRuntimeLoadedAnimBank;                      // 0x00B8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UAnimPlusBankDataTable>  DefaultRuntimeAnimBank;                            // 0x00C0(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAnimPlusBankDataTable*                 DefaultAnimBank;                                   // 0x00E8(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	class UBlendSpace* GetAnimBlendSpaceFromBank(int32 InBankID, const struct FGameplayTag& InTagInfo, int32 InAnimID);
	class UAnimMontage* GetAnimMontageFromBank(int32 InBankID, const struct FGameplayTag& InTagInfo, int32 InAnimID);
	class UAnimSequenceBase* GetAnimSequenceFromBank(int32 InBankID, const struct FGameplayTag& InTagInfo, int32 InAnimID);
	class UAnimPlusBankDataTable* GetCurrentAnimBank();
	void RemoveCurrentAnimBank();
	void RemoveExtraAnimBank();
	void SetCurrentAnimBank(class UAnimPlusBankDataTable* InAnimBank);
	void SetExtraAnimBank(class UAnimPlusBankDataTable* InAnimBank);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AnimPlusBankComponent")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AnimPlusBankComponent")
	}
	static class UAnimPlusBankComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAnimPlusBankComponent>();
	}
};
DUMPER7_ASSERTS_UAnimPlusBankComponent;

// Class AnimPlus.AnimPlusBankDataTable
// 0x0000 (0x00D8 - 0x00D8)
class UAnimPlusBankDataTable final : public UNeoEditableCompositeDataTable
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AnimPlusBankDataTable")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AnimPlusBankDataTable")
	}
	static class UAnimPlusBankDataTable* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAnimPlusBankDataTable>();
	}
};
DUMPER7_ASSERTS_UAnimPlusBankDataTable;

// Class AnimPlus.AnimPlusBankRegisterComponent
// 0x0058 (0x00F8 - 0x00A0)
class UAnimPlusBankRegisterComponent final : public UActorComponent
{
public:
	TMap<class FName, class UAnimPlusBankDataTable*> AnimBankMap;                                    // 0x00A0(0x0050)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	class FName                                   ExtraAnimBankName;                                 // 0x00F0(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	class UAnimPlusBankDataTable* GetAnimBankData(class FName AnimBankKey);
	class UAnimPlusBankDataTable* GetFirstAnimBankData();
	bool HasAnimationBankData();
	void RegisterAnimBank(class FName AnimBankKey);
	void RegisterAnimBankToTarget(class UAnimPlusBankComponent* AnimPlusBankComponent);
	void RegisterExtraAnimBanck(class FName AnimBankKey);
	void SetExtraAnimBankName(class FName InName);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AnimPlusBankRegisterComponent")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AnimPlusBankRegisterComponent")
	}
	static class UAnimPlusBankRegisterComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAnimPlusBankRegisterComponent>();
	}
};
DUMPER7_ASSERTS_UAnimPlusBankRegisterComponent;

// Class AnimPlus.AnimPlusFunctionLibrary
// 0x0000 (0x0028 - 0x0028)
class UAnimPlusFunctionLibrary final : public UBlueprintFunctionLibrary
{
public:
	static struct FGameplayTag GetAnimPlusBankCurrentConditoinTag(class AActor* InActor);
	static void SetAnimPlusBankCurrentConditoinTag(class AActor* InActor, const struct FGameplayTag& InTag);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AnimPlusFunctionLibrary")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AnimPlusFunctionLibrary")
	}
	static class UAnimPlusFunctionLibrary* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAnimPlusFunctionLibrary>();
	}
};
DUMPER7_ASSERTS_UAnimPlusFunctionLibrary;

// Class AnimPlus.AnimPlusListDataTable
// 0x0000 (0x00D8 - 0x00D8)
class UAnimPlusListDataTable final : public UNeoEditableCompositeDataTable
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AnimPlusListDataTable")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AnimPlusListDataTable")
	}
	static class UAnimPlusListDataTable* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAnimPlusListDataTable>();
	}
};
DUMPER7_ASSERTS_UAnimPlusListDataTable;

}

