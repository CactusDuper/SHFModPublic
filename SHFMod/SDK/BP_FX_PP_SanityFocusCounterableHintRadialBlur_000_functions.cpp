#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_FX_PP_SanityFocusCounterableHintRadialBlur_000

#include "Basic.hpp"

#include "BP_FX_PP_SanityFocusCounterableHintRadialBlur_000_classes.hpp"
#include "BP_FX_PP_SanityFocusCounterableHintRadialBlur_000_parameters.hpp"


namespace SDK
{

// Function BP_FX_PP_SanityFocusCounterableHintRadialBlur_000.BP_FX_PP_SanityFocusCounterableHintRadialBlur_000_C.Timeline__UpdateFunc
// (BlueprintEvent)

void ABP_FX_PP_SanityFocusCounterableHintRadialBlur_000_C::Timeline__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FX_PP_SanityFocusCounterableHintRadialBlur_000_C", "Timeline__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_FX_PP_SanityFocusCounterableHintRadialBlur_000.BP_FX_PP_SanityFocusCounterableHintRadialBlur_000_C.Timeline__FinishedFunc
// (BlueprintEvent)

void ABP_FX_PP_SanityFocusCounterableHintRadialBlur_000_C::Timeline__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FX_PP_SanityFocusCounterableHintRadialBlur_000_C", "Timeline__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_FX_PP_SanityFocusCounterableHintRadialBlur_000.BP_FX_PP_SanityFocusCounterableHintRadialBlur_000_C.ReceiveDestroyed
// (Event, Public, BlueprintEvent)

void ABP_FX_PP_SanityFocusCounterableHintRadialBlur_000_C::ReceiveDestroyed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FX_PP_SanityFocusCounterableHintRadialBlur_000_C", "ReceiveDestroyed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_FX_PP_SanityFocusCounterableHintRadialBlur_000.BP_FX_PP_SanityFocusCounterableHintRadialBlur_000_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_FX_PP_SanityFocusCounterableHintRadialBlur_000_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FX_PP_SanityFocusCounterableHintRadialBlur_000_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_FX_PP_SanityFocusCounterableHintRadialBlur_000.BP_FX_PP_SanityFocusCounterableHintRadialBlur_000_C.OnOpenNotebook
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_FX_PP_SanityFocusCounterableHintRadialBlur_000_C::OnOpenNotebook()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FX_PP_SanityFocusCounterableHintRadialBlur_000_C", "OnOpenNotebook");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_FX_PP_SanityFocusCounterableHintRadialBlur_000.BP_FX_PP_SanityFocusCounterableHintRadialBlur_000_C.OnExitNotebook
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_FX_PP_SanityFocusCounterableHintRadialBlur_000_C::OnExitNotebook()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FX_PP_SanityFocusCounterableHintRadialBlur_000_C", "OnExitNotebook");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_FX_PP_SanityFocusCounterableHintRadialBlur_000.BP_FX_PP_SanityFocusCounterableHintRadialBlur_000_C.ExecuteUbergraph_BP_FX_PP_SanityFocusCounterableHintRadialBlur_000
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_FX_PP_SanityFocusCounterableHintRadialBlur_000_C::ExecuteUbergraph_BP_FX_PP_SanityFocusCounterableHintRadialBlur_000(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FX_PP_SanityFocusCounterableHintRadialBlur_000_C", "ExecuteUbergraph_BP_FX_PP_SanityFocusCounterableHintRadialBlur_000");

	Params::BP_FX_PP_SanityFocusCounterableHintRadialBlur_000_C_ExecuteUbergraph_BP_FX_PP_SanityFocusCounterableHintRadialBlur_000 Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}

}

