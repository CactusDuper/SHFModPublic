#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Pl_Hina_PlayerController

#include "Basic.hpp"

#include "BP_Pl_Hina_PlayerController_classes.hpp"
#include "BP_Pl_Hina_PlayerController_parameters.hpp"


namespace SDK
{

// Function BP_Pl_Hina_PlayerController.BP_Pl_Hina_PlayerController_C.BPI_EnableLineOfSight
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    InValue                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Pl_Hina_PlayerController_C::BPI_EnableLineOfSight(bool InValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Pl_Hina_PlayerController_C", "BPI_EnableLineOfSight");

	Params::BP_Pl_Hina_PlayerController_C_BPI_EnableLineOfSight Parms{};

	Parms.InValue = InValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Pl_Hina_PlayerController.BP_Pl_Hina_PlayerController_C.BPI_EndCounterableHint
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_Pl_Hina_PlayerController_C::BPI_EndCounterableHint()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Pl_Hina_PlayerController_C", "BPI_EndCounterableHint");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Pl_Hina_PlayerController.BP_Pl_Hina_PlayerController_C.BPI_HandleBreakDown
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_Pl_Hina_PlayerController_C::BPI_HandleBreakDown()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Pl_Hina_PlayerController_C", "BPI_HandleBreakDown");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Pl_Hina_PlayerController.BP_Pl_Hina_PlayerController_C.BPI_HandleEndHPWarnings
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    InSourceFormEvent                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Pl_Hina_PlayerController_C::BPI_HandleEndHPWarnings(bool InSourceFormEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Pl_Hina_PlayerController_C", "BPI_HandleEndHPWarnings");

	Params::BP_Pl_Hina_PlayerController_C_BPI_HandleEndHPWarnings Parms{};

	Parms.InSourceFormEvent = InSourceFormEvent;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Pl_Hina_PlayerController.BP_Pl_Hina_PlayerController_C.BPI_HandleHellModeSpiritAttack
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_Pl_Hina_PlayerController_C::BPI_HandleHellModeSpiritAttack()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Pl_Hina_PlayerController_C", "BPI_HandleHellModeSpiritAttack");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Pl_Hina_PlayerController.BP_Pl_Hina_PlayerController_C.BPI_HandleJustDodge
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_Pl_Hina_PlayerController_C::BPI_HandleJustDodge()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Pl_Hina_PlayerController_C", "BPI_HandleJustDodge");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Pl_Hina_PlayerController.BP_Pl_Hina_PlayerController_C.BPI_HandleSanityFocus
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    InValue                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Pl_Hina_PlayerController_C::BPI_HandleSanityFocus(bool InValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Pl_Hina_PlayerController_C", "BPI_HandleSanityFocus");

	Params::BP_Pl_Hina_PlayerController_C_BPI_HandleSanityFocus Parms{};

	Parms.InValue = InValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Pl_Hina_PlayerController.BP_Pl_Hina_PlayerController_C.BPI_HandleSanityWeak
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    InValue                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Pl_Hina_PlayerController_C::BPI_HandleSanityWeak(bool InValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Pl_Hina_PlayerController_C", "BPI_HandleSanityWeak");

	Params::BP_Pl_Hina_PlayerController_C_BPI_HandleSanityWeak Parms{};

	Parms.InValue = InValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Pl_Hina_PlayerController.BP_Pl_Hina_PlayerController_C.BPI_HandleShiromukuRevive
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   InValue                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Pl_Hina_PlayerController_C::BPI_HandleShiromukuRevive(int32 InValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Pl_Hina_PlayerController_C", "BPI_HandleShiromukuRevive");

	Params::BP_Pl_Hina_PlayerController_C_BPI_HandleShiromukuRevive Parms{};

	Parms.InValue = InValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Pl_Hina_PlayerController.BP_Pl_Hina_PlayerController_C.BPI_HandleStartHPWarnings
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  InPlayTime                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    InSourceFormEvent                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Pl_Hina_PlayerController_C::BPI_HandleStartHPWarnings(double InPlayTime, bool InSourceFormEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Pl_Hina_PlayerController_C", "BPI_HandleStartHPWarnings");

	Params::BP_Pl_Hina_PlayerController_C_BPI_HandleStartHPWarnings Parms{};

	Parms.InPlayTime = InPlayTime;
	Parms.InSourceFormEvent = InSourceFormEvent;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Pl_Hina_PlayerController.BP_Pl_Hina_PlayerController_C.BPI_PlayControllerVibrationByData
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UForceFeedbackEffect*             ForceFeedbackEffect                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// const struct FNeoAudioPostEventParam&   HapticEffect                                           (BlueprintVisible, BlueprintReadOnly, Parm)

void ABP_Pl_Hina_PlayerController_C::BPI_PlayControllerVibrationByData(class UForceFeedbackEffect* ForceFeedbackEffect, const struct FNeoAudioPostEventParam& HapticEffect)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Pl_Hina_PlayerController_C", "BPI_PlayControllerVibrationByData");

	Params::BP_Pl_Hina_PlayerController_C_BPI_PlayControllerVibrationByData Parms{};

	Parms.ForceFeedbackEffect = ForceFeedbackEffect;
	Parms.HapticEffect = std::move(HapticEffect);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Pl_Hina_PlayerController.BP_Pl_Hina_PlayerController_C.BPI_PlayControllerVibrationByType
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// ENoceControllerVibrationType            VibrationType                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Pl_Hina_PlayerController_C::BPI_PlayControllerVibrationByType(ENoceControllerVibrationType VibrationType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Pl_Hina_PlayerController_C", "BPI_PlayControllerVibrationByType");

	Params::BP_Pl_Hina_PlayerController_C_BPI_PlayControllerVibrationByType Parms{};

	Parms.VibrationType = VibrationType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Pl_Hina_PlayerController.BP_Pl_Hina_PlayerController_C.BPI_StartCounterableHint
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  InAlpha                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  InBlend                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  InJitterScale                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  InJitterSpeed                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  InOverlayColor_ColorShiftBlend                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  InOverlayColorRatio                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FLinearColor&              InOverlayColor                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Pl_Hina_PlayerController_C::BPI_StartCounterableHint(double InAlpha, double InBlend, double InJitterScale, double InJitterSpeed, double InOverlayColor_ColorShiftBlend, double InOverlayColorRatio, const struct FLinearColor& InOverlayColor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Pl_Hina_PlayerController_C", "BPI_StartCounterableHint");

	Params::BP_Pl_Hina_PlayerController_C_BPI_StartCounterableHint Parms{};

	Parms.InAlpha = InAlpha;
	Parms.InBlend = InBlend;
	Parms.InJitterScale = InJitterScale;
	Parms.InJitterSpeed = InJitterSpeed;
	Parms.InOverlayColor_ColorShiftBlend = InOverlayColor_ColorShiftBlend;
	Parms.InOverlayColorRatio = InOverlayColorRatio;
	Parms.InOverlayColor = std::move(InOverlayColor);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Pl_Hina_PlayerController.BP_Pl_Hina_PlayerController_C.BPI_SwitchControlledPlayer
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ACharacter*                       InPlayerCharacter                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    InResetWeapon                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             InWeaponName                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    InFullReocver                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    InDestroyOldCharacter                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Pl_Hina_PlayerController_C::BPI_SwitchControlledPlayer(class ACharacter* InPlayerCharacter, bool InResetWeapon, class FName InWeaponName, bool InFullReocver, bool InDestroyOldCharacter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Pl_Hina_PlayerController_C", "BPI_SwitchControlledPlayer");

	Params::BP_Pl_Hina_PlayerController_C_BPI_SwitchControlledPlayer Parms{};

	Parms.InPlayerCharacter = InPlayerCharacter;
	Parms.InResetWeapon = InResetWeapon;
	Parms.InWeaponName = InWeaponName;
	Parms.InFullReocver = InFullReocver;
	Parms.InDestroyOldCharacter = InDestroyOldCharacter;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Pl_Hina_PlayerController.BP_Pl_Hina_PlayerController_C.BPI_UseHIna
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    InResetWeapon                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    InFullRecover                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Pl_Hina_PlayerController_C::BPI_UseHIna(bool InResetWeapon, bool InFullRecover)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Pl_Hina_PlayerController_C", "BPI_UseHIna");

	Params::BP_Pl_Hina_PlayerController_C_BPI_UseHIna Parms{};

	Parms.InResetWeapon = InResetWeapon;
	Parms.InFullRecover = InFullRecover;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Pl_Hina_PlayerController.BP_Pl_Hina_PlayerController_C.BPI_UseHinaClaw
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    InResetWeapon                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    InFullRecover                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Pl_Hina_PlayerController_C::BPI_UseHinaClaw(bool InResetWeapon, bool InFullRecover)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Pl_Hina_PlayerController_C", "BPI_UseHinaClaw");

	Params::BP_Pl_Hina_PlayerController_C_BPI_UseHinaClaw Parms{};

	Parms.InResetWeapon = InResetWeapon;
	Parms.InFullRecover = InFullRecover;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Pl_Hina_PlayerController.BP_Pl_Hina_PlayerController_C.BPI_UseHinaClawDevLevel
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    InResetWeapon                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    InFullRecover                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Pl_Hina_PlayerController_C::BPI_UseHinaClawDevLevel(bool InResetWeapon, bool InFullRecover)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Pl_Hina_PlayerController_C", "BPI_UseHinaClawDevLevel");

	Params::BP_Pl_Hina_PlayerController_C_BPI_UseHinaClawDevLevel Parms{};

	Parms.InResetWeapon = InResetWeapon;
	Parms.InFullRecover = InFullRecover;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Pl_Hina_PlayerController.BP_Pl_Hina_PlayerController_C.CheckPlayerReady
// (BlueprintCallable, BlueprintEvent)

void ABP_Pl_Hina_PlayerController_C::CheckPlayerReady()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Pl_Hina_PlayerController_C", "CheckPlayerReady");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Pl_Hina_PlayerController.BP_Pl_Hina_PlayerController_C.DestroyLineOfSight
// (Protected, BlueprintCallable, BlueprintEvent)

void ABP_Pl_Hina_PlayerController_C::DestroyLineOfSight()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Pl_Hina_PlayerController_C", "DestroyLineOfSight");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Pl_Hina_PlayerController.BP_Pl_Hina_PlayerController_C.DestroyNocePostProcessManager
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_Pl_Hina_PlayerController_C::DestroyNocePostProcessManager()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Pl_Hina_PlayerController_C", "DestroyNocePostProcessManager");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Pl_Hina_PlayerController.BP_Pl_Hina_PlayerController_C.ExecuteUbergraph_BP_Pl_Hina_PlayerController
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Pl_Hina_PlayerController_C::ExecuteUbergraph_BP_Pl_Hina_PlayerController(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Pl_Hina_PlayerController_C", "ExecuteUbergraph_BP_Pl_Hina_PlayerController");

	Params::BP_Pl_Hina_PlayerController_C_ExecuteUbergraph_BP_Pl_Hina_PlayerController Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Pl_Hina_PlayerController.BP_Pl_Hina_PlayerController_C.HandleOnNotebookWidgetOpen
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    InOpen                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Pl_Hina_PlayerController_C::HandleOnNotebookWidgetOpen(bool InOpen)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Pl_Hina_PlayerController_C", "HandleOnNotebookWidgetOpen");

	Params::BP_Pl_Hina_PlayerController_C_HandleOnNotebookWidgetOpen Parms{};

	Parms.InOpen = InOpen;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Pl_Hina_PlayerController.BP_Pl_Hina_PlayerController_C.OnGameInitialized
// (BlueprintCallable, BlueprintEvent)

void ABP_Pl_Hina_PlayerController_C::OnGameInitialized()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Pl_Hina_PlayerController_C", "OnGameInitialized");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Pl_Hina_PlayerController.BP_Pl_Hina_PlayerController_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_Pl_Hina_PlayerController_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Pl_Hina_PlayerController_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Pl_Hina_PlayerController.BP_Pl_Hina_PlayerController_C.ReceiveDestroyed
// (Event, Public, BlueprintEvent)

void ABP_Pl_Hina_PlayerController_C::ReceiveDestroyed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Pl_Hina_PlayerController_C", "ReceiveDestroyed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Pl_Hina_PlayerController.BP_Pl_Hina_PlayerController_C.ReceivePossess
// (Event, Protected, BlueprintEvent)
// Parameters:
// class APawn*                            PossessedPawn                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_Pl_Hina_PlayerController_C::ReceivePossess(class APawn* PossessedPawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Pl_Hina_PlayerController_C", "ReceivePossess");

	Params::BP_Pl_Hina_PlayerController_C_ReceivePossess Parms{};

	Parms.PossessedPawn = PossessedPawn;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Pl_Hina_PlayerController.BP_Pl_Hina_PlayerController_C.SpawnLineOfSight
// (Protected, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_Pl_Hina_PlayerController_C::SpawnLineOfSight()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Pl_Hina_PlayerController_C", "SpawnLineOfSight");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Pl_Hina_PlayerController.BP_Pl_Hina_PlayerController_C.SpawnNocePostProcessManager
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_NocePostProcessManager_C**    OutPostProcessManager                                  (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_Pl_Hina_PlayerController_C::SpawnNocePostProcessManager(class ABP_NocePostProcessManager_C** OutPostProcessManager)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Pl_Hina_PlayerController_C", "SpawnNocePostProcessManager");

	Params::BP_Pl_Hina_PlayerController_C_SpawnNocePostProcessManager Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (OutPostProcessManager != nullptr)
		*OutPostProcessManager = Parms.OutPostProcessManager;
}


// Function BP_Pl_Hina_PlayerController.BP_Pl_Hina_PlayerController_C.Switch Controled Player
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ACharacter*                       InPlayerCharacter                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    InResetWeapon                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             InWeaponName                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    InFullReocver                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    InDestroyOldCharacter                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Pl_Hina_PlayerController_C::Switch_Controled_Player(class ACharacter* InPlayerCharacter, bool InResetWeapon, class FName InWeaponName, bool InFullReocver, bool InDestroyOldCharacter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Pl_Hina_PlayerController_C", "Switch Controled Player");

	Params::BP_Pl_Hina_PlayerController_C_Switch_Controled_Player Parms{};

	Parms.InPlayerCharacter = InPlayerCharacter;
	Parms.InResetWeapon = InResetWeapon;
	Parms.InWeaponName = InWeaponName;
	Parms.InFullReocver = InFullReocver;
	Parms.InDestroyOldCharacter = InDestroyOldCharacter;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Pl_Hina_PlayerController.BP_Pl_Hina_PlayerController_C.UsePlayerBase
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UClass*                           InPlayerClass                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    InResetWeapon                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             InWeaponName                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    InFullReocver                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    InDestoryOldCharacter                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Pl_Hina_PlayerController_C::UsePlayerBase(class UClass* InPlayerClass, bool InResetWeapon, class FName InWeaponName, bool InFullReocver, bool InDestoryOldCharacter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Pl_Hina_PlayerController_C", "UsePlayerBase");

	Params::BP_Pl_Hina_PlayerController_C_UsePlayerBase Parms{};

	Parms.InPlayerClass = InPlayerClass;
	Parms.InResetWeapon = InResetWeapon;
	Parms.InWeaponName = InWeaponName;
	Parms.InFullReocver = InFullReocver;
	Parms.InDestoryOldCharacter = InDestoryOldCharacter;

	UObject::ProcessEvent(Func, &Parms);
}

}

