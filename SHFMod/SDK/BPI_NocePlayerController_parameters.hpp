#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPI_NocePlayerController

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "GameNoce_structs.hpp"
#include "NeoAudio_structs.hpp"


namespace SDK::Params
{

// Function BPI_NocePlayerController.BPI_NocePlayerController_C.BPI_EnableLineOfSight
// 0x0001 (0x0001 - 0x0000)
struct BPI_NocePlayerController_C_BPI_EnableLineOfSight final
{
public:
	bool                                          InValue;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
DUMPER7_ASSERTS_BPI_NocePlayerController_C_BPI_EnableLineOfSight;

// Function BPI_NocePlayerController.BPI_NocePlayerController_C.BPI_HandleEndHPWarnings
// 0x0001 (0x0001 - 0x0000)
struct BPI_NocePlayerController_C_BPI_HandleEndHPWarnings final
{
public:
	bool                                          InSourceFormEvent;                                 // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
DUMPER7_ASSERTS_BPI_NocePlayerController_C_BPI_HandleEndHPWarnings;

// Function BPI_NocePlayerController.BPI_NocePlayerController_C.BPI_HandleSanityFocus
// 0x0001 (0x0001 - 0x0000)
struct BPI_NocePlayerController_C_BPI_HandleSanityFocus final
{
public:
	bool                                          InValue;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
DUMPER7_ASSERTS_BPI_NocePlayerController_C_BPI_HandleSanityFocus;

// Function BPI_NocePlayerController.BPI_NocePlayerController_C.BPI_HandleSanityWeak
// 0x0001 (0x0001 - 0x0000)
struct BPI_NocePlayerController_C_BPI_HandleSanityWeak final
{
public:
	bool                                          InValue;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
DUMPER7_ASSERTS_BPI_NocePlayerController_C_BPI_HandleSanityWeak;

// Function BPI_NocePlayerController.BPI_NocePlayerController_C.BPI_HandleShiromukuRevive
// 0x0004 (0x0004 - 0x0000)
struct BPI_NocePlayerController_C_BPI_HandleShiromukuRevive final
{
public:
	int32                                         InValue;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
DUMPER7_ASSERTS_BPI_NocePlayerController_C_BPI_HandleShiromukuRevive;

// Function BPI_NocePlayerController.BPI_NocePlayerController_C.BPI_HandleStartHPWarnings
// 0x0010 (0x0010 - 0x0000)
struct BPI_NocePlayerController_C_BPI_HandleStartHPWarnings final
{
public:
	double                                        InPlayTime;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          InSourceFormEvent;                                 // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
DUMPER7_ASSERTS_BPI_NocePlayerController_C_BPI_HandleStartHPWarnings;

// Function BPI_NocePlayerController.BPI_NocePlayerController_C.BPI_PlayControllerVibrationByData
// 0x0078 (0x0078 - 0x0000)
struct BPI_NocePlayerController_C_BPI_PlayControllerVibrationByData final
{
public:
	class UForceFeedbackEffect*                   ForceFeedbackEffect;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FNeoAudioPostEventParam                HapticEffect;                                      // 0x0008(0x0070)(BlueprintVisible, BlueprintReadOnly, Parm)
};
DUMPER7_ASSERTS_BPI_NocePlayerController_C_BPI_PlayControllerVibrationByData;

// Function BPI_NocePlayerController.BPI_NocePlayerController_C.BPI_PlayControllerVibrationByType
// 0x0001 (0x0001 - 0x0000)
struct BPI_NocePlayerController_C_BPI_PlayControllerVibrationByType final
{
public:
	ENoceControllerVibrationType                  VibrationType;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
DUMPER7_ASSERTS_BPI_NocePlayerController_C_BPI_PlayControllerVibrationByType;

// Function BPI_NocePlayerController.BPI_NocePlayerController_C.BPI_StartCounterableHint
// 0x0040 (0x0040 - 0x0000)
struct BPI_NocePlayerController_C_BPI_StartCounterableHint final
{
public:
	double                                        InAlpha;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        InBlend;                                           // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        InJitterScale;                                     // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        InJitterSpeed;                                     // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        InOverlayColor_ColorShiftBlend;                    // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        InOverlayColorRatio;                               // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           InOverlayColor;                                    // 0x0030(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
DUMPER7_ASSERTS_BPI_NocePlayerController_C_BPI_StartCounterableHint;

// Function BPI_NocePlayerController.BPI_NocePlayerController_C.BPI_SwitchControlledPlayer
// 0x0018 (0x0018 - 0x0000)
struct BPI_NocePlayerController_C_BPI_SwitchControlledPlayer final
{
public:
	class ACharacter*                             InPlayerCharacter;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          InResetWeapon;                                     // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   InWeaponName;                                      // 0x000C(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          InFullReocver;                                     // 0x0014(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          InDestroyOldCharacter;                             // 0x0015(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
DUMPER7_ASSERTS_BPI_NocePlayerController_C_BPI_SwitchControlledPlayer;

// Function BPI_NocePlayerController.BPI_NocePlayerController_C.BPI_UseHIna
// 0x0002 (0x0002 - 0x0000)
struct BPI_NocePlayerController_C_BPI_UseHIna final
{
public:
	bool                                          InResetWeapon;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          InFullRecover;                                     // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
DUMPER7_ASSERTS_BPI_NocePlayerController_C_BPI_UseHIna;

// Function BPI_NocePlayerController.BPI_NocePlayerController_C.BPI_UseHinaClaw
// 0x0002 (0x0002 - 0x0000)
struct BPI_NocePlayerController_C_BPI_UseHinaClaw final
{
public:
	bool                                          InResetWeapon;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          InFullRecover;                                     // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
DUMPER7_ASSERTS_BPI_NocePlayerController_C_BPI_UseHinaClaw;

// Function BPI_NocePlayerController.BPI_NocePlayerController_C.BPI_UseHinaClawDevLevel
// 0x0002 (0x0002 - 0x0000)
struct BPI_NocePlayerController_C_BPI_UseHinaClawDevLevel final
{
public:
	bool                                          InResetWeapon;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          InFullRecover;                                     // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
DUMPER7_ASSERTS_BPI_NocePlayerController_C_BPI_UseHinaClawDevLevel;

}

