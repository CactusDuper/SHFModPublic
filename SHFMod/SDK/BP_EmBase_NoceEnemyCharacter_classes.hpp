#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_EmBase_NoceEnemyCharacter

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Enum_EmBase_NavAgent_structs.hpp"
#include "GameNoce_structs.hpp"
#include "GameNoce_classes.hpp"
#include "GameplayTags_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_EmBase_NoceEnemyCharacter.BP_EmBase_NoceEnemyCharacter_C
// 0x0270 (0x1170 - 0x0F00)
class ABP_EmBase_NoceEnemyCharacter_C final : public ANoceEnemyCharacter
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0F00(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UNoceEnemyPhysicsAssetSwapComp*         NoceEnemyPhysicsAssetSwapComp;                     // 0x0F08(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UNavModifierComponent*                  NavModifier;                                       // 0x0F10(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_NoceFootStepVFXComponent_C*         NoceFootStepVFXComponent;                          // 0x0F18(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UNoceAIFaceToTargetComponent*           NoceAIFaceToTarget;                                // 0x0F20(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UNoceSuperArmorComponent*               NoceSuperArmor;                                    // 0x0F28(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UNoceLockLocationComponent*             NoceLockLocation;                                  // 0x0F30(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UNoceRootMotionScaleComponent*          NoceRootMotionScale;                               // 0x0F38(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBPC_EmBase_NavLinkInfo_C*              BPC_EmBase_NavLinkInfo;                            // 0x0F40(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UNoceTimeComponent*                     NoceTime;                                          // 0x0F48(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UWidgetComponent*                       Widget_EnemyHealthBar;                             // 0x0F50(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UMotionWarpingComponent*                MotionWarping;                                     // 0x0F58(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBPC_EmBase_AttackRIghtManager_C*       BPC_EmBase_AttackRIghtManager;                     // 0x0F60(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_NoceHitPerformComponent_C*          NoceHitPerform;                                    // 0x0F68(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UNoceEnemyAttackInfoComponent*          NoceEnemyAttackInfo;                               // 0x0F70(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UNoceEnemyDamageHandleComponent*        NoceEnemyDamageHandle;                             // 0x0F78(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UNoceBodyPartGroupComponent*            NoceBodyPartGroup;                                 // 0x0F80(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UNoceAttackTraceComponent*              NoceAttackTrace;                                   // 0x0F88(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UNeoAudioSoundComponent*                NeoAudioSound;                                     // 0x0F90(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAnimPlusBankComponent*                 AnimPlusBank;                                      // 0x0F98(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        AutoDestroyTime;                                   // 0x0FA0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          AcceptPush;                                        // 0x0FA8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          EnableAIOnDamaged;                                 // 0x0FA9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FAA[0x6];                                      // 0x0FAA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           Loco_TurnR90;                                      // 0x0FB0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           Loco_TurnR180;                                     // 0x0FB8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           Loco_TurnL90;                                      // 0x0FC0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           Loco_TurnL180;                                     // 0x0FC8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          IsStrafe;                                          // 0x0FD0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FD1[0x7];                                      // 0x0FD1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Loco_NormalBaseSpeed;                              // 0x0FD8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Loco_StrafeBaseSpeed;                              // 0x0FE0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UAnimMontage*>                   DefaultSpawnMontageList;                           // 0x0FE8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	class ARecastNavMesh*                         UsedNavData;                                       // 0x0FF8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	int32                                         FindUsedNavDataIterator;                           // 0x1000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	Enum_EmBase_NavAgent                          NavAgentSetting;                                   // 0x1004(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1005[0x3];                                     // 0x1005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        MovementSpeedModifier;                             // 0x1008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        MovementSpeedBase;                                 // 0x1010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                LocomotionOffset;                                  // 0x1018(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        DefaultCapsuleRadius;                              // 0x1030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        DefaultCapsuleHalfHeight;                          // 0x1038(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMap<ECollisionChannel, ECollisionResponse>   DefaultCapsuleResponse;                            // 0x1040(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	ECollisionChannel                             DefaultCapsuleCollisionType;                       // 0x1090(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1091[0x7];                                     // 0x1091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        DefaultLocoAnimRate;                               // 0x1098(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               BasicRotationRate;                                 // 0x10A0(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          Setting_VOEnable;                                  // 0x10B8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10B9[0x3];                                     // 0x10B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         DmgReactionBlendOut;                               // 0x10BC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  LockHealthTagContainer;                            // 0x10C0(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FGameplayTagContainer                  LimitWinceTagContainer;                            // 0x10E0(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          UseAnimOptimaztion;                                // 0x1100(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          UseAIOptimization;                                 // 0x1101(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsCurrentOptimizeMode;                             // 0x1102(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	uint8                                         Pad_1103[0x5];                                     // 0x1103(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        DefaultGravity;                                    // 0x1108(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HopeNotToMove;                                     // 0x1110(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	uint8                                         Pad_1111[0x7];                                     // 0x1111(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           RandomFientMTG;                                    // 0x1118(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           StrafeMontageLeft;                                 // 0x1120(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           StrafeMontageRight;                                // 0x1128(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           StrafeMontageFront;                                // 0x1130(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           StrafeMontageBack;                                 // 0x1138(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          AdjustMovementTickInterval;                        // 0x1140(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1141[0x7];                                     // 0x1141(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        PerformanceTickInterval;                           // 0x1148(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ANoceEnemyCharacter*>            PushedEnemies;                                     // 0x1150(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	TArray<EObjectTypeQuery>                      GrappleCheckObstacleType;                          // 0x1160(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void BndEvt__BP_EmBase_NoceEnemyCharacter_CapsuleComponent_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, const struct FHitResult& Hit);
	void BndEvt__BP_EmBase_NoceEnemyCharacter_Mesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, const struct FHitResult& Hit);
	void Claculate_Wince_Type(ENoceWinceType InWinceType, ENoceWinceType* RetWinceType);
	bool Die_BP();
	void ExecuteUbergraph_BP_EmBase_NoceEnemyCharacter(int32 EntryPoint);
	void FadeIn();
	void FadeOut();
	void GetDebugShowLinkMotionInfo(bool* OutValue);
	void GetEnemyHealthBarInfo(class FName* ParentSocketName, struct FVector* RelativeLocation);
	void Handle_Optimization_Mode(bool Start_Optimization);
	void IEmBase_ApplySplineTarget(class USplineComponent* SplineComp);
	void IEmBase_ArriveSplineDestination();
	void IEmBase_CanFollowSpline(bool* FollowSpline);
	void IEmBase_ClearSplineTarget();
	void IEmBase_CustomEvent(class FName PatternName, double Parameter);
	void IEmBase_DebugBeahivourRemoveComp(class UActorComponent* In);
	void IEMBase_EnableMeshCollisionToPlayer(bool InEnable);
	void IEmBase_GetCurBaseMovementSpeed(double* BaseSpeed);
	void IEmBase_GetDefaultCapusleSetting(double* Radius, double* HalfHeight, TMap<ECollisionChannel, ECollisionResponse>* Response, ECollisionChannel* ObjectType);
	void IEmBase_GetDefaultSpawnMontage(class UAnimMontage** SpawnMontage);
	void IEmBase_GetIsCurrentOptimized(bool* Bool);
	void IEmBase_GetIsStrafe(bool* IsStrafe_0);
	void IEmBase_GetLocoTurnMontage(int32 Index_0, class UAnimMontage** outMTG);
	void IEmBase_GetPivotTurnMontage(double QuickTurnDegree, double LongTurnDegree, const struct FVector& TargetLoc, class UAnimMontage** TurnMontage);
	void IEmBase_GetSplineTarget(class USplineComponent** SplineComp);
	void IEmBase_GetStrafeDirectionMontage(ENoceHitReactionFourWayType Direction, class UAnimMontage** Montage);
	void IEmBase_GetUsedNavData(class ARecastNavMesh** NavData);
	void IEmBase_HandleDialogWhenDamaged(ENoceWinceType WinceType);
	void IEmBase_HandleHitByFriend(const struct FNoceAttackHitResult& NoceHitResult);
	void IEmBase_HandleSpawnerTeleportEvent(const struct FVector& DestLocation, const struct FRotator& DestRoration, bool* Result);
	void IEmBase_IsInPlayerCamDirection(bool* Bool);
	void IEmBase_IsPauseFollowSpline(bool* Pause);
	void IEmBase_OverrideLocoBaseSpeed(double BaseSpeed);
	void IEmBase_PlayMontageFromAnimBank(int32 BankID, int32 MotionID, double* duration);
	void IEmBase_RandomFient(double duration, double Dilation, class UAnimSequenceBase* Anim);
	void IEmBase_SendAudioTrigger(class FName AudioTriggerName);
	void IEmBase_SetEnableLookAt(bool Enable, const struct FNoceAILookAtSetting& LookAtSetting, bool* Result);
	void IEmBase_SetFaceToTargetInfo(const struct FNoceAIFaceToTargetInfo& Info);
	void IEmBase_SetFocusActor(bool IsStrafe_0, class AActor* FocusActor);
	void IEmBase_SetFocusPoint(bool IsStrafe_0, const struct FVector& FocusLoc);
	void IEmBase_SetHopeNotMove(bool HopeNotMove);
	void IEmBase_SetMaxLookDistance(bool Enable, double MaxLookDistance, bool* Result);
	void IEmBase_ShootProjectile(class FName PatternName);
	void IEmBase_TriggerLinkAbility(class ANoceCharacter* LinkTarget, class FName ExAbilityName);
	void IEmBase_UpdateAdditionalCollisionTransform();
	void IEmBase_UpdateBaseMovementSpeed(double BaseSpeed);
	void IEmBase_UpdateLocomotionOffset(const struct FVector& Offset);
	void IEmBase_UpdateModifiedMovementSpeed(double Modifier);
	void InitCapsuleCollisionSetting();
	void InitialLocomotionMovement();
	void InitNavSetting();
	void IsHealthAlive(bool* Alive);
	void IsLockHealth(bool* IsLimit);
	void IsLockWince(bool* IsLimit);
	void OnAttackHitFriend(const struct FNoceAttackHitResult& NoceHitResult);
	void OnAttackTraceGrappleHit(const TArray<struct FNoceAttackHitResult>& HitResults);
	void OnAttackTraceHit(const TArray<struct FNoceAttackHitResult>& HitResults);
	void OnBodyPartBreak(class FName PartName);
	bool OnDamaged_BP(const struct FNoceAttackHitResult& AttackHitResult);
	void OnDamaged_ForceEnableAI();
	void OnDamaged_MontageBlendOut();
	void OnPostSignificance(class ANoceCharacter* Character, float Significance);
	void ReceiveBeginPlay();
	void ReceiveTick(float DeltaSeconds);
	void SetupEnemyHealthBar();
	void StartAutoDestory();
	void TryGetUsedNavData();
	void TryInitNavData();
	void Update_Push_Offset(float DeltaTime);
	void UpdateCharacterMovement();
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		BP_STATIC_CLASS_IMPL("BP_EmBase_NoceEnemyCharacter_C")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"BP_EmBase_NoceEnemyCharacter_C")
	}
	static class ABP_EmBase_NoceEnemyCharacter_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_EmBase_NoceEnemyCharacter_C>();
	}
};
DUMPER7_ASSERTS_ABP_EmBase_NoceEnemyCharacter_C;

}

