#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABP_NpcBase

#include "Basic.hpp"

#include "ABP_NpcBase_classes.hpp"
#include "ABP_NpcBase_parameters.hpp"


namespace SDK
{

// Function ABP_NpcBase.ABP_NpcBase_C.AfterSetDefaultSlotBlending
// (Event, Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   InValue                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UABP_NpcBase_C::AfterSetDefaultSlotBlending(float InValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_NpcBase_C", "AfterSetDefaultSlotBlending");

	Params::ABP_NpcBase_C_AfterSetDefaultSlotBlending Parms{};

	Parms.InValue = InValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ABP_NpcBase.ABP_NpcBase_C.AnimGraph
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FPoseLink*                       AnimGraph_0                                            (Parm, OutParm, NoDestructor)

void UABP_NpcBase_C::AnimGraph(struct FPoseLink* AnimGraph_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_NpcBase_C", "AnimGraph");

	Params::ABP_NpcBase_C_AnimGraph Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AnimGraph_0 != nullptr)
		*AnimGraph_0 = std::move(Parms.AnimGraph_0);
}


// Function ABP_NpcBase.ABP_NpcBase_C.AnimNotify_EnteredWalkStart
// (BlueprintCallable, BlueprintEvent)

void UABP_NpcBase_C::AnimNotify_EnteredWalkStart()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_NpcBase_C", "AnimNotify_EnteredWalkStart");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ABP_NpcBase.ABP_NpcBase_C.AnimNotify_EnterIdle
// (BlueprintCallable, BlueprintEvent)

void UABP_NpcBase_C::AnimNotify_EnterIdle()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_NpcBase_C", "AnimNotify_EnterIdle");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ABP_NpcBase.ABP_NpcBase_C.AnimNotify_EnterTrasitToTurn
// (BlueprintCallable, BlueprintEvent)

void UABP_NpcBase_C::AnimNotify_EnterTrasitToTurn()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_NpcBase_C", "AnimNotify_EnterTrasitToTurn");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ABP_NpcBase.ABP_NpcBase_C.AnimNotify_EnterWalkEnd
// (BlueprintCallable, BlueprintEvent)

void UABP_NpcBase_C::AnimNotify_EnterWalkEnd()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_NpcBase_C", "AnimNotify_EnterWalkEnd");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ABP_NpcBase.ABP_NpcBase_C.AnimNotify_FullyBlendedWalk
// (BlueprintCallable, BlueprintEvent)

void UABP_NpcBase_C::AnimNotify_FullyBlendedWalk()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_NpcBase_C", "AnimNotify_FullyBlendedWalk");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ABP_NpcBase.ABP_NpcBase_C.AnimNotify_LeftWalk
// (BlueprintCallable, BlueprintEvent)

void UABP_NpcBase_C::AnimNotify_LeftWalk()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_NpcBase_C", "AnimNotify_LeftWalk");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ABP_NpcBase.ABP_NpcBase_C.AnimNotify_TurnToIdle
// (BlueprintCallable, BlueprintEvent)

void UABP_NpcBase_C::AnimNotify_TurnToIdle()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_NpcBase_C", "AnimNotify_TurnToIdle");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ABP_NpcBase.ABP_NpcBase_C.BlueprintBeginPlay
// (Event, Public, BlueprintEvent)

void UABP_NpcBase_C::BlueprintBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_NpcBase_C", "BlueprintBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ABP_NpcBase.ABP_NpcBase_C.BlueprintUpdateAnimation
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaTimeX                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UABP_NpcBase_C::BlueprintUpdateAnimation(float DeltaTimeX)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_NpcBase_C", "BlueprintUpdateAnimation");

	Params::ABP_NpcBase_C_BlueprintUpdateAnimation Parms{};

	Parms.DeltaTimeX = DeltaTimeX;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ABP_NpcBase.ABP_NpcBase_C.CheckOnSlope
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  InDeltaSeconds                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UABP_NpcBase_C::CheckOnSlope(double InDeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_NpcBase_C", "CheckOnSlope");

	Params::ABP_NpcBase_C_CheckOnSlope Parms{};

	Parms.InDeltaSeconds = InDeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ABP_NpcBase.ABP_NpcBase_C.CheckShouldMove
// (Public, BlueprintCallable, BlueprintEvent)

void UABP_NpcBase_C::CheckShouldMove()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_NpcBase_C", "CheckShouldMove");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ABP_NpcBase.ABP_NpcBase_C.EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_NpcBase_AnimGraphNode_BlendListByBool_EFF40E1041E53D1E548F898BB8B7CA33
// (BlueprintEvent)

void UABP_NpcBase_C::EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_NpcBase_AnimGraphNode_BlendListByBool_EFF40E1041E53D1E548F898BB8B7CA33()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_NpcBase_C", "EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_NpcBase_AnimGraphNode_BlendListByBool_EFF40E1041E53D1E548F898BB8B7CA33");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ABP_NpcBase.ABP_NpcBase_C.EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_NpcBase_AnimGraphNode_TransitionResult_1C9231C24EB173B047DD64A83BA26FF6
// (BlueprintEvent)

void UABP_NpcBase_C::EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_NpcBase_AnimGraphNode_TransitionResult_1C9231C24EB173B047DD64A83BA26FF6()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_NpcBase_C", "EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_NpcBase_AnimGraphNode_TransitionResult_1C9231C24EB173B047DD64A83BA26FF6");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ABP_NpcBase.ABP_NpcBase_C.EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_NpcBase_AnimGraphNode_TransitionResult_44937D3C44B79F1748D546B60184AB4D
// (BlueprintEvent)

void UABP_NpcBase_C::EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_NpcBase_AnimGraphNode_TransitionResult_44937D3C44B79F1748D546B60184AB4D()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_NpcBase_C", "EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_NpcBase_AnimGraphNode_TransitionResult_44937D3C44B79F1748D546B60184AB4D");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ABP_NpcBase.ABP_NpcBase_C.EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_NpcBase_AnimGraphNode_TransitionResult_87571F784E7A74C4CA39C68E21B28778
// (BlueprintEvent)

void UABP_NpcBase_C::EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_NpcBase_AnimGraphNode_TransitionResult_87571F784E7A74C4CA39C68E21B28778()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_NpcBase_C", "EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_NpcBase_AnimGraphNode_TransitionResult_87571F784E7A74C4CA39C68E21B28778");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ABP_NpcBase.ABP_NpcBase_C.EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_NpcBase_AnimGraphNode_TransitionResult_8A37E84C4D3B582B6F55869D8A3C117E
// (BlueprintEvent)

void UABP_NpcBase_C::EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_NpcBase_AnimGraphNode_TransitionResult_8A37E84C4D3B582B6F55869D8A3C117E()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_NpcBase_C", "EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_NpcBase_AnimGraphNode_TransitionResult_8A37E84C4D3B582B6F55869D8A3C117E");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ABP_NpcBase.ABP_NpcBase_C.ExecuteUbergraph_ABP_NpcBase
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UABP_NpcBase_C::ExecuteUbergraph_ABP_NpcBase(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_NpcBase_C", "ExecuteUbergraph_ABP_NpcBase");

	Params::ABP_NpcBase_C_ExecuteUbergraph_ABP_NpcBase Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ABP_NpcBase.ABP_NpcBase_C.GetAngleBetweenVectors
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// const struct FVector&                   Vector1                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   Vector2                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double*                                 Angle                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UABP_NpcBase_C::GetAngleBetweenVectors(const struct FVector& Vector1, const struct FVector& Vector2, double* Angle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_NpcBase_C", "GetAngleBetweenVectors");

	Params::ABP_NpcBase_C_GetAngleBetweenVectors Parms{};

	Parms.Vector1 = std::move(Vector1);
	Parms.Vector2 = std::move(Vector2);

	UObject::ProcessEvent(Func, &Parms);

	if (Angle != nullptr)
		*Angle = Parms.Angle;
}


// Function ABP_NpcBase.ABP_NpcBase_C.GetSlopeBlendRatio
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

float UABP_NpcBase_C::GetSlopeBlendRatio()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_NpcBase_C", "GetSlopeBlendRatio");

	Params::ABP_NpcBase_C_GetSlopeBlendRatio Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function ABP_NpcBase.ABP_NpcBase_C.HandleBlendSlopeRatio
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  InDeltaSeconds                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UABP_NpcBase_C::HandleBlendSlopeRatio(double InDeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_NpcBase_C", "HandleBlendSlopeRatio");

	Params::ABP_NpcBase_C_HandleBlendSlopeRatio Parms{};

	Parms.InDeltaSeconds = InDeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ABP_NpcBase.ABP_NpcBase_C.HandleIKInterpolateSpeed
// (Public, BlueprintCallable, BlueprintEvent)

void UABP_NpcBase_C::HandleIKInterpolateSpeed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_NpcBase_C", "HandleIKInterpolateSpeed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ABP_NpcBase.ABP_NpcBase_C.On Idle State Update
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FAnimUpdateContext&        Context                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// const struct FAnimNodeReference&        Node                                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)

void UABP_NpcBase_C::On_Idle_State_Update(const struct FAnimUpdateContext& Context, const struct FAnimNodeReference& Node)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_NpcBase_C", "On Idle State Update");

	Params::ABP_NpcBase_C_On_Idle_State_Update Parms{};

	Parms.Context = std::move(Context);
	Parms.Node = std::move(Node);

	UObject::ProcessEvent(Func, &Parms);
}


// Function ABP_NpcBase.ABP_NpcBase_C.On Idle Var State Entry
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FAnimUpdateContext&        Context                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// const struct FAnimNodeReference&        Node                                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)

void UABP_NpcBase_C::On_Idle_Var_State_Entry(const struct FAnimUpdateContext& Context, const struct FAnimNodeReference& Node)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_NpcBase_C", "On Idle Var State Entry");

	Params::ABP_NpcBase_C_On_Idle_Var_State_Entry Parms{};

	Parms.Context = std::move(Context);
	Parms.Node = std::move(Node);

	UObject::ProcessEvent(Func, &Parms);
}


// Function ABP_NpcBase.ABP_NpcBase_C.Set Max Walk Speed
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    InEnableRun                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  InMaxMoveSpeed                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UABP_NpcBase_C::Set_Max_Walk_Speed(bool InEnableRun, double InMaxMoveSpeed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_NpcBase_C", "Set Max Walk Speed");

	Params::ABP_NpcBase_C_Set_Max_Walk_Speed Parms{};

	Parms.InEnableRun = InEnableRun;
	Parms.InMaxMoveSpeed = InMaxMoveSpeed;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ABP_NpcBase.ABP_NpcBase_C.UpdateMaxWalkSpeed
// (Public, BlueprintCallable, BlueprintEvent)

void UABP_NpcBase_C::UpdateMaxWalkSpeed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_NpcBase_C", "UpdateMaxWalkSpeed");

	UObject::ProcessEvent(Func, nullptr);
}

}

