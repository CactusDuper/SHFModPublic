#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_NoceTentacleSubSystem

#include "Basic.hpp"

#include "BP_NoceTentacleSubSystem_classes.hpp"
#include "BP_NoceTentacleSubSystem_parameters.hpp"


namespace SDK
{

// Function BP_NoceTentacleSubSystem.BP_NoceTentacleSubSystem_C.CheckOneAndOnlyTentacle
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_NoceTentacleSubSystem_C::CheckOneAndOnlyTentacle()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NoceTentacleSubSystem_C", "CheckOneAndOnlyTentacle");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_NoceTentacleSubSystem.BP_NoceTentacleSubSystem_C.Deinitialize_BP
// (Event, Protected, BlueprintEvent)

void UBP_NoceTentacleSubSystem_C::Deinitialize_BP()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NoceTentacleSubSystem_C", "Deinitialize_BP");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_NoceTentacleSubSystem.BP_NoceTentacleSubSystem_C.ExecuteUbergraph_BP_NoceTentacleSubSystem
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_NoceTentacleSubSystem_C::ExecuteUbergraph_BP_NoceTentacleSubSystem(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NoceTentacleSubSystem_C", "ExecuteUbergraph_BP_NoceTentacleSubSystem");

	Params::BP_NoceTentacleSubSystem_C_ExecuteUbergraph_BP_NoceTentacleSubSystem Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_NoceTentacleSubSystem.BP_NoceTentacleSubSystem_C.HandleRequestTentacleLinkMotion
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           RequestActor                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class AActor*                           TargetActor                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class FName                             LinkName                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_NoceTentacleSubSystem_C::HandleRequestTentacleLinkMotion(class AActor* RequestActor, class AActor* TargetActor, class FName LinkName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NoceTentacleSubSystem_C", "HandleRequestTentacleLinkMotion");

	Params::BP_NoceTentacleSubSystem_C_HandleRequestTentacleLinkMotion Parms{};

	Parms.RequestActor = RequestActor;
	Parms.TargetActor = TargetActor;
	Parms.LinkName = LinkName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_NoceTentacleSubSystem.BP_NoceTentacleSubSystem_C.Initialize_BP
// (Event, Protected, BlueprintEvent)

void UBP_NoceTentacleSubSystem_C::Initialize_BP()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NoceTentacleSubSystem_C", "Initialize_BP");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_NoceTentacleSubSystem.BP_NoceTentacleSubSystem_C.IsErosionTentacleActive
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool*                                   ActiveErosionTentacle                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_NoceTentacleSubSystem_C::IsErosionTentacleActive(bool* ActiveErosionTentacle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NoceTentacleSubSystem_C", "IsErosionTentacleActive");

	Params::BP_NoceTentacleSubSystem_C_IsErosionTentacleActive Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (ActiveErosionTentacle != nullptr)
		*ActiveErosionTentacle = Parms.ActiveErosionTentacle;
}


// Function BP_NoceTentacleSubSystem.BP_NoceTentacleSubSystem_C.OnLoaded_056256D84D71343877EFDF8027DB4401
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// TSubclassOf<class UObject>              Loaded                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)

void UBP_NoceTentacleSubSystem_C::OnLoaded_056256D84D71343877EFDF8027DB4401(TSubclassOf<class UObject> Loaded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NoceTentacleSubSystem_C", "OnLoaded_056256D84D71343877EFDF8027DB4401");

	Params::BP_NoceTentacleSubSystem_C_OnLoaded_056256D84D71343877EFDF8027DB4401 Parms{};

	Parms.Loaded = Loaded;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_NoceTentacleSubSystem.BP_NoceTentacleSubSystem_C.OnProgressChanged
// (Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FGameplayTag&              NewTag                                                 (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)

void UBP_NoceTentacleSubSystem_C::OnProgressChanged(const struct FGameplayTag& NewTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NoceTentacleSubSystem_C", "OnProgressChanged");

	Params::BP_NoceTentacleSubSystem_C_OnProgressChanged Parms{};

	Parms.NewTag = std::move(NewTag);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_NoceTentacleSubSystem.BP_NoceTentacleSubSystem_C.OnProgressInit
// (Protected, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FGameplayTag&              NewTag                                                 (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)

void UBP_NoceTentacleSubSystem_C::OnProgressInit(const struct FGameplayTag& NewTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NoceTentacleSubSystem_C", "OnProgressInit");

	Params::BP_NoceTentacleSubSystem_C_OnProgressInit Parms{};

	Parms.NewTag = std::move(NewTag);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_NoceTentacleSubSystem.BP_NoceTentacleSubSystem_C.OnTentacleExist
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_NoceTentacleSubSystem_C::OnTentacleExist(bool Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NoceTentacleSubSystem_C", "OnTentacleExist");

	Params::BP_NoceTentacleSubSystem_C_OnTentacleExist Parms{};

	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_NoceTentacleSubSystem.BP_NoceTentacleSubSystem_C.ReceiveOnPlayerDieEvent
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_NoceTentacleSubSystem_C::ReceiveOnPlayerDieEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NoceTentacleSubSystem_C", "ReceiveOnPlayerDieEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_NoceTentacleSubSystem.BP_NoceTentacleSubSystem_C.RecordErosionVariable
// (Protected, BlueprintCallable, BlueprintEvent)

void UBP_NoceTentacleSubSystem_C::RecordErosionVariable()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NoceTentacleSubSystem_C", "RecordErosionVariable");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_NoceTentacleSubSystem.BP_NoceTentacleSubSystem_C.RegisterGameEvent
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_NoceTentacleSubSystem_C::RegisterGameEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NoceTentacleSubSystem_C", "RegisterGameEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_NoceTentacleSubSystem.BP_NoceTentacleSubSystem_C.RegisterProgressEvent
// (Protected, BlueprintCallable, BlueprintEvent)

void UBP_NoceTentacleSubSystem_C::RegisterProgressEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NoceTentacleSubSystem_C", "RegisterProgressEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_NoceTentacleSubSystem.BP_NoceTentacleSubSystem_C.RequestPreloadTentacleAsset
// (BlueprintCallable, BlueprintEvent)

void UBP_NoceTentacleSubSystem_C::RequestPreloadTentacleAsset()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NoceTentacleSubSystem_C", "RequestPreloadTentacleAsset");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_NoceTentacleSubSystem.BP_NoceTentacleSubSystem_C.RequestTentacleDisableBlockCamera
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_NoceTentacleSubSystem_C::RequestTentacleDisableBlockCamera()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NoceTentacleSubSystem_C", "RequestTentacleDisableBlockCamera");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_NoceTentacleSubSystem.BP_NoceTentacleSubSystem_C.RequestTentacleLink_BP
// (Event, Protected, BlueprintEvent)
// Parameters:
// class AActor*                           RequestActor                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class AActor*                           TargetActor                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class FName                             LinkName                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_NoceTentacleSubSystem_C::RequestTentacleLink_BP(class AActor* RequestActor, class AActor* TargetActor, class FName LinkName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NoceTentacleSubSystem_C", "RequestTentacleLink_BP");

	Params::BP_NoceTentacleSubSystem_C_RequestTentacleLink_BP Parms{};

	Parms.RequestActor = RequestActor;
	Parms.TargetActor = TargetActor;
	Parms.LinkName = LinkName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_NoceTentacleSubSystem.BP_NoceTentacleSubSystem_C.RestoreErosionVariable
// (Protected, BlueprintCallable, BlueprintEvent)

void UBP_NoceTentacleSubSystem_C::RestoreErosionVariable()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NoceTentacleSubSystem_C", "RestoreErosionVariable");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_NoceTentacleSubSystem.BP_NoceTentacleSubSystem_C.ToggleErosionTentacleDebugFlag
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_NoceTentacleSubSystem_C::ToggleErosionTentacleDebugFlag()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NoceTentacleSubSystem_C", "ToggleErosionTentacleDebugFlag");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_NoceTentacleSubSystem.BP_NoceTentacleSubSystem_C.ToggleShowErosionTentacle
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_NoceTentacleSubSystem_C::ToggleShowErosionTentacle()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NoceTentacleSubSystem_C", "ToggleShowErosionTentacle");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_NoceTentacleSubSystem.BP_NoceTentacleSubSystem_C.UnLoadCachedObject
// (BlueprintCallable, BlueprintEvent)

void UBP_NoceTentacleSubSystem_C::UnLoadCachedObject()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NoceTentacleSubSystem_C", "UnLoadCachedObject");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_NoceTentacleSubSystem.BP_NoceTentacleSubSystem_C.UnRegisterGameEvent
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_NoceTentacleSubSystem_C::UnRegisterGameEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NoceTentacleSubSystem_C", "UnRegisterGameEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_NoceTentacleSubSystem.BP_NoceTentacleSubSystem_C.UnRegisterProgressEvent
// (Protected, BlueprintCallable, BlueprintEvent)

void UBP_NoceTentacleSubSystem_C::UnRegisterProgressEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NoceTentacleSubSystem_C", "UnRegisterProgressEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_NoceTentacleSubSystem.BP_NoceTentacleSubSystem_C.WorldBeginPlay_BP
// (Event, Protected, BlueprintEvent)

void UBP_NoceTentacleSubSystem_C::WorldBeginPlay_BP()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NoceTentacleSubSystem_C", "WorldBeginPlay_BP");

	UObject::ProcessEvent(Func, nullptr);
}

}

