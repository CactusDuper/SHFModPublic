#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_InteractBase

#include "Basic.hpp"

#include "GameNoce_structs.hpp"
#include "GameNoce_classes.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_InteractBase.BP_InteractBase_C
// 0x01A0 (0x0588 - 0x03E8)
class ABP_InteractBase_C : public ANoceInteractableBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x03E8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x03F0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UWBP_InteractIcon_C*                    ButtonIconWidget;                                  // 0x03F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Target;                                            // 0x0400(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	TArray<EObjectTypeQuery>                      QueryObjectTypes;                                  // 0x0408(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          AutoCreateHintCollision;                           // 0x0418(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENoceAutoHintSize                             AutoHintSizeType;                                  // 0x0419(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_41A[0x6];                                      // 0x041A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                AdditionalBoxExtent;                               // 0x0420(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UBoxComponent*>                  HintBoxCollision;                                  // 0x0438(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	bool                                          UseSphere;                                         // 0x0448(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_449[0x7];                                      // 0x0449(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        SphereRadius;                                      // 0x0450(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USphereComponent*                       HintSphereCollision;                               // 0x0458(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          DebugDrawCollision;                                // 0x0460(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_461[0x7];                                      // 0x0461(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        AngleRange;                                        // 0x0468(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        AngleStartFrom;                                    // 0x0470(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        HeightOffsetMin;                                   // 0x0478(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        HeightOffSetMax;                                   // 0x0480(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAbilitySystemComponent*                AbilitySystemComponent;                            // 0x0488(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          AutoCreateLookAtCollision;                         // 0x0490(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          DebugDrawLookAtBoxCollision;                       // 0x0491(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_492[0x6];                                      // 0x0492(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                AdditionalLookAtBoxExtent;                         // 0x0498(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UBoxComponent*>                  LookAtBoxCollisions;                               // 0x04B0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	class UNoceCheatManager*                      NoceCheatManager;                                  // 0x04C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	bool                                          CheckAsNonInstantInteract;                         // 0x04C8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsCheckEnemyInSight;                               // 0x04C9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4CA[0x6];                                      // 0x04CA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<ENoceAutoHintSize, double>               DefaultAutoHintRadius;                             // 0x04D0(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMap<ENoceAutoHintSize, struct FVector>       DefaultAutoHintBoxExtent;                          // 0x0520(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          IsCheckDialogOnScreen;                             // 0x0570(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_571[0x7];                                      // 0x0571(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FNoceDialogDataRowHandle>       ForbitWhenHasDialog;                               // 0x0578(0x0010)(Edit, BlueprintVisible)

public:
	bool CanPlayerInteract(bool InCheckEnemyInSight);
	void ChangeHintSizeType(ENoceAutoHintSize InType);
	void CreateHintBoxBasedOnBox(class UBoxComponent*& RefCollision, class UBoxComponent** SpawnedBox);
	void CreateHintCollision(class UBoxComponent* InBoxCollision);
	bool CreateHintWidget();
	void CreateLookAtCollison(class UBoxComponent* InBoxCollision, class UBoxComponent** SpawnedBox);
	void DrawAngle(double InDuration);
	void DrawCollision(double InDuration);
	void DrawHeight();
	void DrawLookAtCollision(double InDuration);
	void ExecuteUbergraph_BP_InteractBase(int32 EntryPoint);
	void FindExistingAutoHint(class UPrimitiveComponent** Output);
	void GetAutoHintBoxExtent(struct FVector* BoxExtent);
	void GetAutoHintRadius(double* Radius);
	TArray<class UBoxComponent*> GetHintboxes();
	class USphereComponent* GetHintSphere();
	struct FVector GetInteractableLocation();
	void GetLocalBoxCollision(class UBoxComponent** ReturnedBox);
	void HandleBeginPlay();
	void HideIcon();
	void IsHitActorMatched(class AActor* InHitActor, bool* Matched);
	bool IsInteractionForbitBP();
	bool IsWallEndValid(const struct FVector& InWallEndPoint, double InCapsuleHalfHeight, double InCapsuleRadius, bool InDrawDebug);
	void OnAutoHintBoxBeginOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void OnAutoHintBoxEndOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void OnBeginLookAtOverlap();
	void OnEndLookAtOverlap();
	void OnLookAtCollisionBeginOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void OnLookAtCollisionEndOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void ReceiveBeginPlay();
	void ReceiveEndPlay(EEndPlayReason EndPlayReason);
	void SetHintCollisionsType(ECollisionEnabled NewType);
	void ShowHintIcon();
	void ShowPromptIcon();
	void UnbindHintCollisionEvent();
	void UnbindLookAtCollisionEvent();
	void UpdateHintLocation();

public:
	static class UClass* StaticClass()
	{
		BP_STATIC_CLASS_IMPL("BP_InteractBase_C")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"BP_InteractBase_C")
	}
	static class ABP_InteractBase_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_InteractBase_C>();
	}
};
DUMPER7_ASSERTS_ABP_InteractBase_C;

}

