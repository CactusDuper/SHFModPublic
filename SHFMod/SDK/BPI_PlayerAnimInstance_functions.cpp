#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPI_PlayerAnimInstance

#include "Basic.hpp"

#include "BPI_PlayerAnimInstance_classes.hpp"
#include "BPI_PlayerAnimInstance_parameters.hpp"


namespace SDK
{

// Function BPI_PlayerAnimInstance.BPI_PlayerAnimInstance_C.SetCanEnterIdleVar
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    CanEnterIdleVar                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   IdleVarInt                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_PlayerAnimInstance_C::SetCanEnterIdleVar(bool CanEnterIdleVar, int32 IdleVarInt)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("BPI_PlayerAnimInstance_C", "SetCanEnterIdleVar");

	Params::BPI_PlayerAnimInstance_C_SetCanEnterIdleVar Parms{};

	Parms.CanEnterIdleVar = CanEnterIdleVar;
	Parms.IdleVarInt = IdleVarInt;

	AsUObject()->ProcessEvent(Func, &Parms);
}


// Function BPI_PlayerAnimInstance.BPI_PlayerAnimInstance_C.GetOnSlope
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                                   IsOnSlope                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_PlayerAnimInstance_C::GetOnSlope(bool* IsOnSlope)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("BPI_PlayerAnimInstance_C", "GetOnSlope");

	Params::BPI_PlayerAnimInstance_C_GetOnSlope Parms{};

	AsUObject()->ProcessEvent(Func, &Parms);

	if (IsOnSlope != nullptr)
		*IsOnSlope = Parms.IsOnSlope;
}


// Function BPI_PlayerAnimInstance.BPI_PlayerAnimInstance_C.BPI_SetLadderHeadLayer
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    UseLadderHeadLayer                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_PlayerAnimInstance_C::BPI_SetLadderHeadLayer(bool UseLadderHeadLayer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("BPI_PlayerAnimInstance_C", "BPI_SetLadderHeadLayer");

	Params::BPI_PlayerAnimInstance_C_BPI_SetLadderHeadLayer Parms{};

	Parms.UseLadderHeadLayer = UseLadderHeadLayer;

	AsUObject()->ProcessEvent(Func, &Parms);
}


// Function BPI_PlayerAnimInstance.BPI_PlayerAnimInstance_C.BPI_PlayerAnim_UpdateSlopeAngle
// (Public, BlueprintCallable, BlueprintEvent)

void IBPI_PlayerAnimInstance_C::BPI_PlayerAnim_UpdateSlopeAngle()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("BPI_PlayerAnimInstance_C", "BPI_PlayerAnim_UpdateSlopeAngle");

	AsUObject()->ProcessEvent(Func, nullptr);
}


// Function BPI_PlayerAnimInstance.BPI_PlayerAnimInstance_C.BPI_PlayerAnim_SetInSeamless
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NewValue                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_PlayerAnimInstance_C::BPI_PlayerAnim_SetInSeamless(bool NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("BPI_PlayerAnimInstance_C", "BPI_PlayerAnim_SetInSeamless");

	Params::BPI_PlayerAnimInstance_C_BPI_PlayerAnim_SetInSeamless Parms{};

	Parms.NewValue = NewValue;

	AsUObject()->ProcessEvent(Func, &Parms);
}


// Function BPI_PlayerAnimInstance.BPI_PlayerAnimInstance_C.BPI_PlayerAnim_SetInCutscene
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NewValue                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_PlayerAnimInstance_C::BPI_PlayerAnim_SetInCutscene(bool NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("BPI_PlayerAnimInstance_C", "BPI_PlayerAnim_SetInCutscene");

	Params::BPI_PlayerAnimInstance_C_BPI_PlayerAnim_SetInCutscene Parms{};

	Parms.NewValue = NewValue;

	AsUObject()->ProcessEvent(Func, &Parms);
}


// Function BPI_PlayerAnimInstance.BPI_PlayerAnimInstance_C.BPI_PlayerAnim_SetDefaultSlotBlending
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Blending                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_PlayerAnimInstance_C::BPI_PlayerAnim_SetDefaultSlotBlending(double Blending)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("BPI_PlayerAnimInstance_C", "BPI_PlayerAnim_SetDefaultSlotBlending");

	Params::BPI_PlayerAnimInstance_C_BPI_PlayerAnim_SetDefaultSlotBlending Parms{};

	Parms.Blending = Blending;

	AsUObject()->ProcessEvent(Func, &Parms);
}


// Function BPI_PlayerAnimInstance.BPI_PlayerAnimInstance_C.BPI_PlayerAnim_SetCutsceneBlending
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Blending                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_PlayerAnimInstance_C::BPI_PlayerAnim_SetCutsceneBlending(double Blending)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("BPI_PlayerAnimInstance_C", "BPI_PlayerAnim_SetCutsceneBlending");

	Params::BPI_PlayerAnimInstance_C_BPI_PlayerAnim_SetCutsceneBlending Parms{};

	Parms.Blending = Blending;

	AsUObject()->ProcessEvent(Func, &Parms);
}


// Function BPI_PlayerAnimInstance.BPI_PlayerAnimInstance_C.BPI_PlayerAnim_SetCanLeaveJogEnd
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NewParam                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_PlayerAnimInstance_C::BPI_PlayerAnim_SetCanLeaveJogEnd(bool NewParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("BPI_PlayerAnimInstance_C", "BPI_PlayerAnim_SetCanLeaveJogEnd");

	Params::BPI_PlayerAnimInstance_C_BPI_PlayerAnim_SetCanLeaveJogEnd Parms{};

	Parms.NewParam = NewParam;

	AsUObject()->ProcessEvent(Func, &Parms);
}


// Function BPI_PlayerAnimInstance.BPI_PlayerAnimInstance_C.BPI_PlayerAnim_SetCanEnterJogEnd
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NewValue                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_PlayerAnimInstance_C::BPI_PlayerAnim_SetCanEnterJogEnd(bool NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("BPI_PlayerAnimInstance_C", "BPI_PlayerAnim_SetCanEnterJogEnd");

	Params::BPI_PlayerAnimInstance_C_BPI_PlayerAnim_SetCanEnterJogEnd Parms{};

	Parms.NewValue = NewValue;

	AsUObject()->ProcessEvent(Func, &Parms);
}


// Function BPI_PlayerAnimInstance.BPI_PlayerAnimInstance_C.BPI_PlayerAnim_GetInCutscene
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                                   InCutscene                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_PlayerAnimInstance_C::BPI_PlayerAnim_GetInCutscene(bool* InCutscene)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("BPI_PlayerAnimInstance_C", "BPI_PlayerAnim_GetInCutscene");

	Params::BPI_PlayerAnimInstance_C_BPI_PlayerAnim_GetInCutscene Parms{};

	AsUObject()->ProcessEvent(Func, &Parms);

	if (InCutscene != nullptr)
		*InCutscene = Parms.InCutscene;
}


// Function BPI_PlayerAnimInstance.BPI_PlayerAnimInstance_C.BPI_DebugIdleVarInt
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   DebugIdleVarInt                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_PlayerAnimInstance_C::BPI_DebugIdleVarInt(int32 DebugIdleVarInt)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("BPI_PlayerAnimInstance_C", "BPI_DebugIdleVarInt");

	Params::BPI_PlayerAnimInstance_C_BPI_DebugIdleVarInt Parms{};

	Parms.DebugIdleVarInt = DebugIdleVarInt;

	AsUObject()->ProcessEvent(Func, &Parms);
}

}

