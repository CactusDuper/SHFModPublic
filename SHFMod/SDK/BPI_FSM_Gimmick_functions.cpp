#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPI_FSM_Gimmick

#include "Basic.hpp"

#include "BPI_FSM_Gimmick_classes.hpp"
#include "BPI_FSM_Gimmick_parameters.hpp"


namespace SDK
{

// Function BPI_FSM_Gimmick.BPI_FSM_Gimmick_C.BPI_Gimmick_CanOpenNotebook
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                                   Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_FSM_Gimmick_C::BPI_Gimmick_CanOpenNotebook(bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("BPI_FSM_Gimmick_C", "BPI_Gimmick_CanOpenNotebook");

	Params::BPI_FSM_Gimmick_C_BPI_Gimmick_CanOpenNotebook Parms{};

	AsUObject()->ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function BPI_FSM_Gimmick.BPI_FSM_Gimmick_C.BPI_Gimmick_GetCameraBlendInVariables
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// double*                                 BlendInTime                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double*                                 BlendInExp                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32*                                  ViewTargetBlend                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_FSM_Gimmick_C::BPI_Gimmick_GetCameraBlendInVariables(double* BlendInTime, double* BlendInExp, int32* ViewTargetBlend)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("BPI_FSM_Gimmick_C", "BPI_Gimmick_GetCameraBlendInVariables");

	Params::BPI_FSM_Gimmick_C_BPI_Gimmick_GetCameraBlendInVariables Parms{};

	AsUObject()->ProcessEvent(Func, &Parms);

	if (BlendInTime != nullptr)
		*BlendInTime = Parms.BlendInTime;

	if (BlendInExp != nullptr)
		*BlendInExp = Parms.BlendInExp;

	if (ViewTargetBlend != nullptr)
		*ViewTargetBlend = Parms.ViewTargetBlend;
}


// Function BPI_FSM_Gimmick.BPI_FSM_Gimmick_C.BPI_Gimmick_GetCameraBlendOutVariables
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// double*                                 BlendOutTime                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double*                                 BlendOutExp                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32*                                  ViewTargetBlend                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_FSM_Gimmick_C::BPI_Gimmick_GetCameraBlendOutVariables(double* BlendOutTime, double* BlendOutExp, int32* ViewTargetBlend)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("BPI_FSM_Gimmick_C", "BPI_Gimmick_GetCameraBlendOutVariables");

	Params::BPI_FSM_Gimmick_C_BPI_Gimmick_GetCameraBlendOutVariables Parms{};

	AsUObject()->ProcessEvent(Func, &Parms);

	if (BlendOutTime != nullptr)
		*BlendOutTime = Parms.BlendOutTime;

	if (BlendOutExp != nullptr)
		*BlendOutExp = Parms.BlendOutExp;

	if (ViewTargetBlend != nullptr)
		*ViewTargetBlend = Parms.ViewTargetBlend;
}


// Function BPI_FSM_Gimmick.BPI_FSM_Gimmick_C.BPI_Gimmick_GetCameraFadeVariables
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                                   BlendInCameraWithFade                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool*                                   BlendOutCameraWithFade                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double*                                 FadeInTime                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_FSM_Gimmick_C::BPI_Gimmick_GetCameraFadeVariables(bool* BlendInCameraWithFade, bool* BlendOutCameraWithFade, double* FadeInTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("BPI_FSM_Gimmick_C", "BPI_Gimmick_GetCameraFadeVariables");

	Params::BPI_FSM_Gimmick_C_BPI_Gimmick_GetCameraFadeVariables Parms{};

	AsUObject()->ProcessEvent(Func, &Parms);

	if (BlendInCameraWithFade != nullptr)
		*BlendInCameraWithFade = Parms.BlendInCameraWithFade;

	if (BlendOutCameraWithFade != nullptr)
		*BlendOutCameraWithFade = Parms.BlendOutCameraWithFade;

	if (FadeInTime != nullptr)
		*FadeInTime = Parms.FadeInTime;
}


// Function BPI_FSM_Gimmick.BPI_FSM_Gimmick_C.BPI_Gimmick_GetEnableLightAfterBlendIn
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                                   AfterBlendIn                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double*                                 Delay                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_FSM_Gimmick_C::BPI_Gimmick_GetEnableLightAfterBlendIn(bool* AfterBlendIn, double* Delay)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("BPI_FSM_Gimmick_C", "BPI_Gimmick_GetEnableLightAfterBlendIn");

	Params::BPI_FSM_Gimmick_C_BPI_Gimmick_GetEnableLightAfterBlendIn Parms{};

	AsUObject()->ProcessEvent(Func, &Parms);

	if (AfterBlendIn != nullptr)
		*AfterBlendIn = Parms.AfterBlendIn;

	if (Delay != nullptr)
		*Delay = Parms.Delay;
}


// Function BPI_FSM_Gimmick.BPI_FSM_Gimmick_C.BPI_Gimmick_GetInteractPlayer
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ANocePlayerCharacter**            InteractPlayer                                         (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void IBPI_FSM_Gimmick_C::BPI_Gimmick_GetInteractPlayer(class ANocePlayerCharacter** InteractPlayer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("BPI_FSM_Gimmick_C", "BPI_Gimmick_GetInteractPlayer");

	Params::BPI_FSM_Gimmick_C_BPI_Gimmick_GetInteractPlayer Parms{};

	AsUObject()->ProcessEvent(Func, &Parms);

	if (InteractPlayer != nullptr)
		*InteractPlayer = Parms.InteractPlayer;
}


// Function BPI_FSM_Gimmick.BPI_FSM_Gimmick_C.BPI_Gimmick_GetNotebookContent
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// ENoceNotebookType*                      NotebookType                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName*                            NotebookName                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName*                            NotebookContent                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_FSM_Gimmick_C::BPI_Gimmick_GetNotebookContent(ENoceNotebookType* NotebookType, class FName* NotebookName, class FName* NotebookContent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("BPI_FSM_Gimmick_C", "BPI_Gimmick_GetNotebookContent");

	Params::BPI_FSM_Gimmick_C_BPI_Gimmick_GetNotebookContent Parms{};

	AsUObject()->ProcessEvent(Func, &Parms);

	if (NotebookType != nullptr)
		*NotebookType = Parms.NotebookType;

	if (NotebookName != nullptr)
		*NotebookName = Parms.NotebookName;

	if (NotebookContent != nullptr)
		*NotebookContent = Parms.NotebookContent;
}


// Function BPI_FSM_Gimmick.BPI_FSM_Gimmick_C.BPI_Gimmick_GetTargetCamera
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ACameraActor**                    CameraActor                                            (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void IBPI_FSM_Gimmick_C::BPI_Gimmick_GetTargetCamera(class ACameraActor** CameraActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("BPI_FSM_Gimmick_C", "BPI_Gimmick_GetTargetCamera");

	Params::BPI_FSM_Gimmick_C_BPI_Gimmick_GetTargetCamera Parms{};

	AsUObject()->ProcessEvent(Func, &Parms);

	if (CameraActor != nullptr)
		*CameraActor = Parms.CameraActor;
}


// Function BPI_FSM_Gimmick.BPI_FSM_Gimmick_C.BPI_Gimmick_OnCameraBlendIn
// (Public, BlueprintCallable, BlueprintEvent)

void IBPI_FSM_Gimmick_C::BPI_Gimmick_OnCameraBlendIn()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("BPI_FSM_Gimmick_C", "BPI_Gimmick_OnCameraBlendIn");

	AsUObject()->ProcessEvent(Func, nullptr);
}


// Function BPI_FSM_Gimmick.BPI_FSM_Gimmick_C.BPI_Gimmick_OnCameraBlendInFinish
// (Public, BlueprintCallable, BlueprintEvent)

void IBPI_FSM_Gimmick_C::BPI_Gimmick_OnCameraBlendInFinish()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("BPI_FSM_Gimmick_C", "BPI_Gimmick_OnCameraBlendInFinish");

	AsUObject()->ProcessEvent(Func, nullptr);
}


// Function BPI_FSM_Gimmick.BPI_FSM_Gimmick_C.BPI_Gimmick_OnCameraBlendOut
// (Public, BlueprintCallable, BlueprintEvent)

void IBPI_FSM_Gimmick_C::BPI_Gimmick_OnCameraBlendOut()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("BPI_FSM_Gimmick_C", "BPI_Gimmick_OnCameraBlendOut");

	AsUObject()->ProcessEvent(Func, nullptr);
}


// Function BPI_FSM_Gimmick.BPI_FSM_Gimmick_C.BPI_Gimmick_OnComplete
// (Public, BlueprintCallable, BlueprintEvent)

void IBPI_FSM_Gimmick_C::BPI_Gimmick_OnComplete()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("BPI_FSM_Gimmick_C", "BPI_Gimmick_OnComplete");

	AsUObject()->ProcessEvent(Func, nullptr);
}


// Function BPI_FSM_Gimmick.BPI_FSM_Gimmick_C.BPI_Gimmick_OnExit
// (Public, BlueprintCallable, BlueprintEvent)

void IBPI_FSM_Gimmick_C::BPI_Gimmick_OnExit()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("BPI_FSM_Gimmick_C", "BPI_Gimmick_OnExit");

	AsUObject()->ProcessEvent(Func, nullptr);
}


// Function BPI_FSM_Gimmick.BPI_FSM_Gimmick_C.BPI_Gimmick_OnExitBlendOutFinish
// (Public, BlueprintCallable, BlueprintEvent)

void IBPI_FSM_Gimmick_C::BPI_Gimmick_OnExitBlendOutFinish()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("BPI_FSM_Gimmick_C", "BPI_Gimmick_OnExitBlendOutFinish");

	AsUObject()->ProcessEvent(Func, nullptr);
}


// Function BPI_FSM_Gimmick.BPI_FSM_Gimmick_C.BPI_Gimmick_OnFadeOutFinishOnBlendOut
// (Public, BlueprintCallable, BlueprintEvent)

void IBPI_FSM_Gimmick_C::BPI_Gimmick_OnFadeOutFinishOnBlendOut()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("BPI_FSM_Gimmick_C", "BPI_Gimmick_OnFadeOutFinishOnBlendOut");

	AsUObject()->ProcessEvent(Func, nullptr);
}


// Function BPI_FSM_Gimmick.BPI_FSM_Gimmick_C.BPI_Gimmick_OnInterrupted
// (Public, BlueprintCallable, BlueprintEvent)

void IBPI_FSM_Gimmick_C::BPI_Gimmick_OnInterrupted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("BPI_FSM_Gimmick_C", "BPI_Gimmick_OnInterrupted");

	AsUObject()->ProcessEvent(Func, nullptr);
}


// Function BPI_FSM_Gimmick.BPI_FSM_Gimmick_C.BPI_Gimmick_OnNotebookClosed
// (Public, BlueprintCallable, BlueprintEvent)

void IBPI_FSM_Gimmick_C::BPI_Gimmick_OnNotebookClosed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("BPI_FSM_Gimmick_C", "BPI_Gimmick_OnNotebookClosed");

	AsUObject()->ProcessEvent(Func, nullptr);
}


// Function BPI_FSM_Gimmick.BPI_FSM_Gimmick_C.BPI_Gimmick_OnOpenNotebook
// (Public, BlueprintCallable, BlueprintEvent)

void IBPI_FSM_Gimmick_C::BPI_Gimmick_OnOpenNotebook()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("BPI_FSM_Gimmick_C", "BPI_Gimmick_OnOpenNotebook");

	AsUObject()->ProcessEvent(Func, nullptr);
}


// Function BPI_FSM_Gimmick.BPI_FSM_Gimmick_C.BPI_Gimmick_OnPlayerUIInput
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// ENoceUIInputAction                      InAction                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_FSM_Gimmick_C::BPI_Gimmick_OnPlayerUIInput(ENoceUIInputAction InAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("BPI_FSM_Gimmick_C", "BPI_Gimmick_OnPlayerUIInput");

	Params::BPI_FSM_Gimmick_C_BPI_Gimmick_OnPlayerUIInput Parms{};

	Parms.InAction = InAction;

	AsUObject()->ProcessEvent(Func, &Parms);
}


// Function BPI_FSM_Gimmick.BPI_FSM_Gimmick_C.BPI_Gimmick_OnPrepare
// (Public, BlueprintCallable, BlueprintEvent)

void IBPI_FSM_Gimmick_C::BPI_Gimmick_OnPrepare()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("BPI_FSM_Gimmick_C", "BPI_Gimmick_OnPrepare");

	AsUObject()->ProcessEvent(Func, nullptr);
}


// Function BPI_FSM_Gimmick.BPI_FSM_Gimmick_C.BPI_GImmick_OnPrepareBlendOutCamera
// (Public, BlueprintCallable, BlueprintEvent)

void IBPI_FSM_Gimmick_C::BPI_GImmick_OnPrepareBlendOutCamera()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("BPI_FSM_Gimmick_C", "BPI_GImmick_OnPrepareBlendOutCamera");

	AsUObject()->ProcessEvent(Func, nullptr);
}


// Function BPI_FSM_Gimmick.BPI_FSM_Gimmick_C.BPI_Gimmick_SetEnvironmentAdjustWeight
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Weight                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_FSM_Gimmick_C::BPI_Gimmick_SetEnvironmentAdjustWeight(double Weight)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("BPI_FSM_Gimmick_C", "BPI_Gimmick_SetEnvironmentAdjustWeight");

	Params::BPI_FSM_Gimmick_C_BPI_Gimmick_SetEnvironmentAdjustWeight Parms{};

	Parms.Weight = Weight;

	AsUObject()->ProcessEvent(Func, &Parms);
}

}

