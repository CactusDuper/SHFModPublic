#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_SightViewCondition

#include "Basic.hpp"

#include "BP_SightViewCondition_classes.hpp"
#include "BP_SightViewCondition_parameters.hpp"


namespace SDK
{

// Function BP_SightViewCondition.BP_SightViewCondition_C.GetTargetPoint
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FVector*                         Location                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_SightViewCondition_C::GetTargetPoint(struct FVector* Location)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SightViewCondition_C", "GetTargetPoint");

	Params::BP_SightViewCondition_C_GetTargetPoint Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Location != nullptr)
		*Location = std::move(Parms.Location);
}


// Function BP_SightViewCondition.BP_SightViewCondition_C.DrawLineInScreenSpace
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FVector2D&                 Start                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector2D&                 End                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_SightViewCondition_C::DrawLineInScreenSpace(const struct FVector2D& Start, const struct FVector2D& End)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SightViewCondition_C", "DrawLineInScreenSpace");

	Params::BP_SightViewCondition_C_DrawLineInScreenSpace Parms{};

	Parms.Start = std::move(Start);
	Parms.End = std::move(End);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SightViewCondition.BP_SightViewCondition_C.DrawDebugInfo
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_SightViewCondition_C::DrawDebugInfo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SightViewCondition_C", "DrawDebugInfo");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SightViewCondition.BP_SightViewCondition_C.CheckIsTargetInSightViewRange
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FVector&                   InTargetLocation                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool*                                   IsInSight                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_SightViewCondition_C::CheckIsTargetInSightViewRange(const struct FVector& InTargetLocation, bool* IsInSight)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SightViewCondition_C", "CheckIsTargetInSightViewRange");

	Params::BP_SightViewCondition_C_CheckIsTargetInSightViewRange Parms{};

	Parms.InTargetLocation = std::move(InTargetLocation);

	UObject::ProcessEvent(Func, &Parms);

	if (IsInSight != nullptr)
		*IsInSight = Parms.IsInSight;
}


// Function BP_SightViewCondition.BP_SightViewCondition_C.BP_DoCheckCondition
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool UBP_SightViewCondition_C::BP_DoCheckCondition()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SightViewCondition_C", "BP_DoCheckCondition");

	Params::BP_SightViewCondition_C_BP_DoCheckCondition Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

