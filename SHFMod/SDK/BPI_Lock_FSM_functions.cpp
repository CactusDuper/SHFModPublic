#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPI_Lock_FSM

#include "Basic.hpp"

#include "BPI_Lock_FSM_classes.hpp"
#include "BPI_Lock_FSM_parameters.hpp"


namespace SDK
{

// Function BPI_Lock_FSM.BPI_Lock_FSM_C.BPI_Lock_FSM_SetResumeWhenEndGimmick
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ResumeWhenEndGimmick                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_Lock_FSM_C::BPI_Lock_FSM_SetResumeWhenEndGimmick(bool ResumeWhenEndGimmick)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("BPI_Lock_FSM_C", "BPI_Lock_FSM_SetResumeWhenEndGimmick");

	Params::BPI_Lock_FSM_C_BPI_Lock_FSM_SetResumeWhenEndGimmick Parms{};

	Parms.ResumeWhenEndGimmick = ResumeWhenEndGimmick;

	AsUObject()->ProcessEvent(Func, &Parms);
}


// Function BPI_Lock_FSM.BPI_Lock_FSM_C.BPI_Lock_FSM_SetIsPerformFinished
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsPerformFinished                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_Lock_FSM_C::BPI_Lock_FSM_SetIsPerformFinished(bool IsPerformFinished)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("BPI_Lock_FSM_C", "BPI_Lock_FSM_SetIsPerformFinished");

	Params::BPI_Lock_FSM_C_BPI_Lock_FSM_SetIsPerformFinished Parms{};

	Parms.IsPerformFinished = IsPerformFinished;

	AsUObject()->ProcessEvent(Func, &Parms);
}


// Function BPI_Lock_FSM.BPI_Lock_FSM_C.BPI_Lock_FSM_SetIsCheckWrong
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsCheckWrong                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_Lock_FSM_C::BPI_Lock_FSM_SetIsCheckWrong(bool IsCheckWrong)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("BPI_Lock_FSM_C", "BPI_Lock_FSM_SetIsCheckWrong");

	Params::BPI_Lock_FSM_C_BPI_Lock_FSM_SetIsCheckWrong Parms{};

	Parms.IsCheckWrong = IsCheckWrong;

	AsUObject()->ProcessEvent(Func, &Parms);
}


// Function BPI_Lock_FSM.BPI_Lock_FSM_C.BPI_Lock_FSM_SetIsCheckCorrect
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsCheckCorrect                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_Lock_FSM_C::BPI_Lock_FSM_SetIsCheckCorrect(bool IsCheckCorrect)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("BPI_Lock_FSM_C", "BPI_Lock_FSM_SetIsCheckCorrect");

	Params::BPI_Lock_FSM_C_BPI_Lock_FSM_SetIsCheckCorrect Parms{};

	Parms.IsCheckCorrect = IsCheckCorrect;

	AsUObject()->ProcessEvent(Func, &Parms);
}


// Function BPI_Lock_FSM.BPI_Lock_FSM_C.BPI_Lock_FSM_SetEndGimmickWhenWrong
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsEndGimmickWhenWrong                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_Lock_FSM_C::BPI_Lock_FSM_SetEndGimmickWhenWrong(bool IsEndGimmickWhenWrong)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("BPI_Lock_FSM_C", "BPI_Lock_FSM_SetEndGimmickWhenWrong");

	Params::BPI_Lock_FSM_C_BPI_Lock_FSM_SetEndGimmickWhenWrong Parms{};

	Parms.IsEndGimmickWhenWrong = IsEndGimmickWhenWrong;

	AsUObject()->ProcessEvent(Func, &Parms);
}


// Function BPI_Lock_FSM.BPI_Lock_FSM_C.BPI_Lock_FSM_SetCanPerformWrong
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    CanPerformWrong                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_Lock_FSM_C::BPI_Lock_FSM_SetCanPerformWrong(bool CanPerformWrong)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("BPI_Lock_FSM_C", "BPI_Lock_FSM_SetCanPerformWrong");

	Params::BPI_Lock_FSM_C_BPI_Lock_FSM_SetCanPerformWrong Parms{};

	Parms.CanPerformWrong = CanPerformWrong;

	AsUObject()->ProcessEvent(Func, &Parms);
}

}

