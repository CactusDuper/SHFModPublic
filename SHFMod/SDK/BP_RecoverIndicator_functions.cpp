#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_RecoverIndicator

#include "Basic.hpp"

#include "BP_RecoverIndicator_classes.hpp"
#include "BP_RecoverIndicator_parameters.hpp"


namespace SDK
{

// Function BP_RecoverIndicator.BP_RecoverIndicator_C.BndEvt__BP_RecoverIndicator_InteractBox_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature
// (HasOutParams, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// int32                                   OtherBodyIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bFromSweep                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FHitResult&                SweepResult                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void ABP_RecoverIndicator_C::BndEvt__BP_RecoverIndicator_InteractBox_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RecoverIndicator_C", "BndEvt__BP_RecoverIndicator_InteractBox_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature");

	Params::BP_RecoverIndicator_C_BndEvt__BP_RecoverIndicator_InteractBox_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;
	Parms.bFromSweep = bFromSweep;
	Parms.SweepResult = std::move(SweepResult);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_RecoverIndicator.BP_RecoverIndicator_C.BndEvt__BP_RecoverIndicator_InteractBox_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// int32                                   OtherBodyIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_RecoverIndicator_C::BndEvt__BP_RecoverIndicator_InteractBox_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RecoverIndicator_C", "BndEvt__BP_RecoverIndicator_InteractBox_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature");

	Params::BP_RecoverIndicator_C_BndEvt__BP_RecoverIndicator_InteractBox_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_RecoverIndicator.BP_RecoverIndicator_C.ExecuteForbitFeedback
// (Event, Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           InteractPawn_0                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool ABP_RecoverIndicator_C::ExecuteForbitFeedback(class AActor* InteractPawn_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RecoverIndicator_C", "ExecuteForbitFeedback");

	Params::BP_RecoverIndicator_C_ExecuteForbitFeedback Parms{};

	Parms.InteractPawn_0 = InteractPawn_0;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_RecoverIndicator.BP_RecoverIndicator_C.ExecuteUbergraph_BP_RecoverIndicator
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_RecoverIndicator_C::ExecuteUbergraph_BP_RecoverIndicator(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RecoverIndicator_C", "ExecuteUbergraph_BP_RecoverIndicator");

	Params::BP_RecoverIndicator_C_ExecuteUbergraph_BP_RecoverIndicator Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_RecoverIndicator.BP_RecoverIndicator_C.GetCurrentLocation
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

class FName ABP_RecoverIndicator_C::GetCurrentLocation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RecoverIndicator_C", "GetCurrentLocation");

	Params::BP_RecoverIndicator_C_GetCurrentLocation Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_RecoverIndicator.BP_RecoverIndicator_C.GetHintLocationBP
// (Event, Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

struct FVector ABP_RecoverIndicator_C::GetHintLocationBP()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RecoverIndicator_C", "GetHintLocationBP");

	Params::BP_RecoverIndicator_C_GetHintLocationBP Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_RecoverIndicator.BP_RecoverIndicator_C.GetPerformCamera
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Index_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ACameraActor**                    Output                                                 (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_RecoverIndicator_C::GetPerformCamera(int32 Index_0, class ACameraActor** Output)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RecoverIndicator_C", "GetPerformCamera");

	Params::BP_RecoverIndicator_C_GetPerformCamera Parms{};

	Parms.Index_0 = Index_0;

	UObject::ProcessEvent(Func, &Parms);

	if (Output != nullptr)
		*Output = Parms.Output;
}


// Function BP_RecoverIndicator.BP_RecoverIndicator_C.GetPlayerRestartTransform
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FVector*                         Location                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FRotator*                        Rotation                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_RecoverIndicator_C::GetPlayerRestartTransform(struct FVector* Location, struct FRotator* Rotation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RecoverIndicator_C", "GetPlayerRestartTransform");

	Params::BP_RecoverIndicator_C_GetPlayerRestartTransform Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Location != nullptr)
		*Location = std::move(Parms.Location);

	if (Rotation != nullptr)
		*Rotation = std::move(Parms.Rotation);
}


// Function BP_RecoverIndicator.BP_RecoverIndicator_C.GetPromptTextBP
// (Event, Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm)

class FText ABP_RecoverIndicator_C::GetPromptTextBP()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RecoverIndicator_C", "GetPromptTextBP");

	Params::BP_RecoverIndicator_C_GetPromptTextBP Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_RecoverIndicator.BP_RecoverIndicator_C.IsInteractionForbitBP
// (Event, Protected, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool ABP_RecoverIndicator_C::IsInteractionForbitBP()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RecoverIndicator_C", "IsInteractionForbitBP");

	Params::BP_RecoverIndicator_C_IsInteractionForbitBP Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_RecoverIndicator.BP_RecoverIndicator_C.MaterialWPOToggleOFF
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_RecoverIndicator_C::MaterialWPOToggleOFF()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RecoverIndicator_C", "MaterialWPOToggleOFF");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_RecoverIndicator.BP_RecoverIndicator_C.MaterialWPOToggleOffDelay
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_RecoverIndicator_C::MaterialWPOToggleOffDelay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RecoverIndicator_C", "MaterialWPOToggleOffDelay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_RecoverIndicator.BP_RecoverIndicator_C.MaterialWPOToggleON
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_RecoverIndicator_C::MaterialWPOToggleON()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RecoverIndicator_C", "MaterialWPOToggleON");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_RecoverIndicator.BP_RecoverIndicator_C.OnInteract
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool ABP_RecoverIndicator_C::OnInteract()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RecoverIndicator_C", "OnInteract");

	Params::BP_RecoverIndicator_C_OnInteract Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_RecoverIndicator.BP_RecoverIndicator_C.OnSaveGamePanelClose
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_RecoverIndicator_C::OnSaveGamePanelClose()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RecoverIndicator_C", "OnSaveGamePanelClose");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_RecoverIndicator.BP_RecoverIndicator_C.OnSaveGamePanelClosed
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_RecoverIndicator_C::OnSaveGamePanelClosed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RecoverIndicator_C", "OnSaveGamePanelClosed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_RecoverIndicator.BP_RecoverIndicator_C.PerformFeedback
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Index_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_RecoverIndicator_C::PerformFeedback(int32 Index_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RecoverIndicator_C", "PerformFeedback");

	Params::BP_RecoverIndicator_C_PerformFeedback Parms{};

	Parms.Index_0 = Index_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_RecoverIndicator.BP_RecoverIndicator_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_RecoverIndicator_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RecoverIndicator_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}

}

