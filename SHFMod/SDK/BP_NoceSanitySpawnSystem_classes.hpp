#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_NoceSanitySpawnSystem

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "GameNoce_classes.hpp"
#include "AIModule_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_NoceSanitySpawnSystem.BP_NoceSanitySpawnSystem_C
// 0x00D0 (0x01F8 - 0x0128)
class UBP_NoceSanitySpawnSystem_C final : public UNoceSanitySpawnSystem
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0128(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	double                                        CurrentTimer;                                      // 0x0130(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TargetSpawnSettingIdx;                             // 0x0138(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TargetSpawnNumMax;                                 // 0x013C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TargetSpawnNum;                                    // 0x0140(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_144[0x4];                                      // 0x0144(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UEnvQuery*                              SpawnEQS;                                          // 0x0148(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	double                                        TargetSpawnRangeMin;                               // 0x0150(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        TargetSpawnRangeMax;                               // 0x0158(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FSoftClassPath>                 TargetSpawnEnemies;                                // 0x0160(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class ABP_AISpawnerBase_C*>            TargetSpawnSpawners;                               // 0x0170(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	TSubclassOf<class APawn>                      TargetSpawnEnemy;                                  // 0x0180(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	int32                                         CurrentProbCheckTimes;                             // 0x0188(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_18C[0x4];                                      // 0x018C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AEQSTestingPawn*                        EQSQueryPawn;                                      // 0x0190(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	double                                        TargetBlockDist;                                   // 0x0198(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ForceFindPlayer;                                   // 0x01A0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          TickTimerWhenReachSpawnMax;                        // 0x01A1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReappearEnabled;                                   // 0x01A2(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A3[0x5];                                      // 0x01A3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSoftClassPath                         ReappearEnemy;                                     // 0x01A8(0x0020)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	double                                        ReappearTimeMax;                                   // 0x01C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        ReappearTimeMin;                                   // 0x01D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        ReappearTime;                                      // 0x01D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        ReappearTimer;                                     // 0x01E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        ReappearHPRatio;                                   // 0x01E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReappearOnOff;                                     // 0x01F0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void AddReappearEnemy(const struct FSoftClassPath& Enemy, double TimeMax, double TimeMin, double HPRatio);
	void AdjustEnemyLocation(class APawn* SpawnedEnemy, const struct FVector& SpawnLocation);
	void CheckProbability(bool UseProbability, const struct FSanitySpawnProbabilitySetting& ProbabilitySetting, bool* Success);
	void EnterSpawnVolume_BP();
	void ExecuteUbergraph_BP_NoceSanitySpawnSystem(int32 EntryPoint);
	void ForceEnemyFindPlayer(class APawn* Enm);
	void ForceSpawn(const struct FSanitySpawnVolumeSetting& Setting);
	void GetSettingFromCurrVol(bool* Success);
	bool Initialize_BP();
	void IsClearInBlockDist(const struct FVector& Location, bool* Result);
	void ReachSpawnMax(bool* Result);
	void Set_Target_Spawners(TArray<class ANoceAISpawner*>& Array);
	void SetEnableReappearSystem(bool Enable, bool ClearCurrEnemy, bool ClearTimer);
	void SetReappearEnemyHP(class APawn* Enm);
	void SetupSpawnParam(bool* Success);
	void Spawn_Enemy(class UEnvQueryInstanceBlueprintWrapper* QueryInstance, EEnvQueryStatus QueryStatus);
	void SpawnEQSQueryPawn();
	void SpawnReappearEnemy(class UEnvQueryInstanceBlueprintWrapper* QueryInstance, EEnvQueryStatus QueryStatus);
	bool Tick_BP(float DeltaTime);
	void UpdateReappearSystem(double DeltaTime);
	void UpdatTimer(float DeltaTime);

public:
	static class UClass* StaticClass()
	{
		BP_STATIC_CLASS_IMPL("BP_NoceSanitySpawnSystem_C")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"BP_NoceSanitySpawnSystem_C")
	}
	static class UBP_NoceSanitySpawnSystem_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_NoceSanitySpawnSystem_C>();
	}
};
DUMPER7_ASSERTS_UBP_NoceSanitySpawnSystem_C;

}

