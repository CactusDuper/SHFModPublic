#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UtilityGlobal

#include "Basic.hpp"

#include "UtilityGlobal_classes.hpp"
#include "UtilityGlobal_parameters.hpp"


namespace SDK
{

// Function UtilityGlobal.UtilityGlobalBPLibrary.AddPPVMaterial
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class APostProcessVolume*               InPPV                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSoftObjectPtr<class UMaterialInterface>InMaterial                                             (Parm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UObject* UUtilityGlobalBPLibrary::AddPPVMaterial(class APostProcessVolume* InPPV, TSoftObjectPtr<class UMaterialInterface> InMaterial)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UtilityGlobalBPLibrary", "AddPPVMaterial");

	Params::UtilityGlobalBPLibrary_AddPPVMaterial Parms{};

	Parms.InPPV = InPPV;
	Parms.InMaterial = InMaterial;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UtilityGlobal.UtilityGlobalBPLibrary.CopyPPVSettings
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// TSoftObjectPtr<class APostProcessVolume>inScenePPV                                             (Parm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class APostProcessVolume*               SeqPPV                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUtilityGlobalBPLibrary::CopyPPVSettings(TSoftObjectPtr<class APostProcessVolume> inScenePPV, class APostProcessVolume* SeqPPV)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UtilityGlobalBPLibrary", "CopyPPVSettings");

	Params::UtilityGlobalBPLibrary_CopyPPVSettings Parms{};

	Parms.inScenePPV = inScenePPV;
	Parms.SeqPPV = SeqPPV;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UtilityGlobal.UtilityGlobalBPLibrary.CreateCustomSequencerPlayer
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class ALevelInstance*             LevelInstanceActor                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ULevelSequence*                   InLevelSequence                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FMovieSceneSequencePlaybackSettings&Settings                                               (Parm, NoDestructor, NativeAccessSpecifierPublic)
// class ALevelSequenceActor**             OutActor                                               (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ULevelSequencePlayer*             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ULevelSequencePlayer* UUtilityGlobalBPLibrary::CreateCustomSequencerPlayer(const class ALevelInstance* LevelInstanceActor, class ULevelSequence* InLevelSequence, const struct FMovieSceneSequencePlaybackSettings& Settings, class ALevelSequenceActor** OutActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UtilityGlobalBPLibrary", "CreateCustomSequencerPlayer");

	Params::UtilityGlobalBPLibrary_CreateCustomSequencerPlayer Parms{};

	Parms.LevelInstanceActor = LevelInstanceActor;
	Parms.InLevelSequence = InLevelSequence;
	Parms.Settings = std::move(Settings);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutActor != nullptr)
		*OutActor = Parms.OutActor;

	return Parms.ReturnValue;
}


// Function UtilityGlobal.UtilityGlobalBPLibrary.CustomLocateBoundObjects
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class ULevelSequence*                   Sequence                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FMovieSceneBindingProxy&   InBinding                                              (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class ALevelInstance*             LevelInstanceActor                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class AActor*>                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class AActor*> UUtilityGlobalBPLibrary::CustomLocateBoundObjects(class ULevelSequence* Sequence, const struct FMovieSceneBindingProxy& InBinding, const class ALevelInstance* LevelInstanceActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UtilityGlobalBPLibrary", "CustomLocateBoundObjects");

	Params::UtilityGlobalBPLibrary_CustomLocateBoundObjects Parms{};

	Parms.Sequence = Sequence;
	Parms.InBinding = std::move(InBinding);
	Parms.LevelInstanceActor = LevelInstanceActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UtilityGlobal.UtilityGlobalBPLibrary.DisableAllEngineStatsForRuntime
// (Final, Native, Static, Public, BlueprintCallable)

void UUtilityGlobalBPLibrary::DisableAllEngineStatsForRuntime()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UtilityGlobalBPLibrary", "DisableAllEngineStatsForRuntime");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function UtilityGlobal.UtilityGlobalBPLibrary.FindSeqObjByName
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class ULevelSequence*                   Sequence                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class ALevelInstance*             LevelInstanceActor                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    ObjName                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UObject* UUtilityGlobalBPLibrary::FindSeqObjByName(class ULevelSequence* Sequence, const class ALevelInstance* LevelInstanceActor, const class FString& ObjName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UtilityGlobalBPLibrary", "FindSeqObjByName");

	Params::UtilityGlobalBPLibrary_FindSeqObjByName Parms{};

	Parms.Sequence = Sequence;
	Parms.LevelInstanceActor = LevelInstanceActor;
	Parms.ObjName = std::move(ObjName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UtilityGlobal.UtilityGlobalBPLibrary.GeneratePhysMaskData
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UPhysicalMaterialMask*            InMask                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<int32>*                          OutMaskData                                            (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// int32*                                  OutSizeX                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32*                                  OutSizeY                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUtilityGlobalBPLibrary::GeneratePhysMaskData(class UPhysicalMaterialMask* InMask, TArray<int32>* OutMaskData, int32* OutSizeX, int32* OutSizeY)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UtilityGlobalBPLibrary", "GeneratePhysMaskData");

	Params::UtilityGlobalBPLibrary_GeneratePhysMaskData Parms{};

	Parms.InMask = InMask;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutMaskData != nullptr)
		*OutMaskData = std::move(Parms.OutMaskData);

	if (OutSizeX != nullptr)
		*OutSizeX = Parms.OutSizeX;

	if (OutSizeY != nullptr)
		*OutSizeY = Parms.OutSizeY;
}


// Function UtilityGlobal.UtilityGlobalBPLibrary.GetBoneWorldLocation
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class USkeletalMeshComponent*           InComp                                                 (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   inBoneIndex                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector*                         OutLocation                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRotator*                        OutRotator                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUtilityGlobalBPLibrary::GetBoneWorldLocation(class USkeletalMeshComponent* InComp, int32 inBoneIndex, struct FVector* OutLocation, struct FRotator* OutRotator)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UtilityGlobalBPLibrary", "GetBoneWorldLocation");

	Params::UtilityGlobalBPLibrary_GetBoneWorldLocation Parms{};

	Parms.InComp = InComp;
	Parms.inBoneIndex = inBoneIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutLocation != nullptr)
		*OutLocation = std::move(Parms.OutLocation);

	if (OutRotator != nullptr)
		*OutRotator = std::move(Parms.OutRotator);

	return Parms.ReturnValue;
}


// Function UtilityGlobal.UtilityGlobalBPLibrary.GetPhysMatIndex
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UPhysicalMaterialMask*            InMask                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<int32>&                    inMaskData                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// const int32                             SizeX                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const int32                             SizeY                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 InUV                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UUtilityGlobalBPLibrary::GetPhysMatIndex(class UPhysicalMaterialMask* InMask, const TArray<int32>& inMaskData, const int32 SizeX, const int32 SizeY, const struct FVector2D& InUV)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UtilityGlobalBPLibrary", "GetPhysMatIndex");

	Params::UtilityGlobalBPLibrary_GetPhysMatIndex Parms{};

	Parms.InMask = InMask;
	Parms.inMaskData = std::move(inMaskData);
	Parms.SizeX = SizeX;
	Parms.SizeY = SizeY;
	Parms.InUV = std::move(InUV);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UtilityGlobal.UtilityGlobalBPLibrary.GetRefPoseTransform
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class USkeletalMesh*                    InSkeletalMesh                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   inBoneIndex                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FTransform                       ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FTransform UUtilityGlobalBPLibrary::GetRefPoseTransform(class USkeletalMesh* InSkeletalMesh, int32 inBoneIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UtilityGlobalBPLibrary", "GetRefPoseTransform");

	Params::UtilityGlobalBPLibrary_GetRefPoseTransform Parms{};

	Parms.InSkeletalMesh = InSkeletalMesh;
	Parms.inBoneIndex = inBoneIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UtilityGlobal.UtilityGlobalBPLibrary.IsEditorMode
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUtilityGlobalBPLibrary::IsEditorMode(class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UtilityGlobalBPLibrary", "IsEditorMode");

	Params::UtilityGlobalBPLibrary_IsEditorMode Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function UtilityGlobal.UtilityGlobalBPLibrary.RemovePPVMaterial
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class APostProcessVolume*               InPPV                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          InMaterial                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUtilityGlobalBPLibrary::RemovePPVMaterial(class APostProcessVolume* InPPV, class UObject* InMaterial)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UtilityGlobalBPLibrary", "RemovePPVMaterial");

	Params::UtilityGlobalBPLibrary_RemovePPVMaterial Parms{};

	Parms.InPPV = InPPV;
	Parms.InMaterial = InMaterial;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UtilityGlobal.UtilityGlobalBPLibrary.SetLightMapType
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                           InActor                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ELightmapType                           InType                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUtilityGlobalBPLibrary::SetLightMapType(class AActor* InActor, ELightmapType InType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UtilityGlobalBPLibrary", "SetLightMapType");

	Params::UtilityGlobalBPLibrary_SetLightMapType Parms{};

	Parms.InActor = InActor;
	Parms.InType = InType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function UtilityGlobal.UtilityGlobalBPLibrary.UtilityGlobalSampleFunction
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// float                                   Param                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UUtilityGlobalBPLibrary::UtilityGlobalSampleFunction(float Param)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UtilityGlobalBPLibrary", "UtilityGlobalSampleFunction");

	Params::UtilityGlobalBPLibrary_UtilityGlobalSampleFunction Parms{};

	Parms.Param = Param;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}

}

