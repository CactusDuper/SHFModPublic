#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_GimmickBase_FSM

#include "Basic.hpp"

#include "BP_GimmickBase_FSM_classes.hpp"
#include "BP_GimmickBase_FSM_parameters.hpp"


namespace SDK
{

// Function BP_GimmickBase_FSM.BP_GimmickBase_FSM_C.BlendCameraToPlayer
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   BlendTime                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_GimmickBase_FSM_C::BlendCameraToPlayer(float BlendTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GimmickBase_FSM_C", "BlendCameraToPlayer");

	Params::BP_GimmickBase_FSM_C_BlendCameraToPlayer Parms{};

	Parms.BlendTime = BlendTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GimmickBase_FSM.BP_GimmickBase_FSM_C.BlendInCamera
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_GimmickBase_FSM_C::BlendInCamera()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GimmickBase_FSM_C", "BlendInCamera");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GimmickBase_FSM.BP_GimmickBase_FSM_C.BlendOutCamera
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_GimmickBase_FSM_C::BlendOutCamera()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GimmickBase_FSM_C", "BlendOutCamera");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GimmickBase_FSM.BP_GimmickBase_FSM_C.BPI_GimmickBase_IsManuallyDisableEventMode
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsManually                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_GimmickBase_FSM_C::BPI_GimmickBase_IsManuallyDisableEventMode(bool IsManually)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GimmickBase_FSM_C", "BPI_GimmickBase_IsManuallyDisableEventMode");

	Params::BP_GimmickBase_FSM_C_BPI_GimmickBase_IsManuallyDisableEventMode Parms{};

	Parms.IsManually = IsManually;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GimmickBase_FSM.BP_GimmickBase_FSM_C.BPI_GimmickBase_IsManuallySetInputMode
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsManually                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_GimmickBase_FSM_C::BPI_GimmickBase_IsManuallySetInputMode(bool IsManually)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GimmickBase_FSM_C", "BPI_GimmickBase_IsManuallySetInputMode");

	Params::BP_GimmickBase_FSM_C_BPI_GimmickBase_IsManuallySetInputMode Parms{};

	Parms.IsManually = IsManually;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GimmickBase_FSM.BP_GimmickBase_FSM_C.CancelNavigateRepeatTimer
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_GimmickBase_FSM_C::CancelNavigateRepeatTimer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GimmickBase_FSM_C", "CancelNavigateRepeatTimer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GimmickBase_FSM.BP_GimmickBase_FSM_C.ClearAnalogCache
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_GimmickBase_FSM_C::ClearAnalogCache()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GimmickBase_FSM_C", "ClearAnalogCache");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GimmickBase_FSM.BP_GimmickBase_FSM_C.DelayEnableCameraLight
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_GimmickBase_FSM_C::DelayEnableCameraLight()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GimmickBase_FSM_C", "DelayEnableCameraLight");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GimmickBase_FSM.BP_GimmickBase_FSM_C.EnableCameraLights
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    InEnable                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_GimmickBase_FSM_C::EnableCameraLights(bool InEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GimmickBase_FSM_C", "EnableCameraLights");

	Params::BP_GimmickBase_FSM_C_EnableCameraLights Parms{};

	Parms.InEnable = InEnable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GimmickBase_FSM.BP_GimmickBase_FSM_C.EnablePlayerInput
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsEnableAction                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsEnableAxis                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsEnableUIAction                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_GimmickBase_FSM_C::EnablePlayerInput(bool IsEnableAction, bool IsEnableAxis, bool IsEnableUIAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GimmickBase_FSM_C", "EnablePlayerInput");

	Params::BP_GimmickBase_FSM_C_EnablePlayerInput Parms{};

	Parms.IsEnableAction = IsEnableAction;
	Parms.IsEnableAxis = IsEnableAxis;
	Parms.IsEnableUIAction = IsEnableUIAction;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GimmickBase_FSM.BP_GimmickBase_FSM_C.EndInputWidget
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_GimmickBase_FSM_C::EndInputWidget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GimmickBase_FSM_C", "EndInputWidget");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GimmickBase_FSM.BP_GimmickBase_FSM_C.ExecuteUbergraph_BP_GimmickBase_FSM
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_GimmickBase_FSM_C::ExecuteUbergraph_BP_GimmickBase_FSM(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GimmickBase_FSM_C", "ExecuteUbergraph_BP_GimmickBase_FSM");

	Params::BP_GimmickBase_FSM_C_ExecuteUbergraph_BP_GimmickBase_FSM Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GimmickBase_FSM.BP_GimmickBase_FSM_C.FinalizeGimmick
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_GimmickBase_FSM_C::FinalizeGimmick()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GimmickBase_FSM_C", "FinalizeGimmick");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GimmickBase_FSM.BP_GimmickBase_FSM_C.ForceEndOnPlayerDie
// (BlueprintCallable, BlueprintEvent)

void UBP_GimmickBase_FSM_C::ForceEndOnPlayerDie()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GimmickBase_FSM_C", "ForceEndOnPlayerDie");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GimmickBase_FSM.BP_GimmickBase_FSM_C.GetAnalogValueForward
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// double*                                 OutAxisForward                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_GimmickBase_FSM_C::GetAnalogValueForward(double* OutAxisForward)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GimmickBase_FSM_C", "GetAnalogValueForward");

	Params::BP_GimmickBase_FSM_C_GetAnalogValueForward Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (OutAxisForward != nullptr)
		*OutAxisForward = Parms.OutAxisForward;
}


// Function BP_GimmickBase_FSM.BP_GimmickBase_FSM_C.GetAnalogValueRight
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// double*                                 CachedAxisRight                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_GimmickBase_FSM_C::GetAnalogValueRight(double* CachedAxisRight)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GimmickBase_FSM_C", "GetAnalogValueRight");

	Params::BP_GimmickBase_FSM_C_GetAnalogValueRight Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (CachedAxisRight != nullptr)
		*CachedAxisRight = Parms.CachedAxisRight;
}


// Function BP_GimmickBase_FSM.BP_GimmickBase_FSM_C.GetAnalogValueXY
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// double*                                 OutAnalogX                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double*                                 OutAnalogY                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_GimmickBase_FSM_C::GetAnalogValueXY(double* OutAnalogX, double* OutAnalogY)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GimmickBase_FSM_C", "GetAnalogValueXY");

	Params::BP_GimmickBase_FSM_C_GetAnalogValueXY Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (OutAnalogX != nullptr)
		*OutAnalogX = Parms.OutAnalogX;

	if (OutAnalogY != nullptr)
		*OutAnalogY = Parms.OutAnalogY;
}


// Function BP_GimmickBase_FSM.BP_GimmickBase_FSM_C.GetUseInputWidget
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool*                                   UseInput                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_GimmickBase_FSM_C::GetUseInputWidget(bool* UseInput)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GimmickBase_FSM_C", "GetUseInputWidget");

	Params::BP_GimmickBase_FSM_C_GetUseInputWidget Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (UseInput != nullptr)
		*UseInput = Parms.UseInput;
}


// Function BP_GimmickBase_FSM.BP_GimmickBase_FSM_C.HandleNotebookClose
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_GimmickBase_FSM_C::HandleNotebookClose()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GimmickBase_FSM_C", "HandleNotebookClose");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GimmickBase_FSM.BP_GimmickBase_FSM_C.HideInputGuide
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_GimmickBase_FSM_C::HideInputGuide()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GimmickBase_FSM_C", "HideInputGuide");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GimmickBase_FSM.BP_GimmickBase_FSM_C.HidePlayerPawn
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    InHide                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    InAdjustInput                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_GimmickBase_FSM_C::HidePlayerPawn(bool InHide, bool InAdjustInput)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GimmickBase_FSM_C", "HidePlayerPawn");

	Params::BP_GimmickBase_FSM_C_HidePlayerPawn Parms{};

	Parms.InHide = InHide;
	Parms.InAdjustInput = InAdjustInput;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GimmickBase_FSM.BP_GimmickBase_FSM_C.InterruptListener
// (BlueprintCallable, BlueprintEvent)

void UBP_GimmickBase_FSM_C::InterruptListener()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GimmickBase_FSM_C", "InterruptListener");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GimmickBase_FSM.BP_GimmickBase_FSM_C.IsInputActionOn
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// ENoceUIInputAction                      InInputAction                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool*                                   IsOn                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_GimmickBase_FSM_C::IsInputActionOn(ENoceUIInputAction InInputAction, bool* IsOn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GimmickBase_FSM_C", "IsInputActionOn");

	Params::BP_GimmickBase_FSM_C_IsInputActionOn Parms{};

	Parms.InInputAction = InInputAction;

	UObject::ProcessEvent(Func, &Parms);

	if (IsOn != nullptr)
		*IsOn = Parms.IsOn;
}


// Function BP_GimmickBase_FSM.BP_GimmickBase_FSM_C.KeyToInputAction
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FKey&                      InKey                                                  (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// bool                                    IsKeyUp                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// ENoceUIInputAction*                     OutInputAction                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool*                                   IsValidInput                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_GimmickBase_FSM_C::KeyToInputAction(const struct FKey& InKey, bool IsKeyUp, ENoceUIInputAction* OutInputAction, bool* IsValidInput)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GimmickBase_FSM_C", "KeyToInputAction");

	Params::BP_GimmickBase_FSM_C_KeyToInputAction Parms{};

	Parms.InKey = std::move(InKey);
	Parms.IsKeyUp = IsKeyUp;

	UObject::ProcessEvent(Func, &Parms);

	if (OutInputAction != nullptr)
		*OutInputAction = Parms.OutInputAction;

	if (IsValidInput != nullptr)
		*IsValidInput = Parms.IsValidInput;
}


// Function BP_GimmickBase_FSM.BP_GimmickBase_FSM_C.On Key Down
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FKey&                      InKey                                                  (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void UBP_GimmickBase_FSM_C::On_Key_Down(const struct FKey& InKey)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GimmickBase_FSM_C", "On Key Down");

	Params::BP_GimmickBase_FSM_C_On_Key_Down Parms{};

	Parms.InKey = std::move(InKey);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GimmickBase_FSM.BP_GimmickBase_FSM_C.OnAnalogValueChanged
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FAnalogInputEvent&         InAnalogEvent                                          (BlueprintVisible, BlueprintReadOnly, Parm)

void UBP_GimmickBase_FSM_C::OnAnalogValueChanged(const struct FAnalogInputEvent& InAnalogEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GimmickBase_FSM_C", "OnAnalogValueChanged");

	Params::BP_GimmickBase_FSM_C_OnAnalogValueChanged Parms{};

	Parms.InAnalogEvent = std::move(InAnalogEvent);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GimmickBase_FSM.BP_GimmickBase_FSM_C.OnBlendOutFinish
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_GimmickBase_FSM_C::OnBlendOutFinish()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GimmickBase_FSM_C", "OnBlendOutFinish");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GimmickBase_FSM.BP_GimmickBase_FSM_C.OnCameraBlendIn
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_GimmickBase_FSM_C::OnCameraBlendIn()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GimmickBase_FSM_C", "OnCameraBlendIn");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GimmickBase_FSM.BP_GimmickBase_FSM_C.OnFadeOutFinishOnBlendIn
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_GimmickBase_FSM_C::OnFadeOutFinishOnBlendIn()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GimmickBase_FSM_C", "OnFadeOutFinishOnBlendIn");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GimmickBase_FSM.BP_GimmickBase_FSM_C.OnFadeOutFinishOnBlendOut
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_GimmickBase_FSM_C::OnFadeOutFinishOnBlendOut()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GimmickBase_FSM_C", "OnFadeOutFinishOnBlendOut");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GimmickBase_FSM.BP_GimmickBase_FSM_C.OnKeyUp
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FKey&                      InKey                                                  (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void UBP_GimmickBase_FSM_C::OnKeyUp(const struct FKey& InKey)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GimmickBase_FSM_C", "OnKeyUp");

	Params::BP_GimmickBase_FSM_C_OnKeyUp Parms{};

	Parms.InKey = std::move(InKey);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GimmickBase_FSM.BP_GimmickBase_FSM_C.OnMouseWheel
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  WheelDelta                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_GimmickBase_FSM_C::OnMouseWheel(double WheelDelta)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GimmickBase_FSM_C", "OnMouseWheel");

	Params::BP_GimmickBase_FSM_C_OnMouseWheel Parms{};

	Parms.WheelDelta = WheelDelta;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GimmickBase_FSM.BP_GimmickBase_FSM_C.OnNavigateCooldownTimeup
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_GimmickBase_FSM_C::OnNavigateCooldownTimeup()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GimmickBase_FSM_C", "OnNavigateCooldownTimeup");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GimmickBase_FSM.BP_GimmickBase_FSM_C.OnNavigateRepeat
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_GimmickBase_FSM_C::OnNavigateRepeat()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GimmickBase_FSM_C", "OnNavigateRepeat");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GimmickBase_FSM.BP_GimmickBase_FSM_C.OnPlayerInputUIAction
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// ENoceUIInputAction                      InInputUIAction                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    InPressed                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_GimmickBase_FSM_C::OnPlayerInputUIAction(ENoceUIInputAction InInputUIAction, bool InPressed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GimmickBase_FSM_C", "OnPlayerInputUIAction");

	Params::BP_GimmickBase_FSM_C_OnPlayerInputUIAction Parms{};

	Parms.InInputUIAction = InInputUIAction;
	Parms.InPressed = InPressed;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GimmickBase_FSM.BP_GimmickBase_FSM_C.OpenNotebook
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_GimmickBase_FSM_C::OpenNotebook()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GimmickBase_FSM_C", "OpenNotebook");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GimmickBase_FSM.BP_GimmickBase_FSM_C.PrepareGimmick
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_GimmickBase_FSM_C::PrepareGimmick()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GimmickBase_FSM_C", "PrepareGimmick");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GimmickBase_FSM.BP_GimmickBase_FSM_C.ReceiveOperatorTriggerDamaged
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   InHealthDamage                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   InMaxSanityDamage                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_GimmickBase_FSM_C::ReceiveOperatorTriggerDamaged(float InHealthDamage, float InMaxSanityDamage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GimmickBase_FSM_C", "ReceiveOperatorTriggerDamaged");

	Params::BP_GimmickBase_FSM_C_ReceiveOperatorTriggerDamaged Parms{};

	Parms.InHealthDamage = InHealthDamage;
	Parms.InMaxSanityDamage = InMaxSanityDamage;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GimmickBase_FSM.BP_GimmickBase_FSM_C.RequestFadeIn
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  duration                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_GimmickBase_FSM_C::RequestFadeIn(double duration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GimmickBase_FSM_C", "RequestFadeIn");

	Params::BP_GimmickBase_FSM_C_RequestFadeIn Parms{};

	Parms.duration = duration;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GimmickBase_FSM.BP_GimmickBase_FSM_C.RequestFadeOut
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   TimeSecond                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_GimmickBase_FSM_C::RequestFadeOut(float TimeSecond)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GimmickBase_FSM_C", "RequestFadeOut");

	Params::BP_GimmickBase_FSM_C_RequestFadeOut Parms{};

	Parms.TimeSecond = TimeSecond;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GimmickBase_FSM.BP_GimmickBase_FSM_C.RequestUnregisterInterruptListener
// (BlueprintCallable, BlueprintEvent)

void UBP_GimmickBase_FSM_C::RequestUnregisterInterruptListener()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GimmickBase_FSM_C", "RequestUnregisterInterruptListener");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GimmickBase_FSM.BP_GimmickBase_FSM_C.ResetNavigateRepeatTimer
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_GimmickBase_FSM_C::ResetNavigateRepeatTimer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GimmickBase_FSM_C", "ResetNavigateRepeatTimer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GimmickBase_FSM.BP_GimmickBase_FSM_C.ResumePlayerPawn
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_GimmickBase_FSM_C::ResumePlayerPawn()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GimmickBase_FSM_C", "ResumePlayerPawn");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GimmickBase_FSM.BP_GimmickBase_FSM_C.ResumePlayerPawnNextTick
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_GimmickBase_FSM_C::ResumePlayerPawnNextTick()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GimmickBase_FSM_C", "ResumePlayerPawnNextTick");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GimmickBase_FSM.BP_GimmickBase_FSM_C.ShowInputGuide
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             InGuideRowName                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_GimmickBase_FSM_C::ShowInputGuide(class FName InGuideRowName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GimmickBase_FSM_C", "ShowInputGuide");

	Params::BP_GimmickBase_FSM_C_ShowInputGuide Parms{};

	Parms.InGuideRowName = InGuideRowName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GimmickBase_FSM.BP_GimmickBase_FSM_C.StartInputWidget
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_GimmickBase_FSM_C::StartInputWidget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GimmickBase_FSM_C", "StartInputWidget");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GimmickBase_FSM.BP_GimmickBase_FSM_C.StartNavigateCooldown
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_GimmickBase_FSM_C::StartNavigateCooldown()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GimmickBase_FSM_C", "StartNavigateCooldown");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GimmickBase_FSM.BP_GimmickBase_FSM_C.Tick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaTime                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_GimmickBase_FSM_C::Tick(float DeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GimmickBase_FSM_C", "Tick");

	Params::BP_GimmickBase_FSM_C_Tick Parms{};

	Parms.DeltaTime = DeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GimmickBase_FSM.BP_GimmickBase_FSM_C.UnRegisterInterruptListener
// (BlueprintCallable, BlueprintEvent)

void UBP_GimmickBase_FSM_C::UnRegisterInterruptListener()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GimmickBase_FSM_C", "UnRegisterInterruptListener");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GimmickBase_FSM.BP_GimmickBase_FSM_C.UpdateBlendingCamera
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Delta                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_GimmickBase_FSM_C::UpdateBlendingCamera(double Delta)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GimmickBase_FSM_C", "UpdateBlendingCamera");

	Params::BP_GimmickBase_FSM_C_UpdateBlendingCamera Parms{};

	Parms.Delta = Delta;

	UObject::ProcessEvent(Func, &Parms);
}

}

