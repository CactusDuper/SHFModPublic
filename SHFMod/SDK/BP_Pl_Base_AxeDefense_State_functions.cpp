#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Pl_Base_AxeDefense_State

#include "Basic.hpp"

#include "BP_Pl_Base_AxeDefense_State_classes.hpp"
#include "BP_Pl_Base_AxeDefense_State_parameters.hpp"


namespace SDK
{

// Function BP_Pl_Base_AxeDefense_State.BP_Pl_Base_AxeDefense_State_C.CallOnEnterAttackState
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_Pl_Base_AxeDefense_State_C::CallOnEnterAttackState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Pl_Base_AxeDefense_State_C", "CallOnEnterAttackState");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Pl_Base_AxeDefense_State.BP_Pl_Base_AxeDefense_State_C.CanUseFocusAttackForGamepad
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool*                                   OutValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_Pl_Base_AxeDefense_State_C::CanUseFocusAttackForGamepad(bool* OutValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Pl_Base_AxeDefense_State_C", "CanUseFocusAttackForGamepad");

	Params::BP_Pl_Base_AxeDefense_State_C_CanUseFocusAttackForGamepad Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (OutValue != nullptr)
		*OutValue = Parms.OutValue;
}


// Function BP_Pl_Base_AxeDefense_State.BP_Pl_Base_AxeDefense_State_C.CheckNeedEnd
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_Pl_Base_AxeDefense_State_C::CheckNeedEnd()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Pl_Base_AxeDefense_State_C", "CheckNeedEnd");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Pl_Base_AxeDefense_State.BP_Pl_Base_AxeDefense_State_C.CheckSuccessToStart
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_Pl_Base_AxeDefense_State_C::CheckSuccessToStart()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Pl_Base_AxeDefense_State_C", "CheckSuccessToStart");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Pl_Base_AxeDefense_State.BP_Pl_Base_AxeDefense_State_C.ConstructionScript
// (Event, Protected, BlueprintCallable, BlueprintEvent)

void UBP_Pl_Base_AxeDefense_State_C::ConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Pl_Base_AxeDefense_State_C", "ConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Pl_Base_AxeDefense_State.BP_Pl_Base_AxeDefense_State_C.CREATEDELEGATE_PROXYFUNCTION_0
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FNoceAttackDeflectResult&  DeflectResult                                          (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, ContainsInstancedReference)

void UBP_Pl_Base_AxeDefense_State_C::CREATEDELEGATE_PROXYFUNCTION_0(const struct FNoceAttackDeflectResult& DeflectResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Pl_Base_AxeDefense_State_C", "CREATEDELEGATE_PROXYFUNCTION_0");

	Params::BP_Pl_Base_AxeDefense_State_C_CREATEDELEGATE_PROXYFUNCTION_0 Parms{};

	Parms.DeflectResult = std::move(DeflectResult);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Pl_Base_AxeDefense_State.BP_Pl_Base_AxeDefense_State_C.CREATEDELEGATE_PROXYFUNCTION_1
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FNoceAttackDeflectResult&  DeflectResult                                          (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, ContainsInstancedReference)

void UBP_Pl_Base_AxeDefense_State_C::CREATEDELEGATE_PROXYFUNCTION_1(const struct FNoceAttackDeflectResult& DeflectResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Pl_Base_AxeDefense_State_C", "CREATEDELEGATE_PROXYFUNCTION_1");

	Params::BP_Pl_Base_AxeDefense_State_C_CREATEDELEGATE_PROXYFUNCTION_1 Parms{};

	Parms.DeflectResult = std::move(DeflectResult);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Pl_Base_AxeDefense_State.BP_Pl_Base_AxeDefense_State_C.EventReceived_C40BEDCE42E930CCB0AC1ABB7F9F41F4
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FGameplayEventData&        Payload                                                (BlueprintVisible, BlueprintReadOnly, Parm)

void UBP_Pl_Base_AxeDefense_State_C::EventReceived_C40BEDCE42E930CCB0AC1ABB7F9F41F4(const struct FGameplayEventData& Payload)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Pl_Base_AxeDefense_State_C", "EventReceived_C40BEDCE42E930CCB0AC1ABB7F9F41F4");

	Params::BP_Pl_Base_AxeDefense_State_C_EventReceived_C40BEDCE42E930CCB0AC1ABB7F9F41F4 Parms{};

	Parms.Payload = std::move(Payload);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Pl_Base_AxeDefense_State.BP_Pl_Base_AxeDefense_State_C.ExecuteUbergraph_BP_Pl_Base_AxeDefense_State
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_Pl_Base_AxeDefense_State_C::ExecuteUbergraph_BP_Pl_Base_AxeDefense_State(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Pl_Base_AxeDefense_State_C", "ExecuteUbergraph_BP_Pl_Base_AxeDefense_State");

	Params::BP_Pl_Base_AxeDefense_State_C_ExecuteUbergraph_BP_Pl_Base_AxeDefense_State Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Pl_Base_AxeDefense_State.BP_Pl_Base_AxeDefense_State_C.HandleEvent
// (BlueprintCallable, BlueprintEvent)

void UBP_Pl_Base_AxeDefense_State_C::HandleEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Pl_Base_AxeDefense_State_C", "HandleEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Pl_Base_AxeDefense_State.BP_Pl_Base_AxeDefense_State_C.OnAttackHit
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const TArray<struct FNoceAttackHitResult>&HitResults                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)

void UBP_Pl_Base_AxeDefense_State_C::OnAttackHit(const TArray<struct FNoceAttackHitResult>& HitResults)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Pl_Base_AxeDefense_State_C", "OnAttackHit");

	Params::BP_Pl_Base_AxeDefense_State_C_OnAttackHit Parms{};

	Parms.HitResults = std::move(HitResults);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Pl_Base_AxeDefense_State.BP_Pl_Base_AxeDefense_State_C.OnInputAction
// (Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// ENoceInputAction                        InInputAction                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    InPressed                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_Pl_Base_AxeDefense_State_C::OnInputAction(ENoceInputAction InInputAction, bool InPressed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Pl_Base_AxeDefense_State_C", "OnInputAction");

	Params::BP_Pl_Base_AxeDefense_State_C_OnInputAction Parms{};

	Parms.InInputAction = InInputAction;
	Parms.InPressed = InPressed;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Pl_Base_AxeDefense_State.BP_Pl_Base_AxeDefense_State_C.OnInputAxis
// (Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// ENoceInputAxis                          InInputAxis                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   InValue                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_Pl_Base_AxeDefense_State_C::OnInputAxis(ENoceInputAxis InInputAxis, float InValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Pl_Base_AxeDefense_State_C", "OnInputAxis");

	Params::BP_Pl_Base_AxeDefense_State_C_OnInputAxis Parms{};

	Parms.InInputAxis = InInputAxis;
	Parms.InValue = InValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Pl_Base_AxeDefense_State.BP_Pl_Base_AxeDefense_State_C.OnMontageStateChanged
// (Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// ENoceMontageState                       NewMontageState                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_Pl_Base_AxeDefense_State_C::OnMontageStateChanged(ENoceMontageState NewMontageState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Pl_Base_AxeDefense_State_C", "OnMontageStateChanged");

	Params::BP_Pl_Base_AxeDefense_State_C_OnMontageStateChanged Parms{};

	Parms.NewMontageState = NewMontageState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Pl_Base_AxeDefense_State.BP_Pl_Base_AxeDefense_State_C.OnStateBegin
// (Event, Public, BlueprintCallable, BlueprintEvent)

void UBP_Pl_Base_AxeDefense_State_C::OnStateBegin()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Pl_Base_AxeDefense_State_C", "OnStateBegin");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Pl_Base_AxeDefense_State.BP_Pl_Base_AxeDefense_State_C.OnStateEnd
// (Event, Public, BlueprintCallable, BlueprintEvent)

void UBP_Pl_Base_AxeDefense_State_C::OnStateEnd()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Pl_Base_AxeDefense_State_C", "OnStateEnd");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Pl_Base_AxeDefense_State.BP_Pl_Base_AxeDefense_State_C.OnStateUpdate
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_Pl_Base_AxeDefense_State_C::OnStateUpdate(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Pl_Base_AxeDefense_State_C", "OnStateUpdate");

	Params::BP_Pl_Base_AxeDefense_State_C_OnStateUpdate Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Pl_Base_AxeDefense_State.BP_Pl_Base_AxeDefense_State_C.PauseFocusAccumulate
// (BlueprintCallable, BlueprintEvent)

void UBP_Pl_Base_AxeDefense_State_C::PauseFocusAccumulate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Pl_Base_AxeDefense_State_C", "PauseFocusAccumulate");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Pl_Base_AxeDefense_State.BP_Pl_Base_AxeDefense_State_C.PlayDefenseSection
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_Pl_Base_AxeDefense_State_C::PlayDefenseSection()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Pl_Base_AxeDefense_State_C", "PlayDefenseSection");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Pl_Base_AxeDefense_State.BP_Pl_Base_AxeDefense_State_C.PlayEndSection
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_Pl_Base_AxeDefense_State_C::PlayEndSection()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Pl_Base_AxeDefense_State_C", "PlayEndSection");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Pl_Base_AxeDefense_State.BP_Pl_Base_AxeDefense_State_C.PlayMontage
// (Protected, BlueprintCallable, BlueprintEvent)

void UBP_Pl_Base_AxeDefense_State_C::PlayMontage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Pl_Base_AxeDefense_State_C", "PlayMontage");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Pl_Base_AxeDefense_State.BP_Pl_Base_AxeDefense_State_C.PlayStartSection
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_Pl_Base_AxeDefense_State_C::PlayStartSection()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Pl_Base_AxeDefense_State_C", "PlayStartSection");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Pl_Base_AxeDefense_State.BP_Pl_Base_AxeDefense_State_C.PlaySuccessSection
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_Pl_Base_AxeDefense_State_C::PlaySuccessSection()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Pl_Base_AxeDefense_State_C", "PlaySuccessSection");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Pl_Base_AxeDefense_State.BP_Pl_Base_AxeDefense_State_C.ResumeFocusAccumlate
// (BlueprintCallable, BlueprintEvent)

void UBP_Pl_Base_AxeDefense_State_C::ResumeFocusAccumlate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Pl_Base_AxeDefense_State_C", "ResumeFocusAccumlate");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Pl_Base_AxeDefense_State.BP_Pl_Base_AxeDefense_State_C.SetupWantToAttack
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_Pl_Base_AxeDefense_State_C::SetupWantToAttack()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Pl_Base_AxeDefense_State_C", "SetupWantToAttack");

	UObject::ProcessEvent(Func, nullptr);
}

}

