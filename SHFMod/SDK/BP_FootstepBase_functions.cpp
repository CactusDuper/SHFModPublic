#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_FootstepBase

#include "Basic.hpp"

#include "BP_FootstepBase_classes.hpp"
#include "BP_FootstepBase_parameters.hpp"


namespace SDK
{

// Function BP_FootstepBase.BP_FootstepBase_C.PlayVFX
// (Public, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// class UMeshComponent*                   InMeshComp                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// EPhysicalSurface                        InSurfaceType                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   InHitLocation                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   InHitNormal                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_FootstepBase_C::PlayVFX(class UMeshComponent* InMeshComp, EPhysicalSurface InSurfaceType, const struct FVector& InHitLocation, const struct FVector& InHitNormal) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FootstepBase_C", "PlayVFX");

	Params::BP_FootstepBase_C_PlayVFX Parms{};

	Parms.InMeshComp = InMeshComp;
	Parms.InSurfaceType = InSurfaceType;
	Parms.InHitLocation = std::move(InHitLocation);
	Parms.InHitNormal = std::move(InHitNormal);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_FootstepBase.BP_FootstepBase_C.Received_Notify
// (Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// class USkeletalMeshComponent*           MeshComp                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UAnimSequenceBase*                Animation                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// const struct FAnimNotifyEventReference& EventReference                                         (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool UBP_FootstepBase_C::Received_Notify(class USkeletalMeshComponent* MeshComp, class UAnimSequenceBase* Animation, const struct FAnimNotifyEventReference& EventReference) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FootstepBase_C", "Received_Notify");

	Params::BP_FootstepBase_C_Received_Notify Parms{};

	Parms.MeshComp = MeshComp;
	Parms.Animation = Animation;
	Parms.EventReference = std::move(EventReference);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_FootstepBase.BP_FootstepBase_C.ReportNoiseData
// (Event, Protected, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// class AActor*                           InOwner                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_FootstepBase_C::ReportNoiseData(class AActor* InOwner) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FootstepBase_C", "ReportNoiseData");

	Params::BP_FootstepBase_C_ReportNoiseData Parms{};

	Parms.InOwner = InOwner;

	UObject::ProcessEvent(Func, &Parms);
}

}

