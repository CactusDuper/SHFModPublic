#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_PlayLevelSequenceAction

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"
#include "GameNoce_structs.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "BP_Action_Base_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_PlayLevelSequenceAction.BP_PlayLevelSequenceAction_C
// 0x01F0 (0x0240 - 0x0050)
class UBP_PlayLevelSequenceAction_C final : public UBP_Action_Base_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_PlayLevelSequenceAction_C;       // 0x0050(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	TSoftObjectPtr<class ULevelSequence>          IntroSequence;                                     // 0x0058(0x0028)(Edit, BlueprintVisible, HasGetValueTypeHash)
	TSoftObjectPtr<class ULevelSequence>          Sequence;                                          // 0x0080(0x0028)(Edit, BlueprintVisible, HasGetValueTypeHash)
	TSoftObjectPtr<class ULevelSequence>          OutroSequence;                                     // 0x00A8(0x0028)(Edit, BlueprintVisible, HasGetValueTypeHash)
	TMap<class FName, class AActor*>              BindingActorMap;                                   // 0x00D0(0x0050)(Edit, BlueprintVisible)
	bool                                          IsDisableInput;                                    // 0x0120(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_121[0x7];                                      // 0x0121(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ALevelSequenceActor*                    SequenceActor;                                     // 0x0128(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class ULevelSequence*                         SequenceObject;                                    // 0x0130(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FDateTime                              StartLoadingTime;                                  // 0x0138(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UBP_PlaySequence_State_C*               State;                                             // 0x0140(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          IsSkipTriggered;                                   // 0x0148(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsShowDebugInfo;                                   // 0x0149(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14A[0x6];                                      // 0x014A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class ULevelSequence>          SkipSequence;                                      // 0x0150(0x0028)(Edit, BlueprintVisible, HasGetValueTypeHash)
	TArray<class ABP_PlayerTrigger_Base_C*>       SkipTriggers;                                      // 0x0178(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	struct FNoceDialogDataRowHandle               SequenceEndDialog;                                 // 0x0188(0x0008)(Edit, BlueprintVisible, NoDestructor)
	class ULevelSequence*                         SkipSequenceObject;                                // 0x0190(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class ALevelSequenceActor*                    SkipSequenceActor;                                 // 0x0198(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          IsSequenceLoaded;                                  // 0x01A0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsSkipSequenceLoaded;                              // 0x01A1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsIntroSequenceReady;                              // 0x01A2(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsOutroSequenceReady;                              // 0x01A3(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SequenceEndDialogDelay;                            // 0x01A4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_PlayerTrigger_Base_C*>       SafeZones;                                         // 0x01A8(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	TArray<class ABP_EnemySpawner_C*>             TeleportSpawners;                                  // 0x01B8(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	TArray<class AActor*>                         SkipConditionHandlerOwners;                        // 0x01C8(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	class FName                                   SkipConditionHandlerTag;                           // 0x01D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UNoceConditionHandler*>          SkipConditionHandlers;                             // 0x01E0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	struct FGameplayTag                           SetProgressOnSequenceEnd;                          // 0x01F0(0x0008)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           AdditionalTagOnLevelSequenceStart;                 // 0x01F8(0x0008)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           AdditionalTagOnLevelSequenceEnd;                   // 0x0200(0x0008)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash)
	class ULevelSequence*                         IntroSequenceObject;                               // 0x0208(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class ULevelSequence*                         OutroSequenceObject;                               // 0x0210(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class ALevelSequenceActor*                    IntroSequenceActor;                                // 0x0218(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          PreparationDone;                                   // 0x0220(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_221[0x7];                                      // 0x0221(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ALevelSequenceActor*                    OutroSequenceActor;                                // 0x0228(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          SequenceStarted;                                   // 0x0230(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CachedEnemyThinkEnabled;                           // 0x0231(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HasPausedEnemyAI;                                  // 0x0232(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HideEnemy;                                         // 0x0233(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HideHUD;                                           // 0x0234(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HidePlayer;                                        // 0x0235(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsReplayable;                                      // 0x0236(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          AllowVOLanguageChange;                             // 0x0237(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HidePendantLights;                                 // 0x0238(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void BindActors();
	void CheckAllSequencesLoaded();
	void ClearSkipConditionHandler();
	void DebugPrint(const class FString& Content);
	void EnablePlayerInput(bool IsEnable);
	void ExecuteUbergraph_BP_PlayLevelSequenceAction(int32 EntryPoint);
	void ExitAction();
	void HandleSkipConditionHandler();
	void HandleTeleportSpawners();
	void LoadLevelSequence();
	void OnAllSequencesEnd();
	void OnAllSequenceStop();
	void OnIntroSequenceEnd();
	void OnLoaded_A2F9F52448A2A0672DB2FEA80645FAC8(class UObject* Loaded);
	void OnLoaded_A2F9F52448A2A0672DB2FEA8697BEB55(class UObject* Loaded);
	void OnLoaded_A2F9F52448A2A0672DB2FEA8A08393ED(class UObject* Loaded);
	void OnLoaded_D5ADA3EC44FBE99F1321419B10ABB701(class UObject* Loaded);
	void OnMainSequenceEnd();
	void OnOutroSequenceEnd();
	void OnSequenceLoaded();
	void OnSkipConditionHandlerExecuteSuccess();
	void OnSkipSequenceStop();
	void OnStartPlayingSequence();
	void OnTriggeredSkip(class ABP_PlayerTrigger_Base_C* Source);
	void PauseEnemyAI();
	void PerformAction();
	void PlayIntroSequence(bool* Played);
	void PlayMainSequence(bool* Played);
	void PlayOutroSequence(bool* Played);
	void PrepareSkipTriggers();
	void ProcessMainSeqEvents();
	void RestrictHUD(bool Restrict);
	void ResumeEnemyAI();
	void RollbackMainSeqEvents();
	void UnbindIntroStopEvent();
	void UnbindMainSeqStopEvent();
	void UnbindOutroStopEvent();

public:
	static class UClass* StaticClass()
	{
		BP_STATIC_CLASS_IMPL("BP_PlayLevelSequenceAction_C")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"BP_PlayLevelSequenceAction_C")
	}
	static class UBP_PlayLevelSequenceAction_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_PlayLevelSequenceAction_C>();
	}
};
DUMPER7_ASSERTS_UBP_PlayLevelSequenceAction_C;

}

