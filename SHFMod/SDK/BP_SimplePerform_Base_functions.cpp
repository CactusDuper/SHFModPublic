#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_SimplePerform_Base

#include "Basic.hpp"

#include "BP_SimplePerform_Base_classes.hpp"
#include "BP_SimplePerform_Base_parameters.hpp"


namespace SDK
{

// Function BP_SimplePerform_Base.BP_SimplePerform_Base_C.ExecuteInstantFeedback
// (Event, Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           InteractPawn_0                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool ABP_SimplePerform_Base_C::ExecuteInstantFeedback(class AActor* InteractPawn_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SimplePerform_Base_C", "ExecuteInstantFeedback");

	Params::BP_SimplePerform_Base_C_ExecuteInstantFeedback Parms{};

	Parms.InteractPawn_0 = InteractPawn_0;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_SimplePerform_Base.BP_SimplePerform_Base_C.ExecuteUbergraph_BP_SimplePerform_Base
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_SimplePerform_Base_C::ExecuteUbergraph_BP_SimplePerform_Base(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SimplePerform_Base_C", "ExecuteUbergraph_BP_SimplePerform_Base");

	Params::BP_SimplePerform_Base_C_ExecuteUbergraph_BP_SimplePerform_Base Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SimplePerform_Base.BP_SimplePerform_Base_C.GetPerformCamera
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Index_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ACameraActor**                    Output                                                 (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_SimplePerform_Base_C::GetPerformCamera(int32 Index_0, class ACameraActor** Output)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SimplePerform_Base_C", "GetPerformCamera");

	Params::BP_SimplePerform_Base_C_GetPerformCamera Parms{};

	Parms.Index_0 = Index_0;

	UObject::ProcessEvent(Func, &Parms);

	if (Output != nullptr)
		*Output = Parms.Output;
}


// Function BP_SimplePerform_Base.BP_SimplePerform_Base_C.GetTotalPerformNum
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32*                                  PerformNum_0                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_SimplePerform_Base_C::GetTotalPerformNum(int32* PerformNum_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SimplePerform_Base_C", "GetTotalPerformNum");

	Params::BP_SimplePerform_Base_C_GetTotalPerformNum Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (PerformNum_0 != nullptr)
		*PerformNum_0 = Parms.PerformNum_0;
}


// Function BP_SimplePerform_Base.BP_SimplePerform_Base_C.PerformFeedback
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Index_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_SimplePerform_Base_C::PerformFeedback(int32 Index_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SimplePerform_Base_C", "PerformFeedback");

	Params::BP_SimplePerform_Base_C_PerformFeedback Parms{};

	Parms.Index_0 = Index_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SimplePerform_Base.BP_SimplePerform_Base_C.SkipBlendOutOnFinish
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                                   SkipBlendOut                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_SimplePerform_Base_C::SkipBlendOutOnFinish(bool* SkipBlendOut)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SimplePerform_Base_C", "SkipBlendOutOnFinish");

	Params::BP_SimplePerform_Base_C_SkipBlendOutOnFinish Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (SkipBlendOut != nullptr)
		*SkipBlendOut = Parms.SkipBlendOut;
}

}

