#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_NocePlayerFunctionLibrary

#include "Basic.hpp"

#include "BP_NocePlayerFunctionLibrary_classes.hpp"
#include "BP_NocePlayerFunctionLibrary_parameters.hpp"


namespace SDK
{

// Function BP_NocePlayerFunctionLibrary.BP_NocePlayerFunctionLibrary_C.ApplyBossFightMode
// (Static, Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    InEnabe                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_NocePlayerFunctionLibrary_C::ApplyBossFightMode(bool InEnabe, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_NocePlayerFunctionLibrary_C", "ApplyBossFightMode");

	Params::BP_NocePlayerFunctionLibrary_C_ApplyBossFightMode Parms{};

	Parms.InEnabe = InEnabe;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function BP_NocePlayerFunctionLibrary.BP_NocePlayerFunctionLibrary_C.ApplyFullHealth
// (Static, Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UAbilitySystemComponent*          ASC                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// double                                  Level                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_NocePlayerFunctionLibrary_C::ApplyFullHealth(class UAbilitySystemComponent* ASC, double Level, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_NocePlayerFunctionLibrary_C", "ApplyFullHealth");

	Params::BP_NocePlayerFunctionLibrary_C_ApplyFullHealth Parms{};

	Parms.ASC = ASC;
	Parms.Level = Level;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function BP_NocePlayerFunctionLibrary.BP_NocePlayerFunctionLibrary_C.ApplyFullSanity
// (Static, Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UAbilitySystemComponent*          ASC                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// double                                  Level                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ANocePlayerCharacter*             PlayerCharacter                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_NocePlayerFunctionLibrary_C::ApplyFullSanity(class UAbilitySystemComponent* ASC, double Level, class ANocePlayerCharacter* PlayerCharacter, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_NocePlayerFunctionLibrary_C", "ApplyFullSanity");

	Params::BP_NocePlayerFunctionLibrary_C_ApplyFullSanity Parms{};

	Parms.ASC = ASC;
	Parms.Level = Level;
	Parms.PlayerCharacter = PlayerCharacter;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function BP_NocePlayerFunctionLibrary.BP_NocePlayerFunctionLibrary_C.ApplyFullStamina
// (Static, Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UAbilitySystemComponent*          ASC                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// double                                  Level                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_NocePlayerFunctionLibrary_C::ApplyFullStamina(class UAbilitySystemComponent* ASC, double Level, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_NocePlayerFunctionLibrary_C", "ApplyFullStamina");

	Params::BP_NocePlayerFunctionLibrary_C_ApplyFullStamina Parms{};

	Parms.ASC = ASC;
	Parms.Level = Level;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function BP_NocePlayerFunctionLibrary.BP_NocePlayerFunctionLibrary_C.ApplyHalfHealth
// (Static, Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UAbilitySystemComponent*          ASC                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// double                                  Level                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_NocePlayerFunctionLibrary_C::ApplyHalfHealth(class UAbilitySystemComponent* ASC, double Level, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_NocePlayerFunctionLibrary_C", "ApplyHalfHealth");

	Params::BP_NocePlayerFunctionLibrary_C_ApplyHalfHealth Parms{};

	Parms.ASC = ASC;
	Parms.Level = Level;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function BP_NocePlayerFunctionLibrary.BP_NocePlayerFunctionLibrary_C.ApplySmallHealth
// (Static, Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UAbilitySystemComponent*          ASC                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// double                                  Level                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_NocePlayerFunctionLibrary_C::ApplySmallHealth(class UAbilitySystemComponent* ASC, double Level, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_NocePlayerFunctionLibrary_C", "ApplySmallHealth");

	Params::BP_NocePlayerFunctionLibrary_C_ApplySmallHealth Parms{};

	Parms.ASC = ASC;
	Parms.Level = Level;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function BP_NocePlayerFunctionLibrary.BP_NocePlayerFunctionLibrary_C.FastEquipWeapon
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             WeaponName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool*                                   Success                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_NocePlayerFunctionLibrary_C::FastEquipWeapon(class FName WeaponName, class UObject* __WorldContext, bool* Success)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_NocePlayerFunctionLibrary_C", "FastEquipWeapon");

	Params::BP_NocePlayerFunctionLibrary_C_FastEquipWeapon Parms{};

	Parms.WeaponName = WeaponName;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Success != nullptr)
		*Success = Parms.Success;
}


// Function BP_NocePlayerFunctionLibrary.BP_NocePlayerFunctionLibrary_C.FillSanityToCurrentMaxSanity
// (Static, Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_NocePlayerFunctionLibrary_C::FillSanityToCurrentMaxSanity(class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_NocePlayerFunctionLibrary_C", "FillSanityToCurrentMaxSanity");

	Params::BP_NocePlayerFunctionLibrary_C_FillSanityToCurrentMaxSanity Parms{};

	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function BP_NocePlayerFunctionLibrary.BP_NocePlayerFunctionLibrary_C.HandleChangeWeaponShiromuku2
// (Static, Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             InWeaponName                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_NocePlayerFunctionLibrary_C::HandleChangeWeaponShiromuku2(class FName InWeaponName, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_NocePlayerFunctionLibrary_C", "HandleChangeWeaponShiromuku2");

	Params::BP_NocePlayerFunctionLibrary_C_HandleChangeWeaponShiromuku2 Parms{};

	Parms.InWeaponName = InWeaponName;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function BP_NocePlayerFunctionLibrary.BP_NocePlayerFunctionLibrary_C.HandlePlayerSpecialRevive
// (Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_NocePlayerFunctionLibrary_C::HandlePlayerSpecialRevive(class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_NocePlayerFunctionLibrary_C", "HandlePlayerSpecialRevive");

	Params::BP_NocePlayerFunctionLibrary_C_HandlePlayerSpecialRevive Parms{};

	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function BP_NocePlayerFunctionLibrary.BP_NocePlayerFunctionLibrary_C.IsPlayerGameOver
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool*                                   Value                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_NocePlayerFunctionLibrary_C::IsPlayerGameOver(class UObject* __WorldContext, bool* Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_NocePlayerFunctionLibrary_C", "IsPlayerGameOver");

	Params::BP_NocePlayerFunctionLibrary_C_IsPlayerGameOver Parms{};

	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Value != nullptr)
		*Value = Parms.Value;
}


// Function BP_NocePlayerFunctionLibrary.BP_NocePlayerFunctionLibrary_C.OverwriteToHealthEasyRecover
// (Static, Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UAbilitySystemComponent*          ASC                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// double                                  Level                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_NocePlayerFunctionLibrary_C::OverwriteToHealthEasyRecover(class UAbilitySystemComponent* ASC, double Level, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_NocePlayerFunctionLibrary_C", "OverwriteToHealthEasyRecover");

	Params::BP_NocePlayerFunctionLibrary_C_OverwriteToHealthEasyRecover Parms{};

	Parms.ASC = ASC;
	Parms.Level = Level;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function BP_NocePlayerFunctionLibrary.BP_NocePlayerFunctionLibrary_C.PlayControllerVibration
// (Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FNoceControllerVibrationSetting&Setting                                                (BlueprintVisible, BlueprintReadOnly, Parm)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_NocePlayerFunctionLibrary_C::PlayControllerVibration(const struct FNoceControllerVibrationSetting& Setting, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_NocePlayerFunctionLibrary_C", "PlayControllerVibration");

	Params::BP_NocePlayerFunctionLibrary_C_PlayControllerVibration Parms{};

	Parms.Setting = std::move(Setting);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function BP_NocePlayerFunctionLibrary.BP_NocePlayerFunctionLibrary_C.PlayControllerVibrationByData
// (Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UForceFeedbackEffect*             ForceFeedbackEffect                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// const struct FNeoAudioPostEventParam&   HapticEffect                                           (BlueprintVisible, BlueprintReadOnly, Parm)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_NocePlayerFunctionLibrary_C::PlayControllerVibrationByData(class UForceFeedbackEffect* ForceFeedbackEffect, const struct FNeoAudioPostEventParam& HapticEffect, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_NocePlayerFunctionLibrary_C", "PlayControllerVibrationByData");

	Params::BP_NocePlayerFunctionLibrary_C_PlayControllerVibrationByData Parms{};

	Parms.ForceFeedbackEffect = ForceFeedbackEffect;
	Parms.HapticEffect = std::move(HapticEffect);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function BP_NocePlayerFunctionLibrary.BP_NocePlayerFunctionLibrary_C.PlayControllerVibrationByType
// (Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// ENoceControllerVibrationType            VibrationType                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_NocePlayerFunctionLibrary_C::PlayControllerVibrationByType(ENoceControllerVibrationType VibrationType, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_NocePlayerFunctionLibrary_C", "PlayControllerVibrationByType");

	Params::BP_NocePlayerFunctionLibrary_C_PlayControllerVibrationByType Parms{};

	Parms.VibrationType = VibrationType;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function BP_NocePlayerFunctionLibrary.BP_NocePlayerFunctionLibrary_C.Player Apply Invincible
// (Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsInvincible                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             InToken                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_NocePlayerFunctionLibrary_C::Player_Apply_Invincible(bool IsInvincible, class FName InToken, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_NocePlayerFunctionLibrary_C", "Player Apply Invincible");

	Params::BP_NocePlayerFunctionLibrary_C_Player_Apply_Invincible Parms{};

	Parms.IsInvincible = IsInvincible;
	Parms.InToken = InToken;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function BP_NocePlayerFunctionLibrary.BP_NocePlayerFunctionLibrary_C.PlayerAddHealth
// (Static, Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UAbilitySystemComponent*          ASC                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// double                                  AddValue                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_NocePlayerFunctionLibrary_C::PlayerAddHealth(class UAbilitySystemComponent* ASC, double AddValue, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_NocePlayerFunctionLibrary_C", "PlayerAddHealth");

	Params::BP_NocePlayerFunctionLibrary_C_PlayerAddHealth Parms{};

	Parms.ASC = ASC;
	Parms.AddValue = AddValue;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function BP_NocePlayerFunctionLibrary.BP_NocePlayerFunctionLibrary_C.PlayerAddSanity
// (Static, Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UAbilitySystemComponent*          ASC                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// double                                  AddValue                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_NocePlayerFunctionLibrary_C::PlayerAddSanity(class UAbilitySystemComponent* ASC, double AddValue, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_NocePlayerFunctionLibrary_C", "PlayerAddSanity");

	Params::BP_NocePlayerFunctionLibrary_C_PlayerAddSanity Parms{};

	Parms.ASC = ASC;
	Parms.AddValue = AddValue;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function BP_NocePlayerFunctionLibrary.BP_NocePlayerFunctionLibrary_C.PlayerChangeChapterRecover
// (Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  RecoverLevel                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_NocePlayerFunctionLibrary_C::PlayerChangeChapterRecover(double RecoverLevel, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_NocePlayerFunctionLibrary_C", "PlayerChangeChapterRecover");

	Params::BP_NocePlayerFunctionLibrary_C_PlayerChangeChapterRecover Parms{};

	Parms.RecoverLevel = RecoverLevel;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function BP_NocePlayerFunctionLibrary.BP_NocePlayerFunctionLibrary_C.PlayerCurrentWeaponGetMaxDurability
// (Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ANocePlayerCharacter*             PlayerCharacter                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_NocePlayerFunctionLibrary_C::PlayerCurrentWeaponGetMaxDurability(class ANocePlayerCharacter* PlayerCharacter, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_NocePlayerFunctionLibrary_C", "PlayerCurrentWeaponGetMaxDurability");

	Params::BP_NocePlayerFunctionLibrary_C_PlayerCurrentWeaponGetMaxDurability Parms{};

	Parms.PlayerCharacter = PlayerCharacter;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function BP_NocePlayerFunctionLibrary.BP_NocePlayerFunctionLibrary_C.PlayerDisableRagdoll
// (Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_NocePlayerFunctionLibrary_C::PlayerDisableRagdoll(bool Value, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_NocePlayerFunctionLibrary_C", "PlayerDisableRagdoll");

	Params::BP_NocePlayerFunctionLibrary_C_PlayerDisableRagdoll Parms{};

	Parms.Value = Value;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function BP_NocePlayerFunctionLibrary.BP_NocePlayerFunctionLibrary_C.PlayerGenerateOverlapEvent
// (Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Enable                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_NocePlayerFunctionLibrary_C::PlayerGenerateOverlapEvent(bool Enable, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_NocePlayerFunctionLibrary_C", "PlayerGenerateOverlapEvent");

	Params::BP_NocePlayerFunctionLibrary_C_PlayerGenerateOverlapEvent Parms{};

	Parms.Enable = Enable;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function BP_NocePlayerFunctionLibrary.BP_NocePlayerFunctionLibrary_C.PlayerGetFullRecover
// (Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  RecoverLevel                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    FixCurrentWeapon                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_NocePlayerFunctionLibrary_C::PlayerGetFullRecover(double RecoverLevel, bool FixCurrentWeapon, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_NocePlayerFunctionLibrary_C", "PlayerGetFullRecover");

	Params::BP_NocePlayerFunctionLibrary_C_PlayerGetFullRecover Parms{};

	Parms.RecoverLevel = RecoverLevel;
	Parms.FixCurrentWeapon = FixCurrentWeapon;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function BP_NocePlayerFunctionLibrary.BP_NocePlayerFunctionLibrary_C.PlayerGetFullStamina
// (Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  RecoverLevel                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_NocePlayerFunctionLibrary_C::PlayerGetFullStamina(double RecoverLevel, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_NocePlayerFunctionLibrary_C", "PlayerGetFullStamina");

	Params::BP_NocePlayerFunctionLibrary_C_PlayerGetFullStamina Parms{};

	Parms.RecoverLevel = RecoverLevel;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function BP_NocePlayerFunctionLibrary.BP_NocePlayerFunctionLibrary_C.PlayerGetGameOver
// (Static, Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_NocePlayerFunctionLibrary_C::PlayerGetGameOver(class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_NocePlayerFunctionLibrary_C", "PlayerGetGameOver");

	Params::BP_NocePlayerFunctionLibrary_C_PlayerGetGameOver Parms{};

	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function BP_NocePlayerFunctionLibrary.BP_NocePlayerFunctionLibrary_C.PlayerGetInvincibleState
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool*                                   IsInvincible                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_NocePlayerFunctionLibrary_C::PlayerGetInvincibleState(class UObject* __WorldContext, bool* IsInvincible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_NocePlayerFunctionLibrary_C", "PlayerGetInvincibleState");

	Params::BP_NocePlayerFunctionLibrary_C_PlayerGetInvincibleState Parms{};

	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (IsInvincible != nullptr)
		*IsInvincible = Parms.IsInvincible;
}


// Function BP_NocePlayerFunctionLibrary.BP_NocePlayerFunctionLibrary_C.PlayerReverseWalkToByCurrentCamera
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  InDistance                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const TDelegate<void()>&                InEventOnReahTarget                                    (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_NocePlayerFunctionLibrary_C::PlayerReverseWalkToByCurrentCamera(double InDistance, const TDelegate<void()>& InEventOnReahTarget, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_NocePlayerFunctionLibrary_C", "PlayerReverseWalkToByCurrentCamera");

	Params::BP_NocePlayerFunctionLibrary_C_PlayerReverseWalkToByCurrentCamera Parms{};

	Parms.InDistance = InDistance;
	Parms.InEventOnReahTarget = InEventOnReahTarget;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function BP_NocePlayerFunctionLibrary.BP_NocePlayerFunctionLibrary_C.PlayerSavePointRecover
// (Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  RecoverLevel                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_NocePlayerFunctionLibrary_C::PlayerSavePointRecover(double RecoverLevel, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_NocePlayerFunctionLibrary_C", "PlayerSavePointRecover");

	Params::BP_NocePlayerFunctionLibrary_C_PlayerSavePointRecover Parms{};

	Parms.RecoverLevel = RecoverLevel;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function BP_NocePlayerFunctionLibrary.BP_NocePlayerFunctionLibrary_C.PlayerSetEventMode
// (Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    InEvent                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// ENoceEventModeType                      EventModeType                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// ENoceCineEventUserType                  CineEventUserType                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_NocePlayerFunctionLibrary_C::PlayerSetEventMode(bool InEvent, ENoceEventModeType EventModeType, ENoceCineEventUserType CineEventUserType, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_NocePlayerFunctionLibrary_C", "PlayerSetEventMode");

	Params::BP_NocePlayerFunctionLibrary_C_PlayerSetEventMode Parms{};

	Parms.InEvent = InEvent;
	Parms.EventModeType = EventModeType;
	Parms.CineEventUserType = CineEventUserType;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function BP_NocePlayerFunctionLibrary.BP_NocePlayerFunctionLibrary_C.PlayerSetupDevChapterJumpSetting
// (Static, Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_NocePlayerFunctionLibrary_C::PlayerSetupDevChapterJumpSetting(class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_NocePlayerFunctionLibrary_C", "PlayerSetupDevChapterJumpSetting");

	Params::BP_NocePlayerFunctionLibrary_C_PlayerSetupDevChapterJumpSetting Parms{};

	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function BP_NocePlayerFunctionLibrary.BP_NocePlayerFunctionLibrary_C.PlayerWalkTo
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  InDelayStartTime                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    InIsWalkToWithCameraRotation                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FRotator&                  InCameraRotation                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// const struct FVector&                   InWalkToLocation                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  InCameraLerpTime                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    InLimitInput                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const TDelegate<void()>&                InEventOnReahTarget                                    (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_NocePlayerFunctionLibrary_C::PlayerWalkTo(double InDelayStartTime, bool InIsWalkToWithCameraRotation, const struct FRotator& InCameraRotation, const struct FVector& InWalkToLocation, double InCameraLerpTime, bool InLimitInput, const TDelegate<void()>& InEventOnReahTarget, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_NocePlayerFunctionLibrary_C", "PlayerWalkTo");

	Params::BP_NocePlayerFunctionLibrary_C_PlayerWalkTo Parms{};

	Parms.InDelayStartTime = InDelayStartTime;
	Parms.InIsWalkToWithCameraRotation = InIsWalkToWithCameraRotation;
	Parms.InCameraRotation = std::move(InCameraRotation);
	Parms.InWalkToLocation = std::move(InWalkToLocation);
	Parms.InCameraLerpTime = InCameraLerpTime;
	Parms.InLimitInput = InLimitInput;
	Parms.InEventOnReahTarget = InEventOnReahTarget;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function BP_NocePlayerFunctionLibrary.BP_NocePlayerFunctionLibrary_C.SendEventLockDoorSystemHintVO
// (Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_NocePlayerFunctionLibrary_C::SendEventLockDoorSystemHintVO(class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_NocePlayerFunctionLibrary_C", "SendEventLockDoorSystemHintVO");

	Params::BP_NocePlayerFunctionLibrary_C_SendEventLockDoorSystemHintVO Parms{};

	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function BP_NocePlayerFunctionLibrary.BP_NocePlayerFunctionLibrary_C.SendEventRummageSystemHintVO
// (Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    InHaveSpawnedItem                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_NocePlayerFunctionLibrary_C::SendEventRummageSystemHintVO(bool InHaveSpawnedItem, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_NocePlayerFunctionLibrary_C", "SendEventRummageSystemHintVO");

	Params::BP_NocePlayerFunctionLibrary_C_SendEventRummageSystemHintVO Parms{};

	Parms.InHaveSpawnedItem = InHaveSpawnedItem;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function BP_NocePlayerFunctionLibrary.BP_NocePlayerFunctionLibrary_C.SendEventSavePointSystemHintVO
// (Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    InForbbiden                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    InClose                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_NocePlayerFunctionLibrary_C::SendEventSavePointSystemHintVO(bool InForbbiden, bool InClose, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_NocePlayerFunctionLibrary_C", "SendEventSavePointSystemHintVO");

	Params::BP_NocePlayerFunctionLibrary_C_SendEventSavePointSystemHintVO Parms{};

	Parms.InForbbiden = InForbbiden;
	Parms.InClose = InClose;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function BP_NocePlayerFunctionLibrary.BP_NocePlayerFunctionLibrary_C.SendEventUnlockSystemHintVO
// (Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    InSuccess                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_NocePlayerFunctionLibrary_C::SendEventUnlockSystemHintVO(bool InSuccess, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_NocePlayerFunctionLibrary_C", "SendEventUnlockSystemHintVO");

	Params::BP_NocePlayerFunctionLibrary_C_SendEventUnlockSystemHintVO Parms{};

	Parms.InSuccess = InSuccess;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}

}

