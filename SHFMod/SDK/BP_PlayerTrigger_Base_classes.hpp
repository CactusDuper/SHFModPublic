#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_PlayerTrigger_Base

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "GameNoce_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_PlayerTrigger_Base.BP_PlayerTrigger_Base_C
// 0x0060 (0x03A8 - 0x0348)
class ABP_PlayerTrigger_Base_C : public ANocePlayerTriggerBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0348(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0350(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UShapeComponent*                        MyTrigger;                                         // 0x0358(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          TriggerOnce;                                       // 0x0360(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HasTriggered;                                      // 0x0361(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_362[0x6];                                      // 0x0362(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        TriggerDelay;                                      // 0x0368(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          TriggerWhenOverlapping;                            // 0x0370(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_371[0x7];                                      // 0x0371(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 OverlapPawn;                                       // 0x0378(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           DelayTimer;                                        // 0x0380(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	TMulticastInlineDelegate<void(class ABP_PlayerTrigger_Base_C* Source)> OnTriggered;              // 0x0388(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          EnableOnStart;                                     // 0x0398(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HasBindEvent;                                      // 0x0399(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HasBeginOverlap;                                   // 0x039A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          StopTickWhenDisable;                               // 0x039B(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39C[0x4];                                      // 0x039C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 PendingPawn;                                       // 0x03A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void UnbindOverlapEvent();
	void StartTriggerTimer();
	void RequestCreateRecordDataBP(class AActor* InActor);
	void ReceiveEndPlay(EEndPlayReason EndPlayReason);
	void ReceiveBeginPlay();
	void OnUntrigger();
	void OnTriggerTimerUp();
	void OnTrigger(class AActor* InPawn);
	void OnPlayerSwitchPawn(class AActor* NewPawn);
	void OnConditionChanged_BP();
	void OnBoxEndOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void OnBoxBeginOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void ManualCheckOverlapping();
	bool IsPlayerOverlapping();
	void InternalEndOverlap(class AActor* InPawn);
	void InternalBeginOverlap(class AActor* InPawn);
	void ExecuteUbergraph_BP_PlayerTrigger_Base(int32 EntryPoint);
	void EnableTrigger();
	void DoOnEndOverlap(class AActor* InPawn);
	void DoOnBeginOverlap(class AActor* InPawn);
	void DisableTrigger();
	void CheckPlayerOverlapping(class AActor* InCheckActor, bool* IsOverlapping);
	void Check_Condition_Change();
	void BP_OnRecordLoaded();
	void BindOverlapEvent();
	void AssignTrigger();

public:
	static class UClass* StaticClass()
	{
		BP_STATIC_CLASS_IMPL("BP_PlayerTrigger_Base_C")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"BP_PlayerTrigger_Base_C")
	}
	static class ABP_PlayerTrigger_Base_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_PlayerTrigger_Base_C>();
	}
};
DUMPER7_ASSERTS_ABP_PlayerTrigger_Base_C;

}

