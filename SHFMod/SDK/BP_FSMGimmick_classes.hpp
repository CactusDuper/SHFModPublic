#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_FSMGimmick

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "NeoAudio_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "GameNoce_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "BP_InteractWithConditionBase_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_FSMGimmick.BP_FSMGimmick_C
// 0x0908 (0x0EC0 - 0x05B8)
#pragma pack(push, 0x1)
class alignas(0x10) ABP_FSMGimmick_C : public ABP_InteractWithConditionBase_C
{
public:
	uint8                                         Pad_5B2[0x6];                                      // 0x05B2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_FSMGimmick_C;                    // 0x05B8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USceneComponent*                        LightRoot;                                         // 0x05C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UNoceMapIconComponent*                  NoceMapIcon;                                       // 0x05C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UNeoAudioSoundComponent*                NeoAudioSound;                                     // 0x05D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          InteractBox;                                       // 0x05D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class ANocePlayerCharacter*                   InteractPawn;                                      // 0x05E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class ACameraActor*                           TargetCameraActor;                                 // 0x05E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	double                                        CameraBlendInTime;                                 // 0x05F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          StateMachineStarted;                               // 0x05F8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EViewTargetBlendFunction                      CameraBlendInFunc;                                 // 0x05F9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5FA[0x2];                                      // 0x05FA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CameraBlendInExp;                                  // 0x05FC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CameraBlendOutTime;                                // 0x0600(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EViewTargetBlendFunction                      CameraBlendOutFunc;                                // 0x0608(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_609[0x3];                                      // 0x0609(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CameraBlendOutExp;                                 // 0x060C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           SetTagOnComplete;                                  // 0x0610(0x0008)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash)
	bool                                          IsGimmickCompleted;                                // 0x0618(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_619[0x7];                                      // 0x0619(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ANocePlayerController*                  InteractController;                                // 0x0620(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          CanSpawnCameraActor;                               // 0x0628(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HasToDestroyCamera;                                // 0x0629(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_62A[0x2];                                      // 0x062A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FNeoAudioTriggerIdHandle               AudioZoomIn;                                       // 0x062C(0x0008)(Edit, BlueprintVisible, NoDestructor)
	struct FNeoAudioTriggerIdHandle               AudioZoomOut;                                      // 0x0634(0x0008)(Edit, BlueprintVisible, NoDestructor)
	bool                                          UseCustomBlendOutRotation;                         // 0x063C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_63D[0x3];                                      // 0x063D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               BlendOutRotation;                                  // 0x0640(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CustomBlendOutUseCountLimit;                       // 0x0658(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         UseCount;                                          // 0x065C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMulticastInlineDelegate<void()>              OnBlendOutPrepareFinished;                         // 0x0660(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TArray<struct FGameplayTag>                   TagsOnComplete;                                    // 0x0670(0x0010)(Edit, BlueprintVisible)
	TArray<struct FGameplayTag>                   TagsOnExit;                                        // 0x0680(0x0010)(Edit, BlueprintVisible)
	bool                                          UsableAfterComplete;                               // 0x0690(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          UseCamera;                                         // 0x0691(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_692[0x6];                                      // 0x0692(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void()>              OnGimmickComplete;                                 // 0x0698(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	class FString                                 PsuedoPPVName;                                     // 0x06A8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	double                                        PsuedoPPVPriority;                                 // 0x06B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FPostProcessSettings                   CameraPostProcessSetting;                          // 0x06C0(0x06F0)(Edit, BlueprintVisible)
	bool                                          BlendOutCameraWithFade;                            // 0x0DB0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          BlendInCameraWithFade;                             // 0x0DB1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DB2[0x6];                                      // 0x0DB2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        FadeInTime;                                        // 0x0DB8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ULightComponent*>                ExamineLights;                                     // 0x0DC0(0x0010)(Edit, BlueprintVisible, Transient, DisableEditOnInstance, ContainsInstancedReference)
	float                                         AudioZoomInDelayTime;                              // 0x0DD0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DD4[0x4];                                      // 0x0DD4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 FSMName;                                           // 0x0DD8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	class USMStateMachineComponent*               FSMInstance;                                       // 0x0DE8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TMulticastInlineDelegate<void()>              OnGimmickInterrupt;                                // 0x0DF0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	class UClass*                                 DefaultCamereaShake;                               // 0x0E00(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CanOpenNotebook;                                   // 0x0E08(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENoceNotebookType                             NotebookType;                                      // 0x0E09(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E0A[0x2];                                      // 0x0E0A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   NotebookName;                                      // 0x0E0C(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   NotebookContent;                                   // 0x0E14(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          EnableLightAfterBlendIn;                           // 0x0E1C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E1D[0x3];                                      // 0x0E1D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        DelayEnableLight;                                  // 0x0E20(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           EnableLightTimer;                                  // 0x0E28(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	TArray<double>                                ExamineLightsIntensity;                            // 0x0E30(0x0010)(Edit, BlueprintVisible, Transient, DisableEditOnInstance)
	bool                                          UpdatingLight;                                     // 0x0E40(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E41[0x7];                                      // 0x0E41(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CurrentLightDuration;                              // 0x0E48(0x0008)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        LightBlendDuration;                                // 0x0E50(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        LightIntensitySource;                              // 0x0E58(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        LightIntensityTarget;                              // 0x0E60(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMap<ENoceEndingType, class FName>            NotebookContentByEnding;                           // 0x0E68(0x0050)(Edit, BlueprintVisible)

public:
	void Audio_Set_Gimmick_State_False();
	void Audio_SetGimmickStateTrue();
	void BndEvt__BP_FSMGimmick_InteractBox_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void BndEvt__BP_FSMGimmick_InteractBox_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void BPI_Gimmick_CanOpenNotebook(bool* Result);
	void BPI_Gimmick_GetCameraBlendInVariables(double* BlendInTime, double* BlendInExp, int32* ViewTargetBlend);
	void BPI_Gimmick_GetCameraBlendOutVariables(double* BlendOutTime, double* BlendOutExp, int32* ViewTargetBlend);
	void BPI_Gimmick_GetCameraFadeVariables(bool* BlendInCameraWithFade_0, bool* BlendOutCameraWithFade_0, double* FadeInTime_0);
	void BPI_Gimmick_GetEnableLightAfterBlendIn(bool* AfterBlendIn, double* Delay);
	void BPI_Gimmick_GetInteractPlayer(class ANocePlayerCharacter** InteractPlayer);
	void BPI_Gimmick_GetNotebookContent(ENoceNotebookType* NotebookType_0, class FName* NotebookName_0, class FName* NotebookContent_0);
	void BPI_Gimmick_GetTargetCamera(class ACameraActor** CameraActor);
	void BPI_Gimmick_OnCameraBlendIn();
	void BPI_Gimmick_OnCameraBlendInFinish();
	void BPI_Gimmick_OnCameraBlendOut();
	void BPI_Gimmick_OnComplete();
	void BPI_Gimmick_OnExit();
	void BPI_Gimmick_OnExitBlendOutFinish();
	void BPI_Gimmick_OnFadeOutFinishOnBlendOut();
	void BPI_Gimmick_OnInterrupted();
	void BPI_Gimmick_OnNotebookClosed();
	void BPI_Gimmick_OnOpenNotebook();
	void BPI_Gimmick_OnPlayerUIInput(ENoceUIInputAction InAction);
	void BPI_Gimmick_OnPrepare();
	void BPI_GImmick_OnPrepareBlendOutCamera();
	void BPI_Gimmick_SetEnvironmentAdjustWeight(double Weight);
	bool CanInteractWithPawnBP(class AActor* InteractorPawn);
	void CompleteGimmick();
	void DelayEnableLightRoot();
	void EnableCameraPostProcess(bool InEnable);
	void EnableExamineLight(bool EnableLight, double BlendDuration);
	bool ExecuteInstantFeedback(class AActor* InteractPawn_0);
	void ExecuteUbergraph_BP_FSMGimmick(int32 EntryPoint);
	void ExitGimmick();
	void FindCameraFromChild();
	struct FVector Get_Spot_in_Front_Of_Camera(double OffsetX, double OffsetY, double OffsetZ);
	void GetBlendInTime(double* OutBlendTime);
	void GetBlendOutTime(double* OutBlendTime);
	class FString GetDebugTriggerInfo();
	void HandleSaveStatus();
	void InitializeCameraPostProcess();
	void InitializeExamineLight();
	void ManualCheckOverlapping();
	void NeedCustomBlendOut(bool* Result);
	void NeedSetAudioState(bool* Result);
	void NeedSetPlayerToUseGimmickState(bool* Yes);
	void OnExitBlendOutFinish();
	void OnGimmickInterrupted();
	void OnNotebookClosed();
	void OnPlayerInputAction(ENoceInputAction InInputAction, bool InPressed);
	void OnPlayerInputUIAction(ENoceUIInputAction InInputAction, bool InPressed);
	void OnPrepareBlendOutCamera();
	void OnPrepareGimmick();
	void ReceiveBeginPlay();
	void ReceiveEndPlay(EEndPlayReason EndPlayReason);
	void ReceiveTick(float DeltaSeconds);
	void SetCameraPostProcessBlendWeight(float InWeight);
	void SetEnvironmentAdjustWeight(double InWeight);
	void SetLightIntensity(double Alpha);
	void SpawnFSMInstance();
	void SpawnTargetCamera();
	void StartGimmick(class ANocePlayerCharacter* InCharacter);
	void TickLightBlending(double DeltaTime);
	void TryGetTargetCameraActor();
	void UpdateExamineLightTransform();
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		BP_STATIC_CLASS_IMPL("BP_FSMGimmick_C")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"BP_FSMGimmick_C")
	}
	static class ABP_FSMGimmick_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_FSMGimmick_C>();
	}
};
#pragma pack(pop)
DUMPER7_ASSERTS_ABP_FSMGimmick_C;

}

