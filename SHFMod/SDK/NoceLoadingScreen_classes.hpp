#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: NoceLoadingScreen

#include "Basic.hpp"

#include "CoreUObject_classes.hpp"
#include "Engine_classes.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// Class NoceLoadingScreen.NoceLoadingScreenInterface
// 0x0000 (0x0000 - 0x0000)
class INoceLoadingScreenInterface final
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("NoceLoadingScreenInterface")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"NoceLoadingScreenInterface")
	}
	static class INoceLoadingScreenInterface* GetDefaultObj()
	{
		return GetDefaultObjImpl<INoceLoadingScreenInterface>();
	}

	class UObject* AsUObject()
	{
		return reinterpret_cast<UObject*>(this);
	}
	const class UObject* AsUObject() const
	{
		return reinterpret_cast<const UObject*>(this);
	}
};
DUMPER7_ASSERTS_INoceLoadingScreenInterface;

// Class NoceLoadingScreen.NoceLoadingScreenLibrary
// 0x0000 (0x0028 - 0x0028)
class UNoceLoadingScreenLibrary final : public UBlueprintFunctionLibrary
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("NoceLoadingScreenLibrary")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"NoceLoadingScreenLibrary")
	}
	static class UNoceLoadingScreenLibrary* GetDefaultObj()
	{
		return GetDefaultObjImpl<UNoceLoadingScreenLibrary>();
	}
};
DUMPER7_ASSERTS_UNoceLoadingScreenLibrary;

// Class NoceLoadingScreen.NoceLoadingScreenSystem
// 0x00C0 (0x00F0 - 0x0030)
class UNoceLoadingScreenSystem final : public UGameInstanceSubsystem
{
public:
	bool                                          IsFromDebugLevelJump;                              // 0x0030(0x0001)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_31[0x1F];                                      // 0x0031(0x001F)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void()>              OnDisplayLoadScreenWidgetDelegate;                 // 0x0050(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_60[0x18];                                      // 0x0060(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void()>              OnRemoveLoadScreenWidgetDelegate;                  // 0x0078(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_88[0x68];                                      // 0x0088(0x0068)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void DebugHideLoadingScreen(bool IsHide);
	bool Tick(float DeltaTime);

	bool IsDisplayingLoadingScreen() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("NoceLoadingScreenSystem")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"NoceLoadingScreenSystem")
	}
	static class UNoceLoadingScreenSystem* GetDefaultObj()
	{
		return GetDefaultObjImpl<UNoceLoadingScreenSystem>();
	}
};
DUMPER7_ASSERTS_UNoceLoadingScreenSystem;

// Class NoceLoadingScreen.NoceLoadingScreenWidget
// 0x0000 (0x02E0 - 0x02E0)
class UNoceLoadingScreenWidget : public UUserWidget
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("NoceLoadingScreenWidget")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"NoceLoadingScreenWidget")
	}
	static class UNoceLoadingScreenWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UNoceLoadingScreenWidget>();
	}
};
DUMPER7_ASSERTS_UNoceLoadingScreenWidget;

}

