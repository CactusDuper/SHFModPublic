#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Pl_Hina_NocePlayerState

#include "Basic.hpp"

#include "BP_Pl_Hina_NocePlayerState_classes.hpp"
#include "BP_Pl_Hina_NocePlayerState_parameters.hpp"


namespace SDK
{

// Function BP_Pl_Hina_NocePlayerState.BP_Pl_Hina_NocePlayerState_C.BP_AddHealth
// (Event, Protected, BlueprintEvent)
// Parameters:
// float                                   AddValue                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Pl_Hina_NocePlayerState_C::BP_AddHealth(float AddValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Pl_Hina_NocePlayerState_C", "BP_AddHealth");

	Params::BP_Pl_Hina_NocePlayerState_C_BP_AddHealth Parms{};

	Parms.AddValue = AddValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Pl_Hina_NocePlayerState.BP_Pl_Hina_NocePlayerState_C.BP_AddSanity
// (Event, Protected, BlueprintEvent)
// Parameters:
// float                                   AddValue                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Pl_Hina_NocePlayerState_C::BP_AddSanity(float AddValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Pl_Hina_NocePlayerState_C", "BP_AddSanity");

	Params::BP_Pl_Hina_NocePlayerState_C_BP_AddSanity Parms{};

	Parms.AddValue = AddValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Pl_Hina_NocePlayerState.BP_Pl_Hina_NocePlayerState_C.BP_ApplyFullHealth
// (Event, Protected, BlueprintEvent)

void ABP_Pl_Hina_NocePlayerState_C::BP_ApplyFullHealth()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Pl_Hina_NocePlayerState_C", "BP_ApplyFullHealth");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Pl_Hina_NocePlayerState.BP_Pl_Hina_NocePlayerState_C.BP_ApplyFullSanity
// (Event, Protected, BlueprintEvent)

void ABP_Pl_Hina_NocePlayerState_C::BP_ApplyFullSanity()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Pl_Hina_NocePlayerState_C", "BP_ApplyFullSanity");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Pl_Hina_NocePlayerState.BP_Pl_Hina_NocePlayerState_C.BP_ApplyFullStamina
// (Event, Protected, BlueprintEvent)

void ABP_Pl_Hina_NocePlayerState_C::BP_ApplyFullStamina()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Pl_Hina_NocePlayerState_C", "BP_ApplyFullStamina");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Pl_Hina_NocePlayerState.BP_Pl_Hina_NocePlayerState_C.ExecuteUbergraph_BP_Pl_Hina_NocePlayerState
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Pl_Hina_NocePlayerState_C::ExecuteUbergraph_BP_Pl_Hina_NocePlayerState(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Pl_Hina_NocePlayerState_C", "ExecuteUbergraph_BP_Pl_Hina_NocePlayerState");

	Params::BP_Pl_Hina_NocePlayerState_C_ExecuteUbergraph_BP_Pl_Hina_NocePlayerState Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Pl_Hina_NocePlayerState.BP_Pl_Hina_NocePlayerState_C.GetHintWidget
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UNoceGeneralHintWidget*           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)

class UNoceGeneralHintWidget* ABP_Pl_Hina_NocePlayerState_C::GetHintWidget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Pl_Hina_NocePlayerState_C", "GetHintWidget");

	Params::BP_Pl_Hina_NocePlayerState_C_GetHintWidget Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_Pl_Hina_NocePlayerState.BP_Pl_Hina_NocePlayerState_C.IsNotebookHintBlocked
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool*                                   IsBlocked                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Pl_Hina_NocePlayerState_C::IsNotebookHintBlocked(bool* IsBlocked)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Pl_Hina_NocePlayerState_C", "IsNotebookHintBlocked");

	Params::BP_Pl_Hina_NocePlayerState_C_IsNotebookHintBlocked Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsBlocked != nullptr)
		*IsBlocked = Parms.IsBlocked;
}


// Function BP_Pl_Hina_NocePlayerState.BP_Pl_Hina_NocePlayerState_C.OnEnterEvent
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_Pl_Hina_NocePlayerState_C::OnEnterEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Pl_Hina_NocePlayerState_C", "OnEnterEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Pl_Hina_NocePlayerState.BP_Pl_Hina_NocePlayerState_C.OnExitEvent
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_Pl_Hina_NocePlayerState_C::OnExitEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Pl_Hina_NocePlayerState_C", "OnExitEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Pl_Hina_NocePlayerState.BP_Pl_Hina_NocePlayerState_C.OnGameplayTagChange
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FGameplayTag&              Tag                                                    (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash)
// bool                                    TagExists                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Pl_Hina_NocePlayerState_C::OnGameplayTagChange(const struct FGameplayTag& Tag, bool TagExists)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Pl_Hina_NocePlayerState_C", "OnGameplayTagChange");

	Params::BP_Pl_Hina_NocePlayerState_C_OnGameplayTagChange Parms{};

	Parms.Tag = std::move(Tag);
	Parms.TagExists = TagExists;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Pl_Hina_NocePlayerState.BP_Pl_Hina_NocePlayerState_C.OnUsingGimmick
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsUsing                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Pl_Hina_NocePlayerState_C::OnUsingGimmick(bool IsUsing)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Pl_Hina_NocePlayerState_C", "OnUsingGimmick");

	Params::BP_Pl_Hina_NocePlayerState_C_OnUsingGimmick Parms{};

	Parms.IsUsing = IsUsing;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Pl_Hina_NocePlayerState.BP_Pl_Hina_NocePlayerState_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_Pl_Hina_NocePlayerState_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Pl_Hina_NocePlayerState_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Pl_Hina_NocePlayerState.BP_Pl_Hina_NocePlayerState_C.ReceiveEndPlay
// (Event, Protected, BlueprintEvent)
// Parameters:
// EEndPlayReason                          EndPlayReason                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Pl_Hina_NocePlayerState_C::ReceiveEndPlay(EEndPlayReason EndPlayReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Pl_Hina_NocePlayerState_C", "ReceiveEndPlay");

	Params::BP_Pl_Hina_NocePlayerState_C_ReceiveEndPlay Parms{};

	Parms.EndPlayReason = EndPlayReason;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Pl_Hina_NocePlayerState.BP_Pl_Hina_NocePlayerState_C.ReceiveOnPickUpItemEvent
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// ENoceInventoryType                      InventoryType                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             ID                                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    PlaySystemHintVO                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Pl_Hina_NocePlayerState_C::ReceiveOnPickUpItemEvent(ENoceInventoryType InventoryType, class FName ID, bool PlaySystemHintVO)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Pl_Hina_NocePlayerState_C", "ReceiveOnPickUpItemEvent");

	Params::BP_Pl_Hina_NocePlayerState_C_ReceiveOnPickUpItemEvent Parms{};

	Parms.InventoryType = InventoryType;
	Parms.ID = ID;
	Parms.PlaySystemHintVO = PlaySystemHintVO;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Pl_Hina_NocePlayerState.BP_Pl_Hina_NocePlayerState_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Pl_Hina_NocePlayerState_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Pl_Hina_NocePlayerState_C", "ReceiveTick");

	Params::BP_Pl_Hina_NocePlayerState_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Pl_Hina_NocePlayerState.BP_Pl_Hina_NocePlayerState_C.ShowAddNotebookIDHint
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_Pl_Hina_NocePlayerState_C::ShowAddNotebookIDHint()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Pl_Hina_NocePlayerState_C", "ShowAddNotebookIDHint");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Pl_Hina_NocePlayerState.BP_Pl_Hina_NocePlayerState_C.ShowHintWidget
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FText&                      HintText                                               (BlueprintVisible, BlueprintReadOnly, Parm)
// double                                  duration                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Pl_Hina_NocePlayerState_C::ShowHintWidget(const class FText& HintText, double duration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Pl_Hina_NocePlayerState_C", "ShowHintWidget");

	Params::BP_Pl_Hina_NocePlayerState_C_ShowHintWidget Parms{};

	Parms.HintText = std::move(HintText);
	Parms.duration = duration;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Pl_Hina_NocePlayerState.BP_Pl_Hina_NocePlayerState_C.ShowPickMessage
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// ENoceInventoryType                      Type                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             ID                                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Pl_Hina_NocePlayerState_C::ShowPickMessage(ENoceInventoryType Type, class FName ID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Pl_Hina_NocePlayerState_C", "ShowPickMessage");

	Params::BP_Pl_Hina_NocePlayerState_C_ShowPickMessage Parms{};

	Parms.Type = Type;
	Parms.ID = ID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Pl_Hina_NocePlayerState.BP_Pl_Hina_NocePlayerState_C.ShowPickPreviewDialog
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// ENoceInventoryType                      InventoryType                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             ID                                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Pl_Hina_NocePlayerState_C::ShowPickPreviewDialog(ENoceInventoryType InventoryType, class FName ID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Pl_Hina_NocePlayerState_C", "ShowPickPreviewDialog");

	Params::BP_Pl_Hina_NocePlayerState_C_ShowPickPreviewDialog Parms{};

	Parms.InventoryType = InventoryType;
	Parms.ID = ID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Pl_Hina_NocePlayerState.BP_Pl_Hina_NocePlayerState_C.UpdateHPWarnings
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    InSourceFormEvent                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Pl_Hina_NocePlayerState_C::UpdateHPWarnings(bool InSourceFormEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Pl_Hina_NocePlayerState_C", "UpdateHPWarnings");

	Params::BP_Pl_Hina_NocePlayerState_C_UpdateHPWarnings Parms{};

	Parms.InSourceFormEvent = InSourceFormEvent;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Pl_Hina_NocePlayerState.BP_Pl_Hina_NocePlayerState_C.UpdateIsHealthDanger
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_Pl_Hina_NocePlayerState_C::UpdateIsHealthDanger()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Pl_Hina_NocePlayerState_C", "UpdateIsHealthDanger");

	UObject::ProcessEvent(Func, nullptr);
}

}

