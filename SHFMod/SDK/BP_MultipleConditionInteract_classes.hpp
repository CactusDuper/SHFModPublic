#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_MultipleConditionInteract

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "GameNoce_structs.hpp"
#include "BP_InteractBase_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_MultipleConditionInteract.BP_MultipleConditionInteract_C
// 0x0070 (0x05F8 - 0x0588)
class ABP_MultipleConditionInteract_C final : public ABP_InteractBase_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_MultipleConditionInteract_C;     // 0x0588(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBoxComponent*                          Box;                                               // 0x0590(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TMap<class FName, struct FProgressCondition>  ConditionByHandler;                                // 0x0598(0x0050)(Edit, BlueprintVisible)
	TArray<class UBP_ConditionHandler_C*>         UsedHandler;                                       // 0x05E8(0x0010)(Edit, BlueprintVisible, Transient, DisableEditOnInstance, ContainsInstancedReference)

public:
	void BndEvt__BP_ConditionInteract_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void BndEvt__BP_ConditionInteract_Box_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	bool CanInteractWithPawnBP(class AActor* InteractorPawn);
	void CheckAllConditionHandlers();
	bool CheckConditionStruct(const struct FProgressCondition& ProgressCondition_0);
	bool ExecuteInstantFeedback(class AActor* InteractPawn);
	void ExecuteUbergraph_BP_MultipleConditionInteract(int32 EntryPoint);
	void GetConditionDebugString(class FString* Result);
	class FString GetDebugTriggerInfo();
	void ReceiveBeginPlay();

public:
	static class UClass* StaticClass()
	{
		BP_STATIC_CLASS_IMPL("BP_MultipleConditionInteract_C")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"BP_MultipleConditionInteract_C")
	}
	static class ABP_MultipleConditionInteract_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_MultipleConditionInteract_C>();
	}
};
DUMPER7_ASSERTS_ABP_MultipleConditionInteract_C;

}

