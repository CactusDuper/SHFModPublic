#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABP_Pl_Hina

#include "Basic.hpp"

#include "ABP_Pl_Hina_classes.hpp"
#include "ABP_Pl_Hina_parameters.hpp"


namespace SDK
{

// Function ABP_Pl_Hina.ABP_Pl_Hina_C.AnimGraph
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FPoseLink*                       AnimGraph_0                                            (Parm, OutParm, NoDestructor)

void UABP_Pl_Hina_C::AnimGraph(struct FPoseLink* AnimGraph_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Pl_Hina_C", "AnimGraph");

	Params::ABP_Pl_Hina_C_AnimGraph Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AnimGraph_0 != nullptr)
		*AnimGraph_0 = std::move(Parms.AnimGraph_0);
}


// Function ABP_Pl_Hina.ABP_Pl_Hina_C.AnimNotify_DodgeToLocoEnd
// (BlueprintCallable, BlueprintEvent)

void UABP_Pl_Hina_C::AnimNotify_DodgeToLocoEnd()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Pl_Hina_C", "AnimNotify_DodgeToLocoEnd");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ABP_Pl_Hina.ABP_Pl_Hina_C.AnimNotify_DodgeToLocoStart
// (BlueprintCallable, BlueprintEvent)

void UABP_Pl_Hina_C::AnimNotify_DodgeToLocoStart()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Pl_Hina_C", "AnimNotify_DodgeToLocoStart");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ABP_Pl_Hina.ABP_Pl_Hina_C.AnimNotify_EnterDaggerComboL
// (BlueprintCallable, BlueprintEvent)

void UABP_Pl_Hina_C::AnimNotify_EnterDaggerComboL()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Pl_Hina_C", "AnimNotify_EnterDaggerComboL");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ABP_Pl_Hina.ABP_Pl_Hina_C.AnimNotify_EnterDead
// (BlueprintCallable, BlueprintEvent)

void UABP_Pl_Hina_C::AnimNotify_EnterDead()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Pl_Hina_C", "AnimNotify_EnterDead");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ABP_Pl_Hina.ABP_Pl_Hina_C.AnimNotify_EnterIdleVar
// (BlueprintCallable, BlueprintEvent)

void UABP_Pl_Hina_C::AnimNotify_EnterIdleVar()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Pl_Hina_C", "AnimNotify_EnterIdleVar");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ABP_Pl_Hina.ABP_Pl_Hina_C.AnimNotify_EnterJogEnd
// (BlueprintCallable, BlueprintEvent)

void UABP_Pl_Hina_C::AnimNotify_EnterJogEnd()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Pl_Hina_C", "AnimNotify_EnterJogEnd");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ABP_Pl_Hina.ABP_Pl_Hina_C.AnimNotify_EnterJogStart
// (BlueprintCallable, BlueprintEvent)

void UABP_Pl_Hina_C::AnimNotify_EnterJogStart()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Pl_Hina_C", "AnimNotify_EnterJogStart");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ABP_Pl_Hina.ABP_Pl_Hina_C.AnimNotify_EnterSprint
// (BlueprintCallable, BlueprintEvent)

void UABP_Pl_Hina_C::AnimNotify_EnterSprint()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Pl_Hina_C", "AnimNotify_EnterSprint");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ABP_Pl_Hina.ABP_Pl_Hina_C.AnimNotify_JogToEnd
// (BlueprintCallable, BlueprintEvent)

void UABP_Pl_Hina_C::AnimNotify_JogToEnd()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Pl_Hina_C", "AnimNotify_JogToEnd");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ABP_Pl_Hina.ABP_Pl_Hina_C.AnimNotify_LeaveDead
// (BlueprintCallable, BlueprintEvent)

void UABP_Pl_Hina_C::AnimNotify_LeaveDead()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Pl_Hina_C", "AnimNotify_LeaveDead");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ABP_Pl_Hina.ABP_Pl_Hina_C.AnimNotify_LeftJogEnd
// (BlueprintCallable, BlueprintEvent)

void UABP_Pl_Hina_C::AnimNotify_LeftJogEnd()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Pl_Hina_C", "AnimNotify_LeftJogEnd");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ABP_Pl_Hina.ABP_Pl_Hina_C.AnimNotify_LeftSprint
// (BlueprintCallable, BlueprintEvent)

void UABP_Pl_Hina_C::AnimNotify_LeftSprint()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Pl_Hina_C", "AnimNotify_LeftSprint");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ABP_Pl_Hina.ABP_Pl_Hina_C.AnimNotify_LocoFullyBlended
// (BlueprintCallable, BlueprintEvent)

void UABP_Pl_Hina_C::AnimNotify_LocoFullyBlended()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Pl_Hina_C", "AnimNotify_LocoFullyBlended");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ABP_Pl_Hina.ABP_Pl_Hina_C.BlendInOutHoldTransform
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FTransform&                InTransform                                            (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FTransform&                OutTransform                                           (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FTransform*                      BlendTransform                                         (Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UABP_Pl_Hina_C::BlendInOutHoldTransform(const struct FTransform& InTransform, const struct FTransform& OutTransform, struct FTransform* BlendTransform)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Pl_Hina_C", "BlendInOutHoldTransform");

	Params::ABP_Pl_Hina_C_BlendInOutHoldTransform Parms{};

	Parms.InTransform = std::move(InTransform);
	Parms.OutTransform = std::move(OutTransform);

	UObject::ProcessEvent(Func, &Parms);

	if (BlendTransform != nullptr)
		*BlendTransform = std::move(Parms.BlendTransform);
}


// Function ABP_Pl_Hina.ABP_Pl_Hina_C.BlueprintBeginPlay
// (Event, Public, BlueprintEvent)

void UABP_Pl_Hina_C::BlueprintBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Pl_Hina_C", "BlueprintBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ABP_Pl_Hina.ABP_Pl_Hina_C.BlueprintUpdateAnimation
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaTimeX                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UABP_Pl_Hina_C::BlueprintUpdateAnimation(float DeltaTimeX)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Pl_Hina_C", "BlueprintUpdateAnimation");

	Params::ABP_Pl_Hina_C_BlueprintUpdateAnimation Parms{};

	Parms.DeltaTimeX = DeltaTimeX;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ABP_Pl_Hina.ABP_Pl_Hina_C.BP_GetSlopeBlendRatio
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

float UABP_Pl_Hina_C::BP_GetSlopeBlendRatio()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Pl_Hina_C", "BP_GetSlopeBlendRatio");

	Params::ABP_Pl_Hina_C_BP_GetSlopeBlendRatio Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function ABP_Pl_Hina.ABP_Pl_Hina_C.BPI_DebugIdleVarInt
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   DebugIdleVarInt_0                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UABP_Pl_Hina_C::BPI_DebugIdleVarInt(int32 DebugIdleVarInt_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Pl_Hina_C", "BPI_DebugIdleVarInt");

	Params::ABP_Pl_Hina_C_BPI_DebugIdleVarInt Parms{};

	Parms.DebugIdleVarInt_0 = DebugIdleVarInt_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ABP_Pl_Hina.ABP_Pl_Hina_C.BPI_PlayerAnim_GetInCutscene
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                                   InCutscene_0                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UABP_Pl_Hina_C::BPI_PlayerAnim_GetInCutscene(bool* InCutscene_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Pl_Hina_C", "BPI_PlayerAnim_GetInCutscene");

	Params::ABP_Pl_Hina_C_BPI_PlayerAnim_GetInCutscene Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (InCutscene_0 != nullptr)
		*InCutscene_0 = Parms.InCutscene_0;
}


// Function ABP_Pl_Hina.ABP_Pl_Hina_C.BPI_PlayerAnim_SetCanEnterJogEnd
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NewValue                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UABP_Pl_Hina_C::BPI_PlayerAnim_SetCanEnterJogEnd(bool NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Pl_Hina_C", "BPI_PlayerAnim_SetCanEnterJogEnd");

	Params::ABP_Pl_Hina_C_BPI_PlayerAnim_SetCanEnterJogEnd Parms{};

	Parms.NewValue = NewValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ABP_Pl_Hina.ABP_Pl_Hina_C.BPI_PlayerAnim_SetCanLeaveJogEnd
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NewParam                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UABP_Pl_Hina_C::BPI_PlayerAnim_SetCanLeaveJogEnd(bool NewParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Pl_Hina_C", "BPI_PlayerAnim_SetCanLeaveJogEnd");

	Params::ABP_Pl_Hina_C_BPI_PlayerAnim_SetCanLeaveJogEnd Parms{};

	Parms.NewParam = NewParam;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ABP_Pl_Hina.ABP_Pl_Hina_C.BPI_PlayerAnim_SetCutsceneBlending
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Blending                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UABP_Pl_Hina_C::BPI_PlayerAnim_SetCutsceneBlending(double Blending)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Pl_Hina_C", "BPI_PlayerAnim_SetCutsceneBlending");

	Params::ABP_Pl_Hina_C_BPI_PlayerAnim_SetCutsceneBlending Parms{};

	Parms.Blending = Blending;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ABP_Pl_Hina.ABP_Pl_Hina_C.BPI_PlayerAnim_SetDefaultSlotBlending
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Blending                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UABP_Pl_Hina_C::BPI_PlayerAnim_SetDefaultSlotBlending(double Blending)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Pl_Hina_C", "BPI_PlayerAnim_SetDefaultSlotBlending");

	Params::ABP_Pl_Hina_C_BPI_PlayerAnim_SetDefaultSlotBlending Parms{};

	Parms.Blending = Blending;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ABP_Pl_Hina.ABP_Pl_Hina_C.BPI_PlayerAnim_SetInCutscene
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NewValue                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UABP_Pl_Hina_C::BPI_PlayerAnim_SetInCutscene(bool NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Pl_Hina_C", "BPI_PlayerAnim_SetInCutscene");

	Params::ABP_Pl_Hina_C_BPI_PlayerAnim_SetInCutscene Parms{};

	Parms.NewValue = NewValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ABP_Pl_Hina.ABP_Pl_Hina_C.BPI_PlayerAnim_SetInSeamless
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NewValue                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UABP_Pl_Hina_C::BPI_PlayerAnim_SetInSeamless(bool NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Pl_Hina_C", "BPI_PlayerAnim_SetInSeamless");

	Params::ABP_Pl_Hina_C_BPI_PlayerAnim_SetInSeamless Parms{};

	Parms.NewValue = NewValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ABP_Pl_Hina.ABP_Pl_Hina_C.BPI_PlayerAnim_UpdateSlopeAngle
// (Public, BlueprintCallable, BlueprintEvent)

void UABP_Pl_Hina_C::BPI_PlayerAnim_UpdateSlopeAngle()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Pl_Hina_C", "BPI_PlayerAnim_UpdateSlopeAngle");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ABP_Pl_Hina.ABP_Pl_Hina_C.BPI_SetLadderHeadLayer
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    UseLadderHeadLayer_0                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UABP_Pl_Hina_C::BPI_SetLadderHeadLayer(bool UseLadderHeadLayer_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Pl_Hina_C", "BPI_SetLadderHeadLayer");

	Params::ABP_Pl_Hina_C_BPI_SetLadderHeadLayer Parms{};

	Parms.UseLadderHeadLayer_0 = UseLadderHeadLayer_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ABP_Pl_Hina.ABP_Pl_Hina_C.Calculate to Wall Distance V2
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             WeaponBoneName                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  DetectAngle                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  DetectDistance                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ShowDebug                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  DeltaTime                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    UseLeftHandIK_0                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FTransform&                DetectOffset                                           (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UCurveFloat*                      DistanceAlphaCurve                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// double                                  DetectHeight                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             DetectBoneName                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double*                                 TargetAlpha                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UABP_Pl_Hina_C::Calculate_to_Wall_Distance_V2(class FName WeaponBoneName, double DetectAngle, double DetectDistance, bool ShowDebug, double DeltaTime, bool UseLeftHandIK_0, const struct FTransform& DetectOffset, class UCurveFloat* DistanceAlphaCurve, double DetectHeight, class FName DetectBoneName, double* TargetAlpha)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Pl_Hina_C", "Calculate to Wall Distance V2");

	Params::ABP_Pl_Hina_C_Calculate_to_Wall_Distance_V2 Parms{};

	Parms.WeaponBoneName = WeaponBoneName;
	Parms.DetectAngle = DetectAngle;
	Parms.DetectDistance = DetectDistance;
	Parms.ShowDebug = ShowDebug;
	Parms.DeltaTime = DeltaTime;
	Parms.UseLeftHandIK_0 = UseLeftHandIK_0;
	Parms.DetectOffset = std::move(DetectOffset);
	Parms.DistanceAlphaCurve = DistanceAlphaCurve;
	Parms.DetectHeight = DetectHeight;
	Parms.DetectBoneName = DetectBoneName;

	UObject::ProcessEvent(Func, &Parms);

	if (TargetAlpha != nullptr)
		*TargetAlpha = Parms.TargetAlpha;
}


// Function ABP_Pl_Hina.ABP_Pl_Hina_C.CalculateSlopeAdjustmentRatio
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  CurrentSlopeAngle_0                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Force                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UABP_Pl_Hina_C::CalculateSlopeAdjustmentRatio(double CurrentSlopeAngle_0, bool Force)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Pl_Hina_C", "CalculateSlopeAdjustmentRatio");

	Params::ABP_Pl_Hina_C_CalculateSlopeAdjustmentRatio Parms{};

	Parms.CurrentSlopeAngle_0 = CurrentSlopeAngle_0;
	Parms.Force = Force;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ABP_Pl_Hina.ABP_Pl_Hina_C.CalculateToWallDistance
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             WeaponBoneName                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  DetectAngle                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  DetectDistance                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ShowDebug                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double*                                 TargetAlpha                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UABP_Pl_Hina_C::CalculateToWallDistance(class FName WeaponBoneName, double DetectAngle, double DetectDistance, bool ShowDebug, double* TargetAlpha)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Pl_Hina_C", "CalculateToWallDistance");

	Params::ABP_Pl_Hina_C_CalculateToWallDistance Parms{};

	Parms.WeaponBoneName = WeaponBoneName;
	Parms.DetectAngle = DetectAngle;
	Parms.DetectDistance = DetectDistance;
	Parms.ShowDebug = ShowDebug;

	UObject::ProcessEvent(Func, &Parms);

	if (TargetAlpha != nullptr)
		*TargetAlpha = Parms.TargetAlpha;
}


// Function ABP_Pl_Hina.ABP_Pl_Hina_C.CheckBackToIdle
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool*                                   ReturnBool                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UABP_Pl_Hina_C::CheckBackToIdle(bool* ReturnBool)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Pl_Hina_C", "CheckBackToIdle");

	Params::ABP_Pl_Hina_C_CheckBackToIdle Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (ReturnBool != nullptr)
		*ReturnBool = Parms.ReturnBool;
}


// Function ABP_Pl_Hina.ABP_Pl_Hina_C.CheckOnSlope
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  InDeltaSeconds                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UABP_Pl_Hina_C::CheckOnSlope(double InDeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Pl_Hina_C", "CheckOnSlope");

	Params::ABP_Pl_Hina_C_CheckOnSlope Parms{};

	Parms.InDeltaSeconds = InDeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ABP_Pl_Hina.ABP_Pl_Hina_C.ExecuteUbergraph_ABP_Pl_Hina
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UABP_Pl_Hina_C::ExecuteUbergraph_ABP_Pl_Hina(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Pl_Hina_C", "ExecuteUbergraph_ABP_Pl_Hina");

	Params::ABP_Pl_Hina_C_ExecuteUbergraph_ABP_Pl_Hina Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ABP_Pl_Hina.ABP_Pl_Hina_C.GetFacingSide
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FVector&                   FacingDirection                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   ReferencePoint                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   WallHitLocation                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   WallHitNormal                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double*                                 RightRatio                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UABP_Pl_Hina_C::GetFacingSide(const struct FVector& FacingDirection, const struct FVector& ReferencePoint, const struct FVector& WallHitLocation, const struct FVector& WallHitNormal, double* RightRatio)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Pl_Hina_C", "GetFacingSide");

	Params::ABP_Pl_Hina_C_GetFacingSide Parms{};

	Parms.FacingDirection = std::move(FacingDirection);
	Parms.ReferencePoint = std::move(ReferencePoint);
	Parms.WallHitLocation = std::move(WallHitLocation);
	Parms.WallHitNormal = std::move(WallHitNormal);

	UObject::ProcessEvent(Func, &Parms);

	if (RightRatio != nullptr)
		*RightRatio = Parms.RightRatio;
}


// Function ABP_Pl_Hina.ABP_Pl_Hina_C.GetOnSlope
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                                   IsOnSlope_0                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UABP_Pl_Hina_C::GetOnSlope(bool* IsOnSlope_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Pl_Hina_C", "GetOnSlope");

	Params::ABP_Pl_Hina_C_GetOnSlope Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsOnSlope_0 != nullptr)
		*IsOnSlope_0 = Parms.IsOnSlope_0;
}


// Function ABP_Pl_Hina.ABP_Pl_Hina_C.HandleBlendSlopeRatio
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  InDeltaSeconds                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UABP_Pl_Hina_C::HandleBlendSlopeRatio(double InDeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Pl_Hina_C", "HandleBlendSlopeRatio");

	Params::ABP_Pl_Hina_C_HandleBlendSlopeRatio Parms{};

	Parms.InDeltaSeconds = InDeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ABP_Pl_Hina.ABP_Pl_Hina_C.HandleIKInterpolateSpeed
// (Public, BlueprintCallable, BlueprintEvent)

void UABP_Pl_Hina_C::HandleIKInterpolateSpeed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Pl_Hina_C", "HandleIKInterpolateSpeed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ABP_Pl_Hina.ABP_Pl_Hina_C.HandleIsOnSlopeChange
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    InNewIsOnSlope                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UABP_Pl_Hina_C::HandleIsOnSlopeChange(bool InNewIsOnSlope)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Pl_Hina_C", "HandleIsOnSlopeChange");

	Params::ABP_Pl_Hina_C_HandleIsOnSlopeChange Parms{};

	Parms.InNewIsOnSlope = InNewIsOnSlope;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ABP_Pl_Hina.ABP_Pl_Hina_C.LineTraceGroundDistance
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             InSocketName                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool*                                   bBlockingHit                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double*                                 Distance                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector*                         Normal                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UABP_Pl_Hina_C::LineTraceGroundDistance(class FName InSocketName, bool* bBlockingHit, double* Distance, struct FVector* Normal)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Pl_Hina_C", "LineTraceGroundDistance");

	Params::ABP_Pl_Hina_C_LineTraceGroundDistance Parms{};

	Parms.InSocketName = InSocketName;

	UObject::ProcessEvent(Func, &Parms);

	if (bBlockingHit != nullptr)
		*bBlockingHit = Parms.bBlockingHit;

	if (Distance != nullptr)
		*Distance = Parms.Distance;

	if (Normal != nullptr)
		*Normal = std::move(Parms.Normal);
}


// Function ABP_Pl_Hina.ABP_Pl_Hina_C.On Update Left Hand IKTransform
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UABP_Pl_Hina_C::On_Update_Left_Hand_IKTransform()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Pl_Hina_C", "On Update Left Hand IKTransform");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ABP_Pl_Hina.ABP_Pl_Hina_C.OnAnimIDChanged
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   NewAnimID                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UABP_Pl_Hina_C::OnAnimIDChanged(int32 NewAnimID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Pl_Hina_C", "OnAnimIDChanged");

	Params::ABP_Pl_Hina_C_OnAnimIDChanged Parms{};

	Parms.NewAnimID = NewAnimID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ABP_Pl_Hina.ABP_Pl_Hina_C.OnDisableArmCorrector
// (BlueprintCallable, BlueprintEvent)

void UABP_Pl_Hina_C::OnDisableArmCorrector()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Pl_Hina_C", "OnDisableArmCorrector");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ABP_Pl_Hina.ABP_Pl_Hina_C.OnEnableArmCorrector
// (BlueprintCallable, BlueprintEvent)

void UABP_Pl_Hina_C::OnEnableArmCorrector()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Pl_Hina_C", "OnEnableArmCorrector");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ABP_Pl_Hina.ABP_Pl_Hina_C.OnLinkStateUpdate
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FAnimUpdateContext&        Context                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// const struct FAnimNodeReference&        Node                                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)

void UABP_Pl_Hina_C::OnLinkStateUpdate(const struct FAnimUpdateContext& Context, const struct FAnimNodeReference& Node)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Pl_Hina_C", "OnLinkStateUpdate");

	Params::ABP_Pl_Hina_C_OnLinkStateUpdate Parms{};

	Parms.Context = std::move(Context);
	Parms.Node = std::move(Node);

	UObject::ProcessEvent(Func, &Parms);
}


// Function ABP_Pl_Hina.ABP_Pl_Hina_C.OnStateEntry_JogEnd
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FAnimUpdateContext&        Context                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// const struct FAnimNodeReference&        Node                                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)

void UABP_Pl_Hina_C::OnStateEntry_JogEnd(const struct FAnimUpdateContext& Context, const struct FAnimNodeReference& Node)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Pl_Hina_C", "OnStateEntry_JogEnd");

	Params::ABP_Pl_Hina_C_OnStateEntry_JogEnd Parms{};

	Parms.Context = std::move(Context);
	Parms.Node = std::move(Node);

	UObject::ProcessEvent(Func, &Parms);
}


// Function ABP_Pl_Hina.ABP_Pl_Hina_C.OnStateEntry_JogStart
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FAnimUpdateContext&        Context                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// const struct FAnimNodeReference&        Node                                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)

void UABP_Pl_Hina_C::OnStateEntry_JogStart(const struct FAnimUpdateContext& Context, const struct FAnimNodeReference& Node)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Pl_Hina_C", "OnStateEntry_JogStart");

	Params::ABP_Pl_Hina_C_OnStateEntry_JogStart Parms{};

	Parms.Context = std::move(Context);
	Parms.Node = std::move(Node);

	UObject::ProcessEvent(Func, &Parms);
}


// Function ABP_Pl_Hina.ABP_Pl_Hina_C.OnStateEntry_JogTiredEnd
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FAnimUpdateContext&        Context                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// const struct FAnimNodeReference&        Node                                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)

void UABP_Pl_Hina_C::OnStateEntry_JogTiredEnd(const struct FAnimUpdateContext& Context, const struct FAnimNodeReference& Node)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Pl_Hina_C", "OnStateEntry_JogTiredEnd");

	Params::ABP_Pl_Hina_C_OnStateEntry_JogTiredEnd Parms{};

	Parms.Context = std::move(Context);
	Parms.Node = std::move(Node);

	UObject::ProcessEvent(Func, &Parms);
}


// Function ABP_Pl_Hina.ABP_Pl_Hina_C.OnStateEntry_SMDodge
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FAnimUpdateContext&        Context                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// const struct FAnimNodeReference&        Node                                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)

void UABP_Pl_Hina_C::OnStateEntry_SMDodge(const struct FAnimUpdateContext& Context, const struct FAnimNodeReference& Node)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Pl_Hina_C", "OnStateEntry_SMDodge");

	Params::ABP_Pl_Hina_C_OnStateEntry_SMDodge Parms{};

	Parms.Context = std::move(Context);
	Parms.Node = std::move(Node);

	UObject::ProcessEvent(Func, &Parms);
}


// Function ABP_Pl_Hina.ABP_Pl_Hina_C.OnStateEntry_SMRespawn
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FAnimUpdateContext&        Context                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// const struct FAnimNodeReference&        Node                                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)

void UABP_Pl_Hina_C::OnStateEntry_SMRespawn(const struct FAnimUpdateContext& Context, const struct FAnimNodeReference& Node)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Pl_Hina_C", "OnStateEntry_SMRespawn");

	Params::ABP_Pl_Hina_C_OnStateEntry_SMRespawn Parms{};

	Parms.Context = std::move(Context);
	Parms.Node = std::move(Node);

	UObject::ProcessEvent(Func, &Parms);
}


// Function ABP_Pl_Hina.ABP_Pl_Hina_C.OnStateUpdate_JogEnd
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FAnimUpdateContext&        Context                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// const struct FAnimNodeReference&        Node                                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)

void UABP_Pl_Hina_C::OnStateUpdate_JogEnd(const struct FAnimUpdateContext& Context, const struct FAnimNodeReference& Node)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Pl_Hina_C", "OnStateUpdate_JogEnd");

	Params::ABP_Pl_Hina_C_OnStateUpdate_JogEnd Parms{};

	Parms.Context = std::move(Context);
	Parms.Node = std::move(Node);

	UObject::ProcessEvent(Func, &Parms);
}


// Function ABP_Pl_Hina.ABP_Pl_Hina_C.OnStateUpdate_JogStart
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FAnimUpdateContext&        Context                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// const struct FAnimNodeReference&        Node                                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)

void UABP_Pl_Hina_C::OnStateUpdate_JogStart(const struct FAnimUpdateContext& Context, const struct FAnimNodeReference& Node)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Pl_Hina_C", "OnStateUpdate_JogStart");

	Params::ABP_Pl_Hina_C_OnStateUpdate_JogStart Parms{};

	Parms.Context = std::move(Context);
	Parms.Node = std::move(Node);

	UObject::ProcessEvent(Func, &Parms);
}


// Function ABP_Pl_Hina.ABP_Pl_Hina_C.OnStateUpdate_JogTiredEnd
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FAnimUpdateContext&        Context                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// const struct FAnimNodeReference&        Node                                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)

void UABP_Pl_Hina_C::OnStateUpdate_JogTiredEnd(const struct FAnimUpdateContext& Context, const struct FAnimNodeReference& Node)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Pl_Hina_C", "OnStateUpdate_JogTiredEnd");

	Params::ABP_Pl_Hina_C_OnStateUpdate_JogTiredEnd Parms{};

	Parms.Context = std::move(Context);
	Parms.Node = std::move(Node);

	UObject::ProcessEvent(Func, &Parms);
}


// Function ABP_Pl_Hina.ABP_Pl_Hina_C.OnStateUpdate_SMDodge
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FAnimUpdateContext&        Context                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// const struct FAnimNodeReference&        Node                                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)

void UABP_Pl_Hina_C::OnStateUpdate_SMDodge(const struct FAnimUpdateContext& Context, const struct FAnimNodeReference& Node)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Pl_Hina_C", "OnStateUpdate_SMDodge");

	Params::ABP_Pl_Hina_C_OnStateUpdate_SMDodge Parms{};

	Parms.Context = std::move(Context);
	Parms.Node = std::move(Node);

	UObject::ProcessEvent(Func, &Parms);
}


// Function ABP_Pl_Hina.ABP_Pl_Hina_C.OnStateUpdate_SMRespawn
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FAnimUpdateContext&        Context                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// const struct FAnimNodeReference&        Node                                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)

void UABP_Pl_Hina_C::OnStateUpdate_SMRespawn(const struct FAnimUpdateContext& Context, const struct FAnimNodeReference& Node)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Pl_Hina_C", "OnStateUpdate_SMRespawn");

	Params::ABP_Pl_Hina_C_OnStateUpdate_SMRespawn Parms{};

	Parms.Context = std::move(Context);
	Parms.Node = std::move(Node);

	UObject::ProcessEvent(Func, &Parms);
}


// Function ABP_Pl_Hina.ABP_Pl_Hina_C.ReplaceSetScarfRigidBodyAlpha
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   InValue                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UABP_Pl_Hina_C::ReplaceSetScarfRigidBodyAlpha(float InValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Pl_Hina_C", "ReplaceSetScarfRigidBodyAlpha");

	Params::ABP_Pl_Hina_C_ReplaceSetScarfRigidBodyAlpha Parms{};

	Parms.InValue = InValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ABP_Pl_Hina.ABP_Pl_Hina_C.ReplaceSetShawlKawaiiAlpha
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   InValue                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UABP_Pl_Hina_C::ReplaceSetShawlKawaiiAlpha(float InValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Pl_Hina_C", "ReplaceSetShawlKawaiiAlpha");

	Params::ABP_Pl_Hina_C_ReplaceSetShawlKawaiiAlpha Parms{};

	Parms.InValue = InValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ABP_Pl_Hina.ABP_Pl_Hina_C.ReplaceSetSkirtRigidBodyAlpha
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   InValue                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UABP_Pl_Hina_C::ReplaceSetSkirtRigidBodyAlpha(float InValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Pl_Hina_C", "ReplaceSetSkirtRigidBodyAlpha");

	Params::ABP_Pl_Hina_C_ReplaceSetSkirtRigidBodyAlpha Parms{};

	Parms.InValue = InValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ABP_Pl_Hina.ABP_Pl_Hina_C.SetCanEnterIdleVar
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    CanEnterIdleVar_0                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   IdleVarInt_0                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UABP_Pl_Hina_C::SetCanEnterIdleVar(bool CanEnterIdleVar_0, int32 IdleVarInt_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Pl_Hina_C", "SetCanEnterIdleVar");

	Params::ABP_Pl_Hina_C_SetCanEnterIdleVar Parms{};

	Parms.CanEnterIdleVar_0 = CanEnterIdleVar_0;
	Parms.IdleVarInt_0 = IdleVarInt_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ABP_Pl_Hina.ABP_Pl_Hina_C.SetDefaultSlotInterp 
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Interp                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UABP_Pl_Hina_C::SetDefaultSlotInterp_(double Interp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Pl_Hina_C", "SetDefaultSlotInterp ");

	Params::ABP_Pl_Hina_C_SetDefaultSlotInterp_ Parms{};

	Parms.Interp = Interp;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ABP_Pl_Hina.ABP_Pl_Hina_C.SetScarfBottomPhysAlpha
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  InValue                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UABP_Pl_Hina_C::SetScarfBottomPhysAlpha(double InValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Pl_Hina_C", "SetScarfBottomPhysAlpha");

	Params::ABP_Pl_Hina_C_SetScarfBottomPhysAlpha Parms{};

	Parms.InValue = InValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ABP_Pl_Hina.ABP_Pl_Hina_C.SetShawlBottomPhysAlpha
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  InValue                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UABP_Pl_Hina_C::SetShawlBottomPhysAlpha(double InValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Pl_Hina_C", "SetShawlBottomPhysAlpha");

	Params::ABP_Pl_Hina_C_SetShawlBottomPhysAlpha Parms{};

	Parms.InValue = InValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ABP_Pl_Hina.ABP_Pl_Hina_C.SetSkirtBottomPhysAlpha
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  InValue                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UABP_Pl_Hina_C::SetSkirtBottomPhysAlpha(double InValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Pl_Hina_C", "SetSkirtBottomPhysAlpha");

	Params::ABP_Pl_Hina_C_SetSkirtBottomPhysAlpha Parms{};

	Parms.InValue = InValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ABP_Pl_Hina.ABP_Pl_Hina_C.SimpleDrawLine
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FVector&                   Direction                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   StartPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Length                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Thickness                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FLinearColor&              LineColor                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UABP_Pl_Hina_C::SimpleDrawLine(const struct FVector& Direction, const struct FVector& StartPoint, double Length, double Thickness, const struct FLinearColor& LineColor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Pl_Hina_C", "SimpleDrawLine");

	Params::ABP_Pl_Hina_C_SimpleDrawLine Parms{};

	Parms.Direction = std::move(Direction);
	Parms.StartPoint = std::move(StartPoint);
	Parms.Length = Length;
	Parms.Thickness = Thickness;
	Parms.LineColor = std::move(LineColor);

	UObject::ProcessEvent(Func, &Parms);
}


// Function ABP_Pl_Hina.ABP_Pl_Hina_C.Update Arm Corrector
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  DeltaTime                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UABP_Pl_Hina_C::Update_Arm_Corrector(double DeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Pl_Hina_C", "Update Arm Corrector");

	Params::ABP_Pl_Hina_C_Update_Arm_Corrector Parms{};

	Parms.DeltaTime = DeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ABP_Pl_Hina.ABP_Pl_Hina_C.Update Can Apply Slope Upper Body Adjustment
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UABP_Pl_Hina_C::Update_Can_Apply_Slope_Upper_Body_Adjustment()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Pl_Hina_C", "Update Can Apply Slope Upper Body Adjustment");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ABP_Pl_Hina.ABP_Pl_Hina_C.UpdateConditionAnimGraph
// (Public, BlueprintCallable, BlueprintEvent)

void UABP_Pl_Hina_C::UpdateConditionAnimGraph()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Pl_Hina_C", "UpdateConditionAnimGraph");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ABP_Pl_Hina.ABP_Pl_Hina_C.UpdateConditionAnimGraph2
// (Public, BlueprintCallable, BlueprintEvent)

void UABP_Pl_Hina_C::UpdateConditionAnimGraph2()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Pl_Hina_C", "UpdateConditionAnimGraph2");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ABP_Pl_Hina.ABP_Pl_Hina_C.UpdateInputAngle
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  InDeltaTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UABP_Pl_Hina_C::UpdateInputAngle(double InDeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Pl_Hina_C", "UpdateInputAngle");

	Params::ABP_Pl_Hina_C_UpdateInputAngle Parms{};

	Parms.InDeltaTime = InDeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ABP_Pl_Hina.ABP_Pl_Hina_C.UpdateJogAngle
// (Public, BlueprintCallable, BlueprintEvent)

void UABP_Pl_Hina_C::UpdateJogAngle()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Pl_Hina_C", "UpdateJogAngle");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ABP_Pl_Hina.ABP_Pl_Hina_C.UpdateLeaveEvent
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  InDeltaSeconds                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UABP_Pl_Hina_C::UpdateLeaveEvent(double InDeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Pl_Hina_C", "UpdateLeaveEvent");

	Params::ABP_Pl_Hina_C_UpdateLeaveEvent Parms{};

	Parms.InDeltaSeconds = InDeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ABP_Pl_Hina.ABP_Pl_Hina_C.UpdateLeftHandIK
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  DeltaTime                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UABP_Pl_Hina_C::UpdateLeftHandIK(double DeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Pl_Hina_C", "UpdateLeftHandIK");

	Params::ABP_Pl_Hina_C_UpdateLeftHandIK Parms{};

	Parms.DeltaTime = DeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ABP_Pl_Hina.ABP_Pl_Hina_C.UpdateReturnToIdle 
// (Protected, BlueprintCallable, BlueprintEvent)

void UABP_Pl_Hina_C::UpdateReturnToIdle_()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Pl_Hina_C", "UpdateReturnToIdle ");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ABP_Pl_Hina.ABP_Pl_Hina_C.UpdateStopFoot
// (Public, BlueprintCallable, BlueprintEvent)

void UABP_Pl_Hina_C::UpdateStopFoot()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Pl_Hina_C", "UpdateStopFoot");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ABP_Pl_Hina.ABP_Pl_Hina_C.UpdateUseFingerLayer
// (Protected, BlueprintCallable, BlueprintEvent)

void UABP_Pl_Hina_C::UpdateUseFingerLayer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Pl_Hina_C", "UpdateUseFingerLayer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ABP_Pl_Hina.ABP_Pl_Hina_C.UpdateVariableAnimGraph
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UABP_Pl_Hina_C::UpdateVariableAnimGraph()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Pl_Hina_C", "UpdateVariableAnimGraph");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ABP_Pl_Hina.ABP_Pl_Hina_C.GetScarfBottomPhysAlpha
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// double*                                 Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UABP_Pl_Hina_C::GetScarfBottomPhysAlpha(double* Result) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Pl_Hina_C", "GetScarfBottomPhysAlpha");

	Params::ABP_Pl_Hina_C_GetScarfBottomPhysAlpha Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function ABP_Pl_Hina.ABP_Pl_Hina_C.GetSeamlessToIdle
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// const bool                              ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

const bool UABP_Pl_Hina_C::GetSeamlessToIdle() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Pl_Hina_C", "GetSeamlessToIdle");

	Params::ABP_Pl_Hina_C_GetSeamlessToIdle Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function ABP_Pl_Hina.ABP_Pl_Hina_C.GetShawlBottomPhysAlpha
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// double*                                 Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UABP_Pl_Hina_C::GetShawlBottomPhysAlpha(double* Result) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Pl_Hina_C", "GetShawlBottomPhysAlpha");

	Params::ABP_Pl_Hina_C_GetShawlBottomPhysAlpha Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function ABP_Pl_Hina.ABP_Pl_Hina_C.GetSkirtBottomPhysAlpha
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// double*                                 Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UABP_Pl_Hina_C::GetSkirtBottomPhysAlpha(double* Result) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Pl_Hina_C", "GetSkirtBottomPhysAlpha");

	Params::ABP_Pl_Hina_C_GetSkirtBottomPhysAlpha Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function ABP_Pl_Hina.ABP_Pl_Hina_C.ReplaceGetScarfRigidBodyAlpha
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

float UABP_Pl_Hina_C::ReplaceGetScarfRigidBodyAlpha() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Pl_Hina_C", "ReplaceGetScarfRigidBodyAlpha");

	Params::ABP_Pl_Hina_C_ReplaceGetScarfRigidBodyAlpha Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function ABP_Pl_Hina.ABP_Pl_Hina_C.ReplaceGetShawlKawaiiAlpha
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

float UABP_Pl_Hina_C::ReplaceGetShawlKawaiiAlpha() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Pl_Hina_C", "ReplaceGetShawlKawaiiAlpha");

	Params::ABP_Pl_Hina_C_ReplaceGetShawlKawaiiAlpha Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function ABP_Pl_Hina.ABP_Pl_Hina_C.ReplaceGetSkirtRigidBodyAlpha
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

float UABP_Pl_Hina_C::ReplaceGetSkirtRigidBodyAlpha() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Pl_Hina_C", "ReplaceGetSkirtRigidBodyAlpha");

	Params::ABP_Pl_Hina_C_ReplaceGetSkirtRigidBodyAlpha Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

