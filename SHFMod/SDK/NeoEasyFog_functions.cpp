#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: NeoEasyFog

#include "Basic.hpp"

#include "NeoEasyFog_classes.hpp"
#include "NeoEasyFog_parameters.hpp"


namespace SDK
{

// Function NeoEasyFog.NeoEasyFogActor.Init
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// bool                                    bRecreatMat                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ANeoEasyFogActor::Init(bool bRecreatMat)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NeoEasyFogActor", "Init");

	Params::NeoEasyFogActor_Init Parms{};

	Parms.bRecreatMat = bRecreatMat;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function NeoEasyFog.NeoEasyFogActor.SetBaseColorContrast
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// float                                   bValue                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ANeoEasyFogActor::SetBaseColorContrast(float bValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NeoEasyFogActor", "SetBaseColorContrast");

	Params::NeoEasyFogActor_SetBaseColorContrast Parms{};

	Parms.bValue = bValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function NeoEasyFog.NeoEasyFogActor.SetBaseColorIntensity
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// float                                   bValue                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ANeoEasyFogActor::SetBaseColorIntensity(float bValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NeoEasyFogActor", "SetBaseColorIntensity");

	Params::NeoEasyFogActor_SetBaseColorIntensity Parms{};

	Parms.bValue = bValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function NeoEasyFog.NeoEasyFogActor.SetBaseColorTint
// (Final, Native, Protected, HasDefaults, BlueprintCallable)
// Parameters:
// const struct FLinearColor&              bValue                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ANeoEasyFogActor::SetBaseColorTint(const struct FLinearColor& bValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NeoEasyFogActor", "SetBaseColorTint");

	Params::NeoEasyFogActor_SetBaseColorTint Parms{};

	Parms.bValue = std::move(bValue);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function NeoEasyFog.NeoEasyFogActor.SetCameraFadingDistance
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// float                                   bValue                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ANeoEasyFogActor::SetCameraFadingDistance(float bValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NeoEasyFogActor", "SetCameraFadingDistance");

	Params::NeoEasyFogActor_SetCameraFadingDistance Parms{};

	Parms.bValue = bValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function NeoEasyFog.NeoEasyFogActor.SetCastShadow
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// bool                                    bValue                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ANeoEasyFogActor::SetCastShadow(bool bValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NeoEasyFogActor", "SetCastShadow");

	Params::NeoEasyFogActor_SetCastShadow Parms{};

	Parms.bValue = bValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function NeoEasyFog.NeoEasyFogActor.SetEmissiveIntensity
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// float                                   bValue                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ANeoEasyFogActor::SetEmissiveIntensity(float bValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NeoEasyFogActor", "SetEmissiveIntensity");

	Params::NeoEasyFogActor_SetEmissiveIntensity Parms{};

	Parms.bValue = bValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function NeoEasyFog.NeoEasyFogActor.SetEyeAdaptionSwitch
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// bool                                    bValue                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ANeoEasyFogActor::SetEyeAdaptionSwitch(bool bValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NeoEasyFogActor", "SetEyeAdaptionSwitch");

	Params::NeoEasyFogActor_SetEyeAdaptionSwitch Parms{};

	Parms.bValue = bValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function NeoEasyFog.NeoEasyFogActor.SetFogDensity
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// float                                   bValue                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ANeoEasyFogActor::SetFogDensity(float bValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NeoEasyFogActor", "SetFogDensity");

	Params::NeoEasyFogActor_SetFogDensity Parms{};

	Parms.bValue = bValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function NeoEasyFog.NeoEasyFogActor.SetGeometryFadingDistance
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// float                                   bValue                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ANeoEasyFogActor::SetGeometryFadingDistance(float bValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NeoEasyFogActor", "SetGeometryFadingDistance");

	Params::NeoEasyFogActor_SetGeometryFadingDistance Parms{};

	Parms.bValue = bValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function NeoEasyFog.NeoEasyFogActor.SetNormalMapIntensity
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// float                                   bValue                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ANeoEasyFogActor::SetNormalMapIntensity(float bValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NeoEasyFogActor", "SetNormalMapIntensity");

	Params::NeoEasyFogActor_SetNormalMapIntensity Parms{};

	Parms.bValue = bValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function NeoEasyFog.NeoEasyFogActor.SetPathtracerToggle
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// bool                                    bValue                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ANeoEasyFogActor::SetPathtracerToggle(bool bValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NeoEasyFogActor", "SetPathtracerToggle");

	Params::NeoEasyFogActor_SetPathtracerToggle Parms{};

	Parms.bValue = bValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function NeoEasyFog.NeoEasyFogActor.SetViewAngleFade
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// float                                   bValue                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ANeoEasyFogActor::SetViewAngleFade(float bValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NeoEasyFogActor", "SetViewAngleFade");

	Params::NeoEasyFogActor_SetViewAngleFade Parms{};

	Parms.bValue = bValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function NeoEasyFog.NeoEasyFogActor.SetWindIntensity
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// float                                   bValue                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ANeoEasyFogActor::SetWindIntensity(float bValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NeoEasyFogActor", "SetWindIntensity");

	Params::NeoEasyFogActor_SetWindIntensity Parms{};

	Parms.bValue = bValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function NeoEasyFog.NeoEasyFogActor.SetWindNoiseContrast
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// float                                   bValue                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ANeoEasyFogActor::SetWindNoiseContrast(float bValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NeoEasyFogActor", "SetWindNoiseContrast");

	Params::NeoEasyFogActor_SetWindNoiseContrast Parms{};

	Parms.bValue = bValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function NeoEasyFog.NeoEasyFogActor.SetWindNoiseTiling
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// float                                   bValue                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ANeoEasyFogActor::SetWindNoiseTiling(float bValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NeoEasyFogActor", "SetWindNoiseTiling");

	Params::NeoEasyFogActor_SetWindNoiseTiling Parms{};

	Parms.bValue = bValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function NeoEasyFog.NeoEasyFogActor.SetWindSpeedX
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// float                                   bValue                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ANeoEasyFogActor::SetWindSpeedX(float bValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NeoEasyFogActor", "SetWindSpeedX");

	Params::NeoEasyFogActor_SetWindSpeedX Parms{};

	Parms.bValue = bValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function NeoEasyFog.NeoEasyFogActor.SetWindSpeedY
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// float                                   bValue                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ANeoEasyFogActor::SetWindSpeedY(float bValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NeoEasyFogActor", "SetWindSpeedY");

	Params::NeoEasyFogActor_SetWindSpeedY Parms{};

	Parms.bValue = bValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function NeoEasyFog.NeoEasyFogActor.GetBaseColorContrast
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float ANeoEasyFogActor::GetBaseColorContrast() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NeoEasyFogActor", "GetBaseColorContrast");

	Params::NeoEasyFogActor_GetBaseColorContrast Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function NeoEasyFog.NeoEasyFogActor.GetBaseColorIntensity
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float ANeoEasyFogActor::GetBaseColorIntensity() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NeoEasyFogActor", "GetBaseColorIntensity");

	Params::NeoEasyFogActor_GetBaseColorIntensity Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function NeoEasyFog.NeoEasyFogActor.GetBaseColorTint
// (Final, Native, Protected, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FLinearColor                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FLinearColor ANeoEasyFogActor::GetBaseColorTint() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NeoEasyFogActor", "GetBaseColorTint");

	Params::NeoEasyFogActor_GetBaseColorTint Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function NeoEasyFog.NeoEasyFogActor.GetCameraFadingDistance
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float ANeoEasyFogActor::GetCameraFadingDistance() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NeoEasyFogActor", "GetCameraFadingDistance");

	Params::NeoEasyFogActor_GetCameraFadingDistance Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function NeoEasyFog.NeoEasyFogActor.GetCastShadow
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ANeoEasyFogActor::GetCastShadow() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NeoEasyFogActor", "GetCastShadow");

	Params::NeoEasyFogActor_GetCastShadow Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function NeoEasyFog.NeoEasyFogActor.GetEmissiveIntensity
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float ANeoEasyFogActor::GetEmissiveIntensity() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NeoEasyFogActor", "GetEmissiveIntensity");

	Params::NeoEasyFogActor_GetEmissiveIntensity Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function NeoEasyFog.NeoEasyFogActor.GetEyeAdaptionSwitch
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ANeoEasyFogActor::GetEyeAdaptionSwitch() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NeoEasyFogActor", "GetEyeAdaptionSwitch");

	Params::NeoEasyFogActor_GetEyeAdaptionSwitch Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function NeoEasyFog.NeoEasyFogActor.GetFogDensity
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float ANeoEasyFogActor::GetFogDensity() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NeoEasyFogActor", "GetFogDensity");

	Params::NeoEasyFogActor_GetFogDensity Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function NeoEasyFog.NeoEasyFogActor.GetGeometryFadingDistance
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float ANeoEasyFogActor::GetGeometryFadingDistance() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NeoEasyFogActor", "GetGeometryFadingDistance");

	Params::NeoEasyFogActor_GetGeometryFadingDistance Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function NeoEasyFog.NeoEasyFogActor.GetNormalMapIntensity
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float ANeoEasyFogActor::GetNormalMapIntensity() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NeoEasyFogActor", "GetNormalMapIntensity");

	Params::NeoEasyFogActor_GetNormalMapIntensity Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function NeoEasyFog.NeoEasyFogActor.GetPathtracerToggle
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ANeoEasyFogActor::GetPathtracerToggle() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NeoEasyFogActor", "GetPathtracerToggle");

	Params::NeoEasyFogActor_GetPathtracerToggle Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function NeoEasyFog.NeoEasyFogActor.GetViewAngleFade
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float ANeoEasyFogActor::GetViewAngleFade() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NeoEasyFogActor", "GetViewAngleFade");

	Params::NeoEasyFogActor_GetViewAngleFade Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function NeoEasyFog.NeoEasyFogActor.GetWindIntensity
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float ANeoEasyFogActor::GetWindIntensity() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NeoEasyFogActor", "GetWindIntensity");

	Params::NeoEasyFogActor_GetWindIntensity Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function NeoEasyFog.NeoEasyFogActor.GetWindNoiseContrast
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float ANeoEasyFogActor::GetWindNoiseContrast() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NeoEasyFogActor", "GetWindNoiseContrast");

	Params::NeoEasyFogActor_GetWindNoiseContrast Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function NeoEasyFog.NeoEasyFogActor.GetWindNoiseTiling
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float ANeoEasyFogActor::GetWindNoiseTiling() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NeoEasyFogActor", "GetWindNoiseTiling");

	Params::NeoEasyFogActor_GetWindNoiseTiling Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function NeoEasyFog.NeoEasyFogActor.GetWindSpeedX
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float ANeoEasyFogActor::GetWindSpeedX() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NeoEasyFogActor", "GetWindSpeedX");

	Params::NeoEasyFogActor_GetWindSpeedX Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function NeoEasyFog.NeoEasyFogActor.GetWindSpeedY
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float ANeoEasyFogActor::GetWindSpeedY() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NeoEasyFogActor", "GetWindSpeedY");

	Params::NeoEasyFogActor_GetWindSpeedY Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}

}

