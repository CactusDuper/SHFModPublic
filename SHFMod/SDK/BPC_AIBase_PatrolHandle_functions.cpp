#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPC_AIBase_PatrolHandle

#include "Basic.hpp"

#include "BPC_AIBase_PatrolHandle_classes.hpp"
#include "BPC_AIBase_PatrolHandle_parameters.hpp"


namespace SDK
{

// Function BPC_AIBase_PatrolHandle.BPC_AIBase_PatrolHandle_C.FindNextPoint
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_Patrol_TargetPoint_C**        Point                                                  (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBPC_AIBase_PatrolHandle_C::FindNextPoint(class ABP_Patrol_TargetPoint_C** Point)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_AIBase_PatrolHandle_C", "FindNextPoint");

	Params::BPC_AIBase_PatrolHandle_C_FindNextPoint Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Point != nullptr)
		*Point = Parms.Point;
}


// Function BPC_AIBase_PatrolHandle.BPC_AIBase_PatrolHandle_C.GetCurrPatrolGroupSetting
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FBP_PatrolGroupSetting_S*        GroupSetting                                           (Parm, OutParm, HasGetValueTypeHash)

void UBPC_AIBase_PatrolHandle_C::GetCurrPatrolGroupSetting(struct FBP_PatrolGroupSetting_S* GroupSetting)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_AIBase_PatrolHandle_C", "GetCurrPatrolGroupSetting");

	Params::BPC_AIBase_PatrolHandle_C_GetCurrPatrolGroupSetting Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (GroupSetting != nullptr)
		*GroupSetting = std::move(Parms.GroupSetting);
}


// Function BPC_AIBase_PatrolHandle.BPC_AIBase_PatrolHandle_C.GetCurrPatrolPoints
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// TArray<class ABP_Patrol_TargetPoint_C*>*Points                                                 (Parm, OutParm)
// int32*                                  LastIndex                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPC_AIBase_PatrolHandle_C::GetCurrPatrolPoints(TArray<class ABP_Patrol_TargetPoint_C*>* Points, int32* LastIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_AIBase_PatrolHandle_C", "GetCurrPatrolPoints");

	Params::BPC_AIBase_PatrolHandle_C_GetCurrPatrolPoints Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Points != nullptr)
		*Points = std::move(Parms.Points);

	if (LastIndex != nullptr)
		*LastIndex = Parms.LastIndex;
}


// Function BPC_AIBase_PatrolHandle.BPC_AIBase_PatrolHandle_C.GetCurrPoint
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_Patrol_TargetPoint_C**        Point                                                  (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBPC_AIBase_PatrolHandle_C::GetCurrPoint(class ABP_Patrol_TargetPoint_C** Point)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_AIBase_PatrolHandle_C", "GetCurrPoint");

	Params::BPC_AIBase_PatrolHandle_C_GetCurrPoint Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Point != nullptr)
		*Point = Parms.Point;
}


// Function BPC_AIBase_PatrolHandle.BPC_AIBase_PatrolHandle_C.Set Patrol Setting
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FBP_AISpawnerPatrolSetting_S&Setting                                                (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void UBPC_AIBase_PatrolHandle_C::Set_Patrol_Setting(const struct FBP_AISpawnerPatrolSetting_S& Setting)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_AIBase_PatrolHandle_C", "Set Patrol Setting");

	Params::BPC_AIBase_PatrolHandle_C_Set_Patrol_Setting Parms{};

	Parms.Setting = std::move(Setting);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPC_AIBase_PatrolHandle.BPC_AIBase_PatrolHandle_C.SwitchPatrolGroup
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             GroupName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPC_AIBase_PatrolHandle_C::SwitchPatrolGroup(class FName GroupName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_AIBase_PatrolHandle_C", "SwitchPatrolGroup");

	Params::BPC_AIBase_PatrolHandle_C_SwitchPatrolGroup Parms{};

	Parms.GroupName = GroupName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPC_AIBase_PatrolHandle.BPC_AIBase_PatrolHandle_C.UpdateReachPathEnd
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBPC_AIBase_PatrolHandle_C::UpdateReachPathEnd()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_AIBase_PatrolHandle_C", "UpdateReachPathEnd");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPC_AIBase_PatrolHandle.BPC_AIBase_PatrolHandle_C.UpdateStatus
// (Public, BlueprintCallable, BlueprintEvent)

void UBPC_AIBase_PatrolHandle_C::UpdateStatus()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_AIBase_PatrolHandle_C", "UpdateStatus");

	UObject::ProcessEvent(Func, nullptr);
}

}

