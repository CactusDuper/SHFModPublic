#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPI_DeflectAlert

#include "Basic.hpp"

#include "BPI_DeflectAlert_classes.hpp"
#include "BPI_DeflectAlert_parameters.hpp"


namespace SDK
{

// Function BPI_DeflectAlert.BPI_DeflectAlert_C.EnableDeflect
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Enable                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_DeflectAlert_C::EnableDeflect(bool Enable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("BPI_DeflectAlert_C", "EnableDeflect");

	Params::BPI_DeflectAlert_C_EnableDeflect Parms{};

	Parms.Enable = Enable;

	AsUObject()->ProcessEvent(Func, &Parms);
}


// Function BPI_DeflectAlert.BPI_DeflectAlert_C.HandleDeflectAlert
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  InAngle                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FRotator&                  RotToTarget                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_DeflectAlert_C::HandleDeflectAlert(double InAngle, const struct FRotator& RotToTarget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("BPI_DeflectAlert_C", "HandleDeflectAlert");

	Params::BPI_DeflectAlert_C_HandleDeflectAlert Parms{};

	Parms.InAngle = InAngle;
	Parms.RotToTarget = std::move(RotToTarget);

	AsUObject()->ProcessEvent(Func, &Parms);
}


// Function BPI_DeflectAlert.BPI_DeflectAlert_C.OverrideDeflectInMTGTick
// (Public, BlueprintCallable, BlueprintEvent)

void IBPI_DeflectAlert_C::OverrideDeflectInMTGTick()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("BPI_DeflectAlert_C", "OverrideDeflectInMTGTick");

	AsUObject()->ProcessEvent(Func, nullptr);
}

}

