#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPI_CorruptionUnit

#include "Basic.hpp"

#include "BPI_CorruptionUnit_classes.hpp"
#include "BPI_CorruptionUnit_parameters.hpp"


namespace SDK
{

// Function BPI_CorruptionUnit.BPI_CorruptionUnit_C.BPI_UseNewTentacle
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                                   UseNew                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_CorruptionUnit_C::BPI_UseNewTentacle(bool* UseNew)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("BPI_CorruptionUnit_C", "BPI_UseNewTentacle");

	Params::BPI_CorruptionUnit_C_BPI_UseNewTentacle Parms{};

	AsUObject()->ProcessEvent(Func, &Parms);

	if (UseNew != nullptr)
		*UseNew = Parms.UseNew;
}


// Function BPI_CorruptionUnit.BPI_CorruptionUnit_C.BPI_StartCorruptionGrab
// (Public, BlueprintCallable, BlueprintEvent)

void IBPI_CorruptionUnit_C::BPI_StartCorruptionGrab()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("BPI_CorruptionUnit_C", "BPI_StartCorruptionGrab");

	AsUObject()->ProcessEvent(Func, nullptr);
}


// Function BPI_CorruptionUnit.BPI_CorruptionUnit_C.BPI_GetGrabSocketIndex
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32*                                  OutSocketIndex                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_CorruptionUnit_C::BPI_GetGrabSocketIndex(int32* OutSocketIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("BPI_CorruptionUnit_C", "BPI_GetGrabSocketIndex");

	Params::BPI_CorruptionUnit_C_BPI_GetGrabSocketIndex Parms{};

	AsUObject()->ProcessEvent(Func, &Parms);

	if (OutSocketIndex != nullptr)
		*OutSocketIndex = Parms.OutSocketIndex;
}


// Function BPI_CorruptionUnit.BPI_CorruptionUnit_C.BPI_GetEscapeRotation
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                                   OutUseEscapeRotation                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FRotator*                        OutEscapeRotation                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_CorruptionUnit_C::BPI_GetEscapeRotation(bool* OutUseEscapeRotation, struct FRotator* OutEscapeRotation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("BPI_CorruptionUnit_C", "BPI_GetEscapeRotation");

	Params::BPI_CorruptionUnit_C_BPI_GetEscapeRotation Parms{};

	AsUObject()->ProcessEvent(Func, &Parms);

	if (OutUseEscapeRotation != nullptr)
		*OutUseEscapeRotation = Parms.OutUseEscapeRotation;

	if (OutEscapeRotation != nullptr)
		*OutEscapeRotation = std::move(Parms.OutEscapeRotation);
}


// Function BPI_CorruptionUnit.BPI_CorruptionUnit_C.BPI_EndCorruptionGrab
// (Public, BlueprintCallable, BlueprintEvent)

void IBPI_CorruptionUnit_C::BPI_EndCorruptionGrab()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("BPI_CorruptionUnit_C", "BPI_EndCorruptionGrab");

	AsUObject()->ProcessEvent(Func, nullptr);
}

}

