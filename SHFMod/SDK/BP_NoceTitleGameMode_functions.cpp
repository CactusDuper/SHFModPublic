#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_NoceTitleGameMode

#include "Basic.hpp"

#include "BP_NoceTitleGameMode_classes.hpp"
#include "BP_NoceTitleGameMode_parameters.hpp"


namespace SDK
{

// Function BP_NoceTitleGameMode.BP_NoceTitleGameMode_C.UpdateTitleScene
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// ENoceEndingType                         EndingType                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   CorruptLevel                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_NoceTitleGameMode_C::UpdateTitleScene(ENoceEndingType EndingType, int32 CorruptLevel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NoceTitleGameMode_C", "UpdateTitleScene");

	Params::BP_NoceTitleGameMode_C_UpdateTitleScene Parms{};

	Parms.EndingType = EndingType;
	Parms.CorruptLevel = CorruptLevel;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_NoceTitleGameMode.BP_NoceTitleGameMode_C.UpdateDataLayers
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// ENoceEndingType                         InEndingType                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   InCorruptionLevel                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_NoceTitleGameMode_C::UpdateDataLayers(ENoceEndingType InEndingType, int32 InCorruptionLevel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NoceTitleGameMode_C", "UpdateDataLayers");

	Params::BP_NoceTitleGameMode_C_UpdateDataLayers Parms{};

	Parms.InEndingType = InEndingType;
	Parms.InCorruptionLevel = InCorruptionLevel;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_NoceTitleGameMode.BP_NoceTitleGameMode_C.UpdateAudioState
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// ENoceEndingType                         InEndingType                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   InCorruptionLevel                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_NoceTitleGameMode_C::UpdateAudioState(ENoceEndingType InEndingType, int32 InCorruptionLevel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NoceTitleGameMode_C", "UpdateAudioState");

	Params::BP_NoceTitleGameMode_C_UpdateAudioState Parms{};

	Parms.InEndingType = InEndingType;
	Parms.InCorruptionLevel = InCorruptionLevel;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_NoceTitleGameMode.BP_NoceTitleGameMode_C.TryOpenMainMenu
// (BlueprintCallable, BlueprintEvent)

void ABP_NoceTitleGameMode_C::TryOpenMainMenu()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NoceTitleGameMode_C", "TryOpenMainMenu");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_NoceTitleGameMode.BP_NoceTitleGameMode_C.SetDataLayerState
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class UDataLayerAsset*>&         Array                                                  (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// EDataLayerRuntimeState                  InState                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_NoceTitleGameMode_C::SetDataLayerState(TArray<class UDataLayerAsset*>& Array, EDataLayerRuntimeState InState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NoceTitleGameMode_C", "SetDataLayerState");

	Params::BP_NoceTitleGameMode_C_SetDataLayerState Parms{};

	Parms.Array = std::move(Array);
	Parms.InState = InState;

	UObject::ProcessEvent(Func, &Parms);

	Array = std::move(Parms.Array);
}


// Function BP_NoceTitleGameMode.BP_NoceTitleGameMode_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_NoceTitleGameMode_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NoceTitleGameMode_C", "ReceiveTick");

	Params::BP_NoceTitleGameMode_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_NoceTitleGameMode.BP_NoceTitleGameMode_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_NoceTitleGameMode_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NoceTitleGameMode_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_NoceTitleGameMode.BP_NoceTitleGameMode_C.GetStreamingPos
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector*                         Pos                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_NoceTitleGameMode_C::GetStreamingPos(struct FVector* Pos)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NoceTitleGameMode_C", "GetStreamingPos");

	Params::BP_NoceTitleGameMode_C_GetStreamingPos Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Pos != nullptr)
		*Pos = std::move(Parms.Pos);
}


// Function BP_NoceTitleGameMode.BP_NoceTitleGameMode_C.ExecuteUbergraph_BP_NoceTitleGameMode
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_NoceTitleGameMode_C::ExecuteUbergraph_BP_NoceTitleGameMode(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NoceTitleGameMode_C", "ExecuteUbergraph_BP_NoceTitleGameMode");

	Params::BP_NoceTitleGameMode_C_ExecuteUbergraph_BP_NoceTitleGameMode Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_NoceTitleGameMode.BP_NoceTitleGameMode_C.ClearGameData
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_NoceTitleGameMode_C::ClearGameData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NoceTitleGameMode_C", "ClearGameData");

	UObject::ProcessEvent(Func, nullptr);
}

}

