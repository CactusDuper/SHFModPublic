#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_PlaySequence_State

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "E_RenderType_structs.hpp"
#include "Engine_structs.hpp"
#include "Enum_PlaySequence_Type_structs.hpp"
#include "NoceBase_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "GameNoce_structs.hpp"
#include "NeoAudio_structs.hpp"
#include "BP_ProgressStateWithEndTag_Base_classes.hpp"
#include "SMSystem_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_PlaySequence_State.BP_PlaySequence_State_C
// 0x0690 (0x0790 - 0x0100)
class UBP_PlaySequence_State_C : public UBP_ProgressStateWithEndTag_Base_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0100(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	TSoftObjectPtr<class ULevelSequence>          Sequence;                                          // 0x0108(0x0028)(Edit, BlueprintVisible, HasGetValueTypeHash)
	class ALevelSequenceActor*                    SequenceActor;                                     // 0x0130(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class ULevelSequence*                         SequenceObject;                                    // 0x0138(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          SkipHintShown;                                     // 0x0140(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_141[0x3];                                      // 0x0141(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CommonGuideToken;                                  // 0x0144(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FDateTime                              StartLoadedTime;                                   // 0x0148(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	Enum_PlaySequence_Type                        Type;                                              // 0x0150(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          AllowSkip;                                         // 0x0151(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          LockPlayer;                                        // 0x0152(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          DisableInput;                                      // 0x0153(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Seamless;                                          // 0x0154(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          RebindingActors;                                   // 0x0155(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ResetCameraWhenSkip;                               // 0x0156(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsSequencePlaying;                                 // 0x0157(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        ResetCameraOffset;                                 // 0x0158(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          SetAudioGlobalState;                               // 0x0160(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          SetPlayerInCS;                                     // 0x0161(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_162[0x6];                                      // 0x0162(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UNoceCutsceneWidget*                    CutsceneWidget;                                    // 0x0168(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FNeoAudioPostEventParam                AudioStopCutsceneSFX;                              // 0x0170(0x0070)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMulticastInlineDelegate<void(class ANoceCharacter* NoceChar, const class FString& Debug_Caller)> Seamless_Enter; // 0x01E0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMulticastInlineDelegate<void(class ANoceCharacter* NoceChar, const class FString& Debug_Caller)> Seamless_IntroShotEnd; // 0x01F0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMulticastInlineDelegate<void(class ANoceCharacter* NoceChar, const class FString& Debug_Caller)> Seamless_IntroCamBlendEnd; // 0x0200(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMulticastInlineDelegate<void(class ANoceCharacter* NoceChar, const class FString& Debug_Caller)> Seamless_IntroCharBlendEnd; // 0x0210(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMulticastInlineDelegate<void(class ANoceCharacter* NoceChar, const class FString& Debug_Caller)> Seamless_LastShotStart; // 0x0220(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMulticastInlineDelegate<void(class ANoceCharacter* NoceChar, const class FString& Debug_Caller)> Seamless_LastCamBlendStart; // 0x0230(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMulticastInlineDelegate<void(class ANoceCharacter* NoceChar, const class FString& Debug_Caller)> Seamless_LastCharBlendStart; // 0x0240(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMulticastInlineDelegate<void(class ANoceCharacter* NoceChar, const class FString& Debug_Caller)> Seamless_Exit; // 0x0250(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMulticastInlineDelegate<void(class ANoceCharacter* NoceChar, const class FString& Debug_Caller)> Seamless_BeforeEnter; // 0x0260(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMulticastInlineDelegate<void(class ANoceCharacter* NoceChar, const class FString& Debug_Caller)> Seamless_AfterExit; // 0x0270(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          ForceDisableSkip;                                  // 0x0280(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_281[0x7];                                      // 0x0281(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UDataTable>              SeqDataTable;                                      // 0x0288(0x0028)(Edit, BlueprintVisible, HasGetValueTypeHash)
	class FName                                   DataRowName;                                       // 0x02B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class ULevelSequence>          SelectedSequence;                                  // 0x02B8(0x0028)(Edit, BlueprintVisible, Transient, DisableEditOnInstance, HasGetValueTypeHash)
	class FText                                   Current_Aperture;                                  // 0x02E0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	E_RenderType                                  RenderType;                                        // 0x02F0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2F1[0x7];                                      // 0x02F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSoftObjectPath                        Map;                                               // 0x02F8(0x0020)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	struct FDirectoryPath                         OutputDirectory;                                   // 0x0318(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	bool                                          ForceJumpPlayPos;                                  // 0x0328(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_329[0x7];                                      // 0x0329(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDateTime                              StartPlayTime;                                     // 0x0330(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UWBP_CS_Tips_C*                         WBP_CS_Tips;                                       // 0x0338(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_NoceCinematicNote_C*               WBP_NoceCinematicNote;                             // 0x0340(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          RequestHideEnemy;                                  // 0x0348(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          RequestHideNPC;                                    // 0x0349(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34A[0x2];                                      // 0x034A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   IgnoreHideTag;                                     // 0x034C(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          EnableSeamlessIn;                                  // 0x0354(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          UseCameraLocationForNocePPV;                       // 0x0355(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_356[0xA];                                      // 0x0356(0x000A)(Fixing Size After Last Property [ Dumper-7 ])
	struct FNoceSeqData                           SeqData;                                           // 0x0360(0x0200)(Edit, BlueprintVisible, Transient, DisableEditOnInstance)
	bool                                          HasCineControl;                                    // 0x0560(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_561[0x3];                                      // 0x0561(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           CineControl;                                       // 0x0564(0x0008)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_56C[0x4];                                      // 0x056C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSoftClassPath                         CutsceneWidgetPathNew;                             // 0x0570(0x0020)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	bool                                          UseFadeOutWhite;                                   // 0x0590(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          StraightCut;                                       // 0x0591(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_592[0x6];                                      // 0x0592(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        BeforeEventFadeOutTime;                            // 0x0598(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        OnStartEventFadeInTime;                            // 0x05A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          AfterEventFadeUseWhite;                            // 0x05A8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A9[0x7];                                      // 0x05A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        AfterEventFadeInTime;                              // 0x05B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        SkipEventFadeOutTime;                              // 0x05B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        SkipEventFadeInTime;                               // 0x05C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENoceFadeType                                 Fade_Type;                                         // 0x05C8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C9[0x7];                                      // 0x05C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ANoceCharacter*>                 BindingNoceChars;                                  // 0x05D0(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	bool                                          NeedEventMode;                                     // 0x05E0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENoceCineEventUserType                        CineEventUserType;                                 // 0x05E1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ShowHUDInEvent;                                    // 0x05E2(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5E3[0x5];                                      // 0x05E3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  ShowHUDInEventTag;                                 // 0x05E8(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<TSoftObjectPtr<class ABP_Dev_TeleportPoint_C>> HiddenInGameStreamResource;                // 0x0608(0x0010)(Edit, BlueprintVisible)
	struct FGameplayTag                           AdditionalTagOnSkip;                               // 0x0618(0x0008)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash)
	struct FNeoAudioPostEventParam                AudioMuteCutsceneSFX;                              // 0x0620(0x0070)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FNeoAudioPostEventParam                AudioUnmuteCutsceneSFX;                            // 0x0690(0x0070)(Edit, BlueprintVisible, DisableEditOnInstance)
	double                                        SkipEventBlackTime;                                // 0x0700(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ProcessSeqStop;                                    // 0x0708(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          SeqPreloadDataComplete;                            // 0x0709(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_70A[0x6];                                      // 0x070A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FNeoAudioPostEventParam                AudioFadeInEvent;                                  // 0x0710(0x0070)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          FadeInAudioOnPlay;                                 // 0x0780(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          StateBeginDelayed;                                 // 0x0781(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          PrepareSequenceDelayed;                            // 0x0782(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          StopBGM;                                           // 0x0783(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CmdTagName;                                        // 0x0784(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          LockNavigation;                                    // 0x078C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void WaitingSkipStateFinish();
	void UpdateHinaMeshType();
	void UnregisterCutsceneWidget();
	void UnbindCallBack();
	void SolvePhysicsPopping(class ANoceCharacter* InChar, bool bResetPhysics);
	void ShowGreyboxObjects(bool InHide);
	void SetupType();
	void SetupActorReference();
	void SetPlayerViewRotationToCharacter(double InYawOffset);
	void SetPlayerViewRotation(const struct FRotator& InRotation);
	void SetPlayerInCutscene(bool InValue);
	void Seamless_LastShotStart_Event(class ANoceCharacter* NoceChar, const class FString& Debug_Caller, double InYawOffset, bool EnableCallBlendEvent);
	void Seamless_LastCharBlendStart_Event(class ANoceCharacter* NoceChar, const class FString& Debug_Caller);
	void Seamless_LastCamBlendStart_Event(class ANoceCharacter* NoceChar, const class FString& Debug_Caller, double InYawOffset, bool EnableYawOffset, bool EnableCallBlendEvent);
	void Seamless_IntroShotEnd_Event(class ANoceCharacter* NoceChar, const class FString& Debug_Caller);
	void Seamless_IntroCharBlendEnd_Event(class ANoceCharacter* NoceChar, const class FString& Debug_Caller);
	void Seamless_IntroCamBlendEnd_Event(class ANoceCharacter* NoceChar, const class FString& Debug_Caller);
	void Seamless_Exit_Event(class ANoceCharacter* NoceChar, const class FString& Debug_Caller);
	void Seamless_Enter_Event(class ANoceCharacter* NoceChar, const class FString& Debug_Caller, bool WeaponShow);
	void Seamless_BeforeEnter_Event(class ANoceCharacter* NoceChar, const class FString& Debug_Caller);
	void Seamless_AfterExit_Event(class ANoceCharacter* NoceChar, const class FString& Debug_Caller);
	void RetryStateBegin();
	void RetryPrepareSequence();
	void Register_Cutscene_Widget();
	void PrepareSequence();
	void PlaySequence();
	void PlaySeqInGame();
	void OnStateUpdate(float DeltaSeconds);
	void OnStateEnd();
	void OnStateBegin();
	void OnSequenceStop();
	void OnSequenceLoadFailed();
	void OnSequenceLoaded();
	void OnSequenceGoEnded();
	void OnResetFromPrepareSeq();
	void OnResetFromPlaySeq();
	void OnRenderType_PreviewMode();
	void OnRenderType_InGamePure();
	void OnRenderType_InGame();
	void OnRenderType_InfoTip();
	void OnRenderType_HDRRendering();
	void OnReceiveSkipEvent();
	void OnPostEdit(const class FName& PropertyName);
	void OnPlay();
	void OnLoaded_0F28732841521FD2D7F5048378E7D499(class UObject* Loaded);
	void OnExecutorFinishedDelegate_clear(class UMoviePipelineExecutorBase* PipelineExecutor, bool bSuccess);
	void OnDestroyLevelSeqActor();
	void OnComplete_DDD7C0A74CF21D39A382F2A5A0492FC3();
	void OnCameraCut(class UCameraComponent* CameraComponent);
	void NotifyAI_Start_Sequence();
	void NotifyAI_End_Sequence();
	void MontageStopForReBindings();
	void LockFPS(const class FString& FPS);
	void HandleStreaming(bool* Streaming);
	void HandleSkipComplete();
	void HandleSkipBlackTime();
	void HandleShowHidePlayer(bool SequenceStart);
	void HandleAudioState(bool SequenceStart);
	void Handle_Audio_Skip();
	void GetAllBindingChar(const TMap<class UClass*, struct FNoceActorRefDepotData>& InValue, TArray<class ANoceCharacter*>* Result);
	void FacialABPUpdate(class ANoceCharacter* Char, bool IsBeforeEnter);
	void ExecuteUbergraph_BP_PlaySequence_State(int32 EntryPoint);
	void EnableGlobalEnemyThinkEnable(bool GlobalEnemyThinkEnable);
	void EnableEnvDither(bool Enable);
	void CustomEvent(class UMoviePipelineExecutorBase* PipelineExecutor, bool bSuccess);
	void ConstructionScript();
	void ClearScreenMessage();
	void CheckSkipFadeOutReady();
	void CheckFadeOutReady();
	void BindCallback();

public:
	static class UClass* StaticClass()
	{
		BP_STATIC_CLASS_IMPL("BP_PlaySequence_State_C")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"BP_PlaySequence_State_C")
	}
	static class UBP_PlaySequence_State_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_PlaySequence_State_C>();
	}
};
DUMPER7_ASSERTS_UBP_PlaySequence_State_C;

}

