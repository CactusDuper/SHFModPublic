#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPI_EmBase_BaseControl

#include "Basic.hpp"

#include "GameNoce_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BPI_EmBase_BaseControl.BPI_EmBase_BaseControl_C.IEmBase_ApplySplineTarget
// 0x0008 (0x0008 - 0x0000)
struct BPI_EmBase_BaseControl_C_IEmBase_ApplySplineTarget final
{
public:
	class USplineComponent*                       SplineComp;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
DUMPER7_ASSERTS_BPI_EmBase_BaseControl_C_IEmBase_ApplySplineTarget;

// Function BPI_EmBase_BaseControl.BPI_EmBase_BaseControl_C.IEmBase_CanFollowSpline
// 0x0001 (0x0001 - 0x0000)
struct BPI_EmBase_BaseControl_C_IEmBase_CanFollowSpline final
{
public:
	bool                                          FollowSpline;                                      // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
DUMPER7_ASSERTS_BPI_EmBase_BaseControl_C_IEmBase_CanFollowSpline;

// Function BPI_EmBase_BaseControl.BPI_EmBase_BaseControl_C.IEmBase_CustomEvent
// 0x0010 (0x0010 - 0x0000)
struct BPI_EmBase_BaseControl_C_IEmBase_CustomEvent final
{
public:
	class FName                                   PatternName;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Parameter;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
DUMPER7_ASSERTS_BPI_EmBase_BaseControl_C_IEmBase_CustomEvent;

// Function BPI_EmBase_BaseControl.BPI_EmBase_BaseControl_C.IEmBase_DebugBeahivourRemoveComp
// 0x0008 (0x0008 - 0x0000)
struct BPI_EmBase_BaseControl_C_IEmBase_DebugBeahivourRemoveComp final
{
public:
	class UActorComponent*                        In;                                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
DUMPER7_ASSERTS_BPI_EmBase_BaseControl_C_IEmBase_DebugBeahivourRemoveComp;

// Function BPI_EmBase_BaseControl.BPI_EmBase_BaseControl_C.IEMBase_EnableMeshCollisionToPlayer
// 0x0001 (0x0001 - 0x0000)
struct BPI_EmBase_BaseControl_C_IEMBase_EnableMeshCollisionToPlayer final
{
public:
	bool                                          InEnable;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
DUMPER7_ASSERTS_BPI_EmBase_BaseControl_C_IEMBase_EnableMeshCollisionToPlayer;

// Function BPI_EmBase_BaseControl.BPI_EmBase_BaseControl_C.IEmBase_GetCurBaseMovementSpeed
// 0x0008 (0x0008 - 0x0000)
struct BPI_EmBase_BaseControl_C_IEmBase_GetCurBaseMovementSpeed final
{
public:
	double                                        BaseSpeed;                                         // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
DUMPER7_ASSERTS_BPI_EmBase_BaseControl_C_IEmBase_GetCurBaseMovementSpeed;

// Function BPI_EmBase_BaseControl.BPI_EmBase_BaseControl_C.IEmBase_GetDefaultCapusleSetting
// 0x0068 (0x0068 - 0x0000)
struct BPI_EmBase_BaseControl_C_IEmBase_GetDefaultCapusleSetting final
{
public:
	double                                        Radius;                                            // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        HalfHeight;                                        // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMap<ECollisionChannel, ECollisionResponse>   Response;                                          // 0x0010(0x0050)(Parm, OutParm)
	ECollisionChannel                             ObjectType;                                        // 0x0060(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
DUMPER7_ASSERTS_BPI_EmBase_BaseControl_C_IEmBase_GetDefaultCapusleSetting;

// Function BPI_EmBase_BaseControl.BPI_EmBase_BaseControl_C.IEmBase_GetDefaultSpawnMontage
// 0x0008 (0x0008 - 0x0000)
struct BPI_EmBase_BaseControl_C_IEmBase_GetDefaultSpawnMontage final
{
public:
	class UAnimMontage*                           SpawnMontage;                                      // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
DUMPER7_ASSERTS_BPI_EmBase_BaseControl_C_IEmBase_GetDefaultSpawnMontage;

// Function BPI_EmBase_BaseControl.BPI_EmBase_BaseControl_C.IEmBase_GetIsCurrentOptimized
// 0x0001 (0x0001 - 0x0000)
struct BPI_EmBase_BaseControl_C_IEmBase_GetIsCurrentOptimized final
{
public:
	bool                                          Bool;                                              // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
DUMPER7_ASSERTS_BPI_EmBase_BaseControl_C_IEmBase_GetIsCurrentOptimized;

// Function BPI_EmBase_BaseControl.BPI_EmBase_BaseControl_C.IEmBase_GetIsStrafe
// 0x0001 (0x0001 - 0x0000)
struct BPI_EmBase_BaseControl_C_IEmBase_GetIsStrafe final
{
public:
	bool                                          IsStrafe;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
DUMPER7_ASSERTS_BPI_EmBase_BaseControl_C_IEmBase_GetIsStrafe;

// Function BPI_EmBase_BaseControl.BPI_EmBase_BaseControl_C.IEmBase_GetLocoTurnMontage
// 0x0010 (0x0010 - 0x0000)
struct BPI_EmBase_BaseControl_C_IEmBase_GetLocoTurnMontage final
{
public:
	int32                                         Index_0;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           outMTG;                                            // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
DUMPER7_ASSERTS_BPI_EmBase_BaseControl_C_IEmBase_GetLocoTurnMontage;

// Function BPI_EmBase_BaseControl.BPI_EmBase_BaseControl_C.IEmBase_GetPivotTurnMontage
// 0x0030 (0x0030 - 0x0000)
struct BPI_EmBase_BaseControl_C_IEmBase_GetPivotTurnMontage final
{
public:
	double                                        QuickTurnDegree;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        LongTurnDegree;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                TargetLoc;                                         // 0x0010(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           TurnMontage;                                       // 0x0028(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
DUMPER7_ASSERTS_BPI_EmBase_BaseControl_C_IEmBase_GetPivotTurnMontage;

// Function BPI_EmBase_BaseControl.BPI_EmBase_BaseControl_C.IEmBase_GetSplineTarget
// 0x0008 (0x0008 - 0x0000)
struct BPI_EmBase_BaseControl_C_IEmBase_GetSplineTarget final
{
public:
	class USplineComponent*                       SplineComp;                                        // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
DUMPER7_ASSERTS_BPI_EmBase_BaseControl_C_IEmBase_GetSplineTarget;

// Function BPI_EmBase_BaseControl.BPI_EmBase_BaseControl_C.IEmBase_GetStrafeDirectionMontage
// 0x0010 (0x0010 - 0x0000)
struct BPI_EmBase_BaseControl_C_IEmBase_GetStrafeDirectionMontage final
{
public:
	ENoceHitReactionFourWayType                   Direction;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           Montage;                                           // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
DUMPER7_ASSERTS_BPI_EmBase_BaseControl_C_IEmBase_GetStrafeDirectionMontage;

// Function BPI_EmBase_BaseControl.BPI_EmBase_BaseControl_C.IEmBase_GetUsedNavData
// 0x0008 (0x0008 - 0x0000)
struct BPI_EmBase_BaseControl_C_IEmBase_GetUsedNavData final
{
public:
	class ARecastNavMesh*                         NavData;                                           // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
DUMPER7_ASSERTS_BPI_EmBase_BaseControl_C_IEmBase_GetUsedNavData;

// Function BPI_EmBase_BaseControl.BPI_EmBase_BaseControl_C.IEmBase_HandleDialogWhenDamaged
// 0x0001 (0x0001 - 0x0000)
struct BPI_EmBase_BaseControl_C_IEmBase_HandleDialogWhenDamaged final
{
public:
	ENoceWinceType                                WinceType;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
DUMPER7_ASSERTS_BPI_EmBase_BaseControl_C_IEmBase_HandleDialogWhenDamaged;

// Function BPI_EmBase_BaseControl.BPI_EmBase_BaseControl_C.IEmBase_HandleHitByFriend
// 0x0178 (0x0178 - 0x0000)
struct BPI_EmBase_BaseControl_C_IEmBase_HandleHitByFriend final
{
public:
	struct FNoceAttackHitResult                   NoceHitResult;                                     // 0x0000(0x0178)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, ContainsInstancedReference)
};
DUMPER7_ASSERTS_BPI_EmBase_BaseControl_C_IEmBase_HandleHitByFriend;

// Function BPI_EmBase_BaseControl.BPI_EmBase_BaseControl_C.IEmBase_HandleSpawnerTeleportEvent
// 0x0038 (0x0038 - 0x0000)
struct BPI_EmBase_BaseControl_C_IEmBase_HandleSpawnerTeleportEvent final
{
public:
	struct FVector                                DestLocation;                                      // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               DestRoration;                                      // 0x0018(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Result;                                            // 0x0030(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
DUMPER7_ASSERTS_BPI_EmBase_BaseControl_C_IEmBase_HandleSpawnerTeleportEvent;

// Function BPI_EmBase_BaseControl.BPI_EmBase_BaseControl_C.IEmBase_IsInPlayerCamDirection
// 0x0001 (0x0001 - 0x0000)
struct BPI_EmBase_BaseControl_C_IEmBase_IsInPlayerCamDirection final
{
public:
	bool                                          Bool;                                              // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
DUMPER7_ASSERTS_BPI_EmBase_BaseControl_C_IEmBase_IsInPlayerCamDirection;

// Function BPI_EmBase_BaseControl.BPI_EmBase_BaseControl_C.IEmBase_IsPauseFollowSpline
// 0x0001 (0x0001 - 0x0000)
struct BPI_EmBase_BaseControl_C_IEmBase_IsPauseFollowSpline final
{
public:
	bool                                          Pause;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
DUMPER7_ASSERTS_BPI_EmBase_BaseControl_C_IEmBase_IsPauseFollowSpline;

// Function BPI_EmBase_BaseControl.BPI_EmBase_BaseControl_C.IEmBase_OverrideLocoBaseSpeed
// 0x0008 (0x0008 - 0x0000)
struct BPI_EmBase_BaseControl_C_IEmBase_OverrideLocoBaseSpeed final
{
public:
	double                                        BaseSpeed;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
DUMPER7_ASSERTS_BPI_EmBase_BaseControl_C_IEmBase_OverrideLocoBaseSpeed;

// Function BPI_EmBase_BaseControl.BPI_EmBase_BaseControl_C.IEmBase_PlayMontageFromAnimBank
// 0x0010 (0x0010 - 0x0000)
struct BPI_EmBase_BaseControl_C_IEmBase_PlayMontageFromAnimBank final
{
public:
	int32                                         BankID;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MotionID;                                          // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        duration;                                          // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
DUMPER7_ASSERTS_BPI_EmBase_BaseControl_C_IEmBase_PlayMontageFromAnimBank;

// Function BPI_EmBase_BaseControl.BPI_EmBase_BaseControl_C.IEmBase_RandomFient
// 0x0018 (0x0018 - 0x0000)
struct BPI_EmBase_BaseControl_C_IEmBase_RandomFient final
{
public:
	double                                        duration;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Dilation;                                          // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimSequenceBase*                      Anim;                                              // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
DUMPER7_ASSERTS_BPI_EmBase_BaseControl_C_IEmBase_RandomFient;

// Function BPI_EmBase_BaseControl.BPI_EmBase_BaseControl_C.IEmBase_SendAudioTrigger
// 0x0008 (0x0008 - 0x0000)
struct BPI_EmBase_BaseControl_C_IEmBase_SendAudioTrigger final
{
public:
	class FName                                   AudioTriggerName;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
DUMPER7_ASSERTS_BPI_EmBase_BaseControl_C_IEmBase_SendAudioTrigger;

// Function BPI_EmBase_BaseControl.BPI_EmBase_BaseControl_C.IEmBase_SetEnableLookAt
// 0x0030 (0x0030 - 0x0000)
struct BPI_EmBase_BaseControl_C_IEmBase_SetEnableLookAt final
{
public:
	bool                                          Enable;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FNoceAILookAtSetting                   LookAtSetting;                                     // 0x0008(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	bool                                          Result;                                            // 0x0028(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
DUMPER7_ASSERTS_BPI_EmBase_BaseControl_C_IEmBase_SetEnableLookAt;

// Function BPI_EmBase_BaseControl.BPI_EmBase_BaseControl_C.IEmBase_SetFaceToTargetInfo
// 0x0028 (0x0028 - 0x0000)
struct BPI_EmBase_BaseControl_C_IEmBase_SetFaceToTargetInfo final
{
public:
	struct FNoceAIFaceToTargetInfo                Info;                                              // 0x0000(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
};
DUMPER7_ASSERTS_BPI_EmBase_BaseControl_C_IEmBase_SetFaceToTargetInfo;

// Function BPI_EmBase_BaseControl.BPI_EmBase_BaseControl_C.IEmBase_SetFocusActor
// 0x0010 (0x0010 - 0x0000)
struct BPI_EmBase_BaseControl_C_IEmBase_SetFocusActor final
{
public:
	bool                                          IsStrafe;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 FocusActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
DUMPER7_ASSERTS_BPI_EmBase_BaseControl_C_IEmBase_SetFocusActor;

// Function BPI_EmBase_BaseControl.BPI_EmBase_BaseControl_C.IEmBase_SetFocusPoint
// 0x0020 (0x0020 - 0x0000)
struct BPI_EmBase_BaseControl_C_IEmBase_SetFocusPoint final
{
public:
	bool                                          IsStrafe;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                FocusLoc;                                          // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
DUMPER7_ASSERTS_BPI_EmBase_BaseControl_C_IEmBase_SetFocusPoint;

// Function BPI_EmBase_BaseControl.BPI_EmBase_BaseControl_C.IEmBase_SetHopeNotMove
// 0x0001 (0x0001 - 0x0000)
struct BPI_EmBase_BaseControl_C_IEmBase_SetHopeNotMove final
{
public:
	bool                                          HopeNotMove;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
DUMPER7_ASSERTS_BPI_EmBase_BaseControl_C_IEmBase_SetHopeNotMove;

// Function BPI_EmBase_BaseControl.BPI_EmBase_BaseControl_C.IEmBase_SetMaxLookDistance
// 0x0018 (0x0018 - 0x0000)
struct BPI_EmBase_BaseControl_C_IEmBase_SetMaxLookDistance final
{
public:
	bool                                          Enable;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        MaxLookDistance;                                   // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
DUMPER7_ASSERTS_BPI_EmBase_BaseControl_C_IEmBase_SetMaxLookDistance;

// Function BPI_EmBase_BaseControl.BPI_EmBase_BaseControl_C.IEmBase_ShootProjectile
// 0x0008 (0x0008 - 0x0000)
struct BPI_EmBase_BaseControl_C_IEmBase_ShootProjectile final
{
public:
	class FName                                   PatternName;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
DUMPER7_ASSERTS_BPI_EmBase_BaseControl_C_IEmBase_ShootProjectile;

// Function BPI_EmBase_BaseControl.BPI_EmBase_BaseControl_C.IEmBase_TriggerLinkAbility
// 0x0010 (0x0010 - 0x0000)
struct BPI_EmBase_BaseControl_C_IEmBase_TriggerLinkAbility final
{
public:
	class ANoceCharacter*                         LinkTarget;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   ExAbilityName;                                     // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
DUMPER7_ASSERTS_BPI_EmBase_BaseControl_C_IEmBase_TriggerLinkAbility;

// Function BPI_EmBase_BaseControl.BPI_EmBase_BaseControl_C.IEmBase_UpdateBaseMovementSpeed
// 0x0008 (0x0008 - 0x0000)
struct BPI_EmBase_BaseControl_C_IEmBase_UpdateBaseMovementSpeed final
{
public:
	double                                        BaseSpeed;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
DUMPER7_ASSERTS_BPI_EmBase_BaseControl_C_IEmBase_UpdateBaseMovementSpeed;

// Function BPI_EmBase_BaseControl.BPI_EmBase_BaseControl_C.IEmBase_UpdateLocomotionOffset
// 0x0018 (0x0018 - 0x0000)
struct BPI_EmBase_BaseControl_C_IEmBase_UpdateLocomotionOffset final
{
public:
	struct FVector                                Offset;                                            // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
DUMPER7_ASSERTS_BPI_EmBase_BaseControl_C_IEmBase_UpdateLocomotionOffset;

// Function BPI_EmBase_BaseControl.BPI_EmBase_BaseControl_C.IEmBase_UpdateModifiedMovementSpeed
// 0x0008 (0x0008 - 0x0000)
struct BPI_EmBase_BaseControl_C_IEmBase_UpdateModifiedMovementSpeed final
{
public:
	double                                        Modifier;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
DUMPER7_ASSERTS_BPI_EmBase_BaseControl_C_IEmBase_UpdateModifiedMovementSpeed;

}

