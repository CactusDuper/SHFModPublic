#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_FX_PP_SanityFocusCounterableHint_000

#include "Basic.hpp"

#include "BP_FX_PP_SanityFocusCounterableHint_000_classes.hpp"
#include "BP_FX_PP_SanityFocusCounterableHint_000_parameters.hpp"


namespace SDK
{

// Function BP_FX_PP_SanityFocusCounterableHint_000.BP_FX_PP_SanityFocusCounterableHint_000_C.ExecuteUbergraph_BP_FX_PP_SanityFocusCounterableHint_000
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_FX_PP_SanityFocusCounterableHint_000_C::ExecuteUbergraph_BP_FX_PP_SanityFocusCounterableHint_000(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FX_PP_SanityFocusCounterableHint_000_C", "ExecuteUbergraph_BP_FX_PP_SanityFocusCounterableHint_000");

	Params::BP_FX_PP_SanityFocusCounterableHint_000_C_ExecuteUbergraph_BP_FX_PP_SanityFocusCounterableHint_000 Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_FX_PP_SanityFocusCounterableHint_000.BP_FX_PP_SanityFocusCounterableHint_000_C.OnCloseNotebook
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_FX_PP_SanityFocusCounterableHint_000_C::OnCloseNotebook()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FX_PP_SanityFocusCounterableHint_000_C", "OnCloseNotebook");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_FX_PP_SanityFocusCounterableHint_000.BP_FX_PP_SanityFocusCounterableHint_000_C.OnOpenNotebook
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_FX_PP_SanityFocusCounterableHint_000_C::OnOpenNotebook()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FX_PP_SanityFocusCounterableHint_000_C", "OnOpenNotebook");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_FX_PP_SanityFocusCounterableHint_000.BP_FX_PP_SanityFocusCounterableHint_000_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_FX_PP_SanityFocusCounterableHint_000_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FX_PP_SanityFocusCounterableHint_000_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_FX_PP_SanityFocusCounterableHint_000.BP_FX_PP_SanityFocusCounterableHint_000_C.ReceiveDestroyed
// (Event, Public, BlueprintEvent)

void ABP_FX_PP_SanityFocusCounterableHint_000_C::ReceiveDestroyed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FX_PP_SanityFocusCounterableHint_000_C", "ReceiveDestroyed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_FX_PP_SanityFocusCounterableHint_000.BP_FX_PP_SanityFocusCounterableHint_000_C.ReceiveEndPlay
// (Event, Protected, BlueprintEvent)
// Parameters:
// EEndPlayReason                          EndPlayReason                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_FX_PP_SanityFocusCounterableHint_000_C::ReceiveEndPlay(EEndPlayReason EndPlayReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FX_PP_SanityFocusCounterableHint_000_C", "ReceiveEndPlay");

	Params::BP_FX_PP_SanityFocusCounterableHint_000_C_ReceiveEndPlay Parms{};

	Parms.EndPlayReason = EndPlayReason;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_FX_PP_SanityFocusCounterableHint_000.BP_FX_PP_SanityFocusCounterableHint_000_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_FX_PP_SanityFocusCounterableHint_000_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FX_PP_SanityFocusCounterableHint_000_C", "ReceiveTick");

	Params::BP_FX_PP_SanityFocusCounterableHint_000_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_FX_PP_SanityFocusCounterableHint_000.BP_FX_PP_SanityFocusCounterableHint_000_C.Timeline__FinishedFunc
// (BlueprintEvent)

void ABP_FX_PP_SanityFocusCounterableHint_000_C::Timeline__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FX_PP_SanityFocusCounterableHint_000_C", "Timeline__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_FX_PP_SanityFocusCounterableHint_000.BP_FX_PP_SanityFocusCounterableHint_000_C.Timeline__UpdateFunc
// (BlueprintEvent)

void ABP_FX_PP_SanityFocusCounterableHint_000_C::Timeline__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FX_PP_SanityFocusCounterableHint_000_C", "Timeline__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_FX_PP_SanityFocusCounterableHint_000.BP_FX_PP_SanityFocusCounterableHint_000_C.VFX Focus Dust
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class ANoceEnemyCharacter*              Enemy                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_FX_PP_SanityFocusCounterableHint_000_C::VFX_Focus_Dust(class ANoceEnemyCharacter* Enemy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FX_PP_SanityFocusCounterableHint_000_C", "VFX Focus Dust");

	Params::BP_FX_PP_SanityFocusCounterableHint_000_C_VFX_Focus_Dust Parms{};

	Parms.Enemy = Enemy;

	UObject::ProcessEvent(Func, &Parms);
}

}

