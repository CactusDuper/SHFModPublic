#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Pl_Base_Vault_State

#include "Basic.hpp"

#include "BP_Pl_Base_Vault_State_classes.hpp"
#include "BP_Pl_Base_Vault_State_parameters.hpp"


namespace SDK
{

// Function BP_Pl_Base_Vault_State.BP_Pl_Base_Vault_State_C.ConstructionScript
// (Event, Protected, BlueprintCallable, BlueprintEvent)

void UBP_Pl_Base_Vault_State_C::ConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Pl_Base_Vault_State_C", "ConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Pl_Base_Vault_State.BP_Pl_Base_Vault_State_C.EnterSetup
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector*                         StartLocation                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector*                         InLocation                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector*                         OutLocation                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector*                         EndLocation                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FRotator*                        Rotation                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_Pl_Base_Vault_State_C::EnterSetup(struct FVector* StartLocation, struct FVector* InLocation, struct FVector* OutLocation, struct FVector* EndLocation, struct FRotator* Rotation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Pl_Base_Vault_State_C", "EnterSetup");

	Params::BP_Pl_Base_Vault_State_C_EnterSetup Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (StartLocation != nullptr)
		*StartLocation = std::move(Parms.StartLocation);

	if (InLocation != nullptr)
		*InLocation = std::move(Parms.InLocation);

	if (OutLocation != nullptr)
		*OutLocation = std::move(Parms.OutLocation);

	if (EndLocation != nullptr)
		*EndLocation = std::move(Parms.EndLocation);

	if (Rotation != nullptr)
		*Rotation = std::move(Parms.Rotation);
}


// Function BP_Pl_Base_Vault_State.BP_Pl_Base_Vault_State_C.ExecuteUbergraph_BP_Pl_Base_Vault_State
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_Pl_Base_Vault_State_C::ExecuteUbergraph_BP_Pl_Base_Vault_State(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Pl_Base_Vault_State_C", "ExecuteUbergraph_BP_Pl_Base_Vault_State");

	Params::BP_Pl_Base_Vault_State_C_ExecuteUbergraph_BP_Pl_Base_Vault_State Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Pl_Base_Vault_State.BP_Pl_Base_Vault_State_C.OnInputAxis
// (Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// ENoceInputAxis                          InInputAxis                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   InValue                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_Pl_Base_Vault_State_C::OnInputAxis(ENoceInputAxis InInputAxis, float InValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Pl_Base_Vault_State_C", "OnInputAxis");

	Params::BP_Pl_Base_Vault_State_C_OnInputAxis Parms{};

	Parms.InInputAxis = InInputAxis;
	Parms.InValue = InValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Pl_Base_Vault_State.BP_Pl_Base_Vault_State_C.OnStateBegin
// (Event, Public, BlueprintCallable, BlueprintEvent)

void UBP_Pl_Base_Vault_State_C::OnStateBegin()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Pl_Base_Vault_State_C", "OnStateBegin");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Pl_Base_Vault_State.BP_Pl_Base_Vault_State_C.OnStateEnd
// (Event, Public, BlueprintCallable, BlueprintEvent)

void UBP_Pl_Base_Vault_State_C::OnStateEnd()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Pl_Base_Vault_State_C", "OnStateEnd");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Pl_Base_Vault_State.BP_Pl_Base_Vault_State_C.PlayMontage
// (Protected, BlueprintCallable, BlueprintEvent)

void UBP_Pl_Base_Vault_State_C::PlayMontage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Pl_Base_Vault_State_C", "PlayMontage");

	UObject::ProcessEvent(Func, nullptr);
}

}

