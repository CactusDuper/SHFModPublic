#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_SetDisableMultiRoundMapIcon_State

#include "Basic.hpp"

#include "BP_SetDisableMultiRoundMapIcon_State_classes.hpp"
#include "BP_SetDisableMultiRoundMapIcon_State_parameters.hpp"


namespace SDK
{

// Function BP_SetDisableMultiRoundMapIcon_State.BP_SetDisableMultiRoundMapIcon_State_C.OnStateBegin
// (Event, Public, BlueprintCallable, BlueprintEvent)

void UBP_SetDisableMultiRoundMapIcon_State_C::OnStateBegin()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SetDisableMultiRoundMapIcon_State_C", "OnStateBegin");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SetDisableMultiRoundMapIcon_State.BP_SetDisableMultiRoundMapIcon_State_C.ExecuteUbergraph_BP_SetDisableMultiRoundMapIcon_State
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_SetDisableMultiRoundMapIcon_State_C::ExecuteUbergraph_BP_SetDisableMultiRoundMapIcon_State(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SetDisableMultiRoundMapIcon_State_C", "ExecuteUbergraph_BP_SetDisableMultiRoundMapIcon_State");

	Params::BP_SetDisableMultiRoundMapIcon_State_C_ExecuteUbergraph_BP_SetDisableMultiRoundMapIcon_State Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SetDisableMultiRoundMapIcon_State.BP_SetDisableMultiRoundMapIcon_State_C.ConstructionScript
// (Event, Protected, BlueprintCallable, BlueprintEvent)

void UBP_SetDisableMultiRoundMapIcon_State_C::ConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SetDisableMultiRoundMapIcon_State_C", "ConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}

}

