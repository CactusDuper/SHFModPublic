#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPC_EmBoss_Armor

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "GameNoce_structs.hpp"
#include "BP_BossArmorOverrideCombo_Structure_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BPC_EmBoss_Armor.BPC_EmBoss_Armor_C
// 0x00B0 (0x0150 - 0x00A0)
class UBPC_EmBoss_Armor_C final : public UActorComponent
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x00A0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	double                                        State_CurrentArmor;                                // 0x00A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        MaxArmor;                                          // 0x00B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           Timer_ArmorOnDamaged;                              // 0x00B8(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	float                                         RecoverBlockerDuration;                            // 0x00C0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          State_IsBreak;                                     // 0x00C4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C5[0x3];                                       // 0x00C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        RecoverSpeed;                                      // 0x00C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          State_BossArmorEnable;                             // 0x00D0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D1[0x7];                                       // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class FName, struct FBP_BossArmorOverrideCombo_Structure> OverrideByComboName;              // 0x00D8(0x0050)(Edit, BlueprintVisible)
	double                                        CounterArmorDmgBase;                               // 0x0128(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	double                                        KnockbackArmorDmgBase;                             // 0x0130(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	double                                        StunArmorDmgBase;                                  // 0x0138(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	class UDataTable*                             ActionLevelSetting;                                // 0x0140(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          UseDataTable;                                      // 0x0148(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          AccStun;                                           // 0x0149(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)

public:
	void BossArmor_AccStun();
	void BossArmor_DaggerRule(class FName ComboName, double ArmorDmg, bool IsForce, double* OutArmorDmg);
	void BossArmor_IsSuperArmor(bool* Bool);
	void BossArmor_ModifyDataByActionLevel(class UDataTable* ActionLevelSetting_0);
	void BossArmor_ModifySetting(double Setting_MaxArmor, float Setting_RecoverBlockerDuration, double Setting_RecoverSpeed, double Setting_CounterArmorDmgBase, double Setting_KnockbackArmorDmgBase, double Setting_StunArmorDmgBase);
	void BossArmor_OmamoriOverride(double* KnockbackDmg, double* StunDmg);
	void BossArmor_OmamoriWinceType(ENoceWinceType* OutWince);
	void BossArmor_OnDamaged(class FName ComboName, bool IsForceWince, ENoceWinceType InWince, bool* OutForce, ENoceWinceType* OutWince);
	void BossArmor_ReadDataByActionLevel();
	void BossArmor_RecoverBlockerTimerEnd();
	void BossArmor_ResetArmor();
	void ExecuteUbergraph_BPC_EmBoss_Armor(int32 EntryPoint);
	class FString GetBossArmorInfo();
	void Init_OverrideComboName();
	void ReceiveBeginPlay();
	void ReceiveTick(float DeltaSeconds);

public:
	static class UClass* StaticClass()
	{
		BP_STATIC_CLASS_IMPL("BPC_EmBoss_Armor_C")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"BPC_EmBoss_Armor_C")
	}
	static class UBPC_EmBoss_Armor_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBPC_EmBoss_Armor_C>();
	}
};
DUMPER7_ASSERTS_UBPC_EmBoss_Armor_C;

}

