#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_GameSyncSystem

#include "Basic.hpp"

#include "BP_GameSyncSystem_classes.hpp"
#include "BP_GameSyncSystem_parameters.hpp"


namespace SDK
{

// Function BP_GameSyncSystem.BP_GameSyncSystem_C.AddControllerSpeakerOutput
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_GameSyncSystem_C::AddControllerSpeakerOutput()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameSyncSystem_C", "AddControllerSpeakerOutput");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GameSyncSystem.BP_GameSyncSystem_C.AddMotionOutput
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_GameSyncSystem_C::AddMotionOutput()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameSyncSystem_C", "AddMotionOutput");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GameSyncSystem.BP_GameSyncSystem_C.BindGameStateEvent
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_GameSyncSystem_C::BindGameStateEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameSyncSystem_C", "BindGameStateEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GameSyncSystem.BP_GameSyncSystem_C.Deinitialize_BP
// (Event, Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool UBP_GameSyncSystem_C::Deinitialize_BP()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameSyncSystem_C", "Deinitialize_BP");

	Params::BP_GameSyncSystem_C_Deinitialize_BP Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_GameSyncSystem.BP_GameSyncSystem_C.DialogEndCallback
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// EAkCallbackType                         CallbackType                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UAkCallbackInfo*                  CallbackInfo                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_GameSyncSystem_C::DialogEndCallback(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameSyncSystem_C", "DialogEndCallback");

	Params::BP_GameSyncSystem_C_DialogEndCallback Parms{};

	Parms.CallbackType = CallbackType;
	Parms.CallbackInfo = CallbackInfo;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GameSyncSystem.BP_GameSyncSystem_C.ExecuteUbergraph_BP_GameSyncSystem
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_GameSyncSystem_C::ExecuteUbergraph_BP_GameSyncSystem(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameSyncSystem_C", "ExecuteUbergraph_BP_GameSyncSystem");

	Params::BP_GameSyncSystem_C_ExecuteUbergraph_BP_GameSyncSystem Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GameSyncSystem.BP_GameSyncSystem_C.InitControllerAudioSetting
// (BlueprintCallable, BlueprintEvent)

void UBP_GameSyncSystem_C::InitControllerAudioSetting()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameSyncSystem_C", "InitControllerAudioSetting");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GameSyncSystem.BP_GameSyncSystem_C.Initialize_BP
// (Event, Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool UBP_GameSyncSystem_C::Initialize_BP()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameSyncSystem_C", "Initialize_BP");

	Params::BP_GameSyncSystem_C_Initialize_BP Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_GameSyncSystem.BP_GameSyncSystem_C.InitializeStates
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_GameSyncSystem_C::InitializeStates()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameSyncSystem_C", "InitializeStates");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GameSyncSystem.BP_GameSyncSystem_C.IssueAttack
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_GameSyncSystem_C::IssueAttack()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameSyncSystem_C", "IssueAttack");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GameSyncSystem.BP_GameSyncSystem_C.OnControllerConnectionChanged
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsConnected                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   UserId                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// ENoceInputDeviceType                    DeviceType                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_GameSyncSystem_C::OnControllerConnectionChanged(bool IsConnected, int32 UserId, ENoceInputDeviceType DeviceType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameSyncSystem_C", "OnControllerConnectionChanged");

	Params::BP_GameSyncSystem_C_OnControllerConnectionChanged Parms{};

	Parms.IsConnected = IsConnected;
	Parms.UserId = UserId;
	Parms.DeviceType = DeviceType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GameSyncSystem.BP_GameSyncSystem_C.OnDisplayLoadingScreen
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_GameSyncSystem_C::OnDisplayLoadingScreen()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameSyncSystem_C", "OnDisplayLoadingScreen");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GameSyncSystem.BP_GameSyncSystem_C.OnPlayerGameplayTagUpdated
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FGameplayTag&              Tag                                                    (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash)
// bool                                    TagExists                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_GameSyncSystem_C::OnPlayerGameplayTagUpdated(const struct FGameplayTag& Tag, bool TagExists)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameSyncSystem_C", "OnPlayerGameplayTagUpdated");

	Params::BP_GameSyncSystem_C_OnPlayerGameplayTagUpdated Parms{};

	Parms.Tag = std::move(Tag);
	Parms.TagExists = TagExists;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GameSyncSystem.BP_GameSyncSystem_C.OnProgressTagUpdated
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FGameplayTag&              NewTag                                                 (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)

void UBP_GameSyncSystem_C::OnProgressTagUpdated(const struct FGameplayTag& NewTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameSyncSystem_C", "OnProgressTagUpdated");

	Params::BP_GameSyncSystem_C_OnProgressTagUpdated Parms{};

	Parms.NewTag = std::move(NewTag);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GameSyncSystem.BP_GameSyncSystem_C.OnRemoveLoadingScreen
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_GameSyncSystem_C::OnRemoveLoadingScreen()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameSyncSystem_C", "OnRemoveLoadingScreen");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GameSyncSystem.BP_GameSyncSystem_C.OnWindUpdate
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   WindSpeed                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   AudioLevel                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_GameSyncSystem_C::OnWindUpdate(float WindSpeed, int32 AudioLevel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameSyncSystem_C", "OnWindUpdate");

	Params::BP_GameSyncSystem_C_OnWindUpdate Parms{};

	Parms.WindSpeed = WindSpeed;
	Parms.AudioLevel = AudioLevel;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GameSyncSystem.BP_GameSyncSystem_C.PostDialogEvent
// (Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UActorComponent*                  Component                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// const struct FNeoAudioTriggerIdHandle&  TriggerId                                              (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// struct FNeoAudioPostDialogResult        ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor)

struct FNeoAudioPostDialogResult UBP_GameSyncSystem_C::PostDialogEvent(class UActorComponent* Component, const struct FNeoAudioTriggerIdHandle& TriggerId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameSyncSystem_C", "PostDialogEvent");

	Params::BP_GameSyncSystem_C_PostDialogEvent Parms{};

	Parms.Component = Component;
	Parms.TriggerId = std::move(TriggerId);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_GameSyncSystem.BP_GameSyncSystem_C.PostInitialize_BP
// (Event, Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool UBP_GameSyncSystem_C::PostInitialize_BP()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameSyncSystem_C", "PostInitialize_BP");

	Params::BP_GameSyncSystem_C_PostInitialize_BP Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_GameSyncSystem.BP_GameSyncSystem_C.PreLoadGameplayAsset
// (Protected, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_GameSyncSystem_C::PreLoadGameplayAsset()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameSyncSystem_C", "PreLoadGameplayAsset");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GameSyncSystem.BP_GameSyncSystem_C.ResetStates
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_GameSyncSystem_C::ResetStates()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameSyncSystem_C", "ResetStates");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GameSyncSystem.BP_GameSyncSystem_C.SetAudioProfile
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// uint8                                   Culture                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_GameSyncSystem_C::SetAudioProfile(uint8 Culture)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameSyncSystem_C", "SetAudioProfile");

	Params::BP_GameSyncSystem_C_SetAudioProfile Parms{};

	Parms.Culture = Culture;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GameSyncSystem.BP_GameSyncSystem_C.SetCulture
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Culture                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_GameSyncSystem_C::SetCulture(int32 Culture)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameSyncSystem_C", "SetCulture");

	Params::BP_GameSyncSystem_C_SetCulture Parms{};

	Parms.Culture = Culture;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GameSyncSystem.BP_GameSyncSystem_C.SetCultureDone
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Succeeded                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_GameSyncSystem_C::SetCultureDone(bool Succeeded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameSyncSystem_C", "SetCultureDone");

	Params::BP_GameSyncSystem_C_SetCultureDone Parms{};

	Parms.Succeeded = Succeeded;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GameSyncSystem.BP_GameSyncSystem_C.SetGameFlowState
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FGameplayTag&              NewGameFlowState                                       (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// bool                                    StackCurrState                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    UseStackState                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_GameSyncSystem_C::SetGameFlowState(const struct FGameplayTag& NewGameFlowState, bool StackCurrState, bool UseStackState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameSyncSystem_C", "SetGameFlowState");

	Params::BP_GameSyncSystem_C_SetGameFlowState Parms{};

	Parms.NewGameFlowState = std::move(NewGameFlowState);
	Parms.StackCurrState = StackCurrState;
	Parms.UseStackState = UseStackState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GameSyncSystem.BP_GameSyncSystem_C.SetLevelProgressState
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FGameplayTag&              NewLevelProgressState                                  (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)

void UBP_GameSyncSystem_C::SetLevelProgressState(const struct FGameplayTag& NewLevelProgressState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameSyncSystem_C", "SetLevelProgressState");

	Params::BP_GameSyncSystem_C_SetLevelProgressState Parms{};

	Parms.NewLevelProgressState = std::move(NewLevelProgressState);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GameSyncSystem.BP_GameSyncSystem_C.SetPlayerWeakState
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FGameplayTag&              StateValue                                             (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)

void UBP_GameSyncSystem_C::SetPlayerWeakState(const struct FGameplayTag& StateValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameSyncSystem_C", "SetPlayerWeakState");

	Params::BP_GameSyncSystem_C_SetPlayerWeakState Parms{};

	Parms.StateValue = std::move(StateValue);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GameSyncSystem.BP_GameSyncSystem_C.SetRound
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_GameSyncSystem_C::SetRound()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameSyncSystem_C", "SetRound");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GameSyncSystem.BP_GameSyncSystem_C.SetRTPC
// (Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FGameplayTag&              RTPC                                                   (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// double                                  Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    BypassInternalValueInterpolation                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_GameSyncSystem_C::SetRTPC(const struct FGameplayTag& RTPC, double Value, bool BypassInternalValueInterpolation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameSyncSystem_C", "SetRTPC");

	Params::BP_GameSyncSystem_C_SetRTPC Parms{};

	Parms.RTPC = std::move(RTPC);
	Parms.Value = Value;
	Parms.BypassInternalValueInterpolation = BypassInternalValueInterpolation;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GameSyncSystem.BP_GameSyncSystem_C.SetRTPC Cached
// (Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FGameplayTag&              RTPC                                                   (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// double                                  Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    BypassInternalValueInterpolation                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_GameSyncSystem_C::SetRTPC_Cached(const struct FGameplayTag& RTPC, double Value, bool BypassInternalValueInterpolation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameSyncSystem_C", "SetRTPC Cached");

	Params::BP_GameSyncSystem_C_SetRTPC_Cached Parms{};

	Parms.RTPC = std::move(RTPC);
	Parms.Value = Value;
	Parms.BypassInternalValueInterpolation = BypassInternalValueInterpolation;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GameSyncSystem.BP_GameSyncSystem_C.SetState
// (Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FGameplayTag&              StateValue                                             (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)

void UBP_GameSyncSystem_C::SetState(const struct FGameplayTag& StateValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameSyncSystem_C", "SetState");

	Params::BP_GameSyncSystem_C_SetState Parms{};

	Parms.StateValue = std::move(StateValue);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GameSyncSystem.BP_GameSyncSystem_C.SetWindLevel
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  WindLevel                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_GameSyncSystem_C::SetWindLevel(double WindLevel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameSyncSystem_C", "SetWindLevel");

	Params::BP_GameSyncSystem_C_SetWindLevel Parms{};

	Parms.WindLevel = WindLevel;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GameSyncSystem.BP_GameSyncSystem_C.Tick_BP
// (Event, Protected, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DeltaTime                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool UBP_GameSyncSystem_C::Tick_BP(float DeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameSyncSystem_C", "Tick_BP");

	Params::BP_GameSyncSystem_C_Tick_BP Parms{};

	Parms.DeltaTime = DeltaTime;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_GameSyncSystem.BP_GameSyncSystem_C.UnloadGameplayAsset
// (Protected, BlueprintCallable, BlueprintEvent)

void UBP_GameSyncSystem_C::UnloadGameplayAsset()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameSyncSystem_C", "UnloadGameplayAsset");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GameSyncSystem.BP_GameSyncSystem_C.UpdateFogWallDist
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_GameSyncSystem_C::UpdateFogWallDist()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameSyncSystem_C", "UpdateFogWallDist");

	UObject::ProcessEvent(Func, nullptr);
}

}

