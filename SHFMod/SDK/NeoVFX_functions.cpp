#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: NeoVFX

#include "Basic.hpp"

#include "NeoVFX_classes.hpp"
#include "NeoVFX_parameters.hpp"


namespace SDK
{

// Function NeoVFX.NeoInteractiveMapComponent.AddExtraFluid2DInput
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FNeoSimInput&              Input                                                  (Parm, NoDestructor, NativeAccessSpecifierPublic)

void UNeoInteractiveMapComponent::AddExtraFluid2DInput(const struct FNeoSimInput& Input)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NeoInteractiveMapComponent", "AddExtraFluid2DInput");

	Params::NeoInteractiveMapComponent_AddExtraFluid2DInput Parms{};

	Parms.Input = std::move(Input);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function NeoVFX.NeoInteractiveMapComponent.AddExtraFluid3DInput
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FNeoSimInput&              Input                                                  (Parm, NoDestructor, NativeAccessSpecifierPublic)

void UNeoInteractiveMapComponent::AddExtraFluid3DInput(const struct FNeoSimInput& Input)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NeoInteractiveMapComponent", "AddExtraFluid3DInput");

	Params::NeoInteractiveMapComponent_AddExtraFluid3DInput Parms{};

	Parms.Input = std::move(Input);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function NeoVFX.NeoInteractiveMapComponent.AddExtraInfluence2DInput
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FNeoSimInput&              Input                                                  (Parm, NoDestructor, NativeAccessSpecifierPublic)

void UNeoInteractiveMapComponent::AddExtraInfluence2DInput(const struct FNeoSimInput& Input)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NeoInteractiveMapComponent", "AddExtraInfluence2DInput");

	Params::NeoInteractiveMapComponent_AddExtraInfluence2DInput Parms{};

	Parms.Input = std::move(Input);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function NeoVFX.NeoInteractiveMapComponent.AddExtraWave2DInput
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FNeoSimInput&              Input                                                  (Parm, NoDestructor, NativeAccessSpecifierPublic)

void UNeoInteractiveMapComponent::AddExtraWave2DInput(const struct FNeoSimInput& Input)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NeoInteractiveMapComponent", "AddExtraWave2DInput");

	Params::NeoInteractiveMapComponent_AddExtraWave2DInput Parms{};

	Parms.Input = std::move(Input);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function NeoVFX.NeoInteractiveMapComponent.OverrideFluid2DInputDensity
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class FName                       InputName                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InDensity                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UNeoInteractiveMapComponent::OverrideFluid2DInputDensity(const class FName InputName, float InDensity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NeoInteractiveMapComponent", "OverrideFluid2DInputDensity");

	Params::NeoInteractiveMapComponent_OverrideFluid2DInputDensity Parms{};

	Parms.InputName = InputName;
	Parms.InDensity = InDensity;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function NeoVFX.NeoInteractiveMapComponent.OverrideFluid2DInputEnable
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class FName                       InputName                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bEnable                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UNeoInteractiveMapComponent::OverrideFluid2DInputEnable(const class FName InputName, bool bEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NeoInteractiveMapComponent", "OverrideFluid2DInputEnable");

	Params::NeoInteractiveMapComponent_OverrideFluid2DInputEnable Parms{};

	Parms.InputName = InputName;
	Parms.bEnable = bEnable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function NeoVFX.NeoInteractiveMapComponent.OverrideFluid2DInputEnableCache
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class FName                       InputName                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bEnable                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UNeoInteractiveMapComponent::OverrideFluid2DInputEnableCache(const class FName InputName, bool bEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NeoInteractiveMapComponent", "OverrideFluid2DInputEnableCache");

	Params::NeoInteractiveMapComponent_OverrideFluid2DInputEnableCache Parms{};

	Parms.InputName = InputName;
	Parms.bEnable = bEnable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function NeoVFX.NeoInteractiveMapComponent.OverrideFluid2DInputRadius
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class FName                       InputName                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InRadius                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UNeoInteractiveMapComponent::OverrideFluid2DInputRadius(const class FName InputName, float InRadius)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NeoInteractiveMapComponent", "OverrideFluid2DInputRadius");

	Params::NeoInteractiveMapComponent_OverrideFluid2DInputRadius Parms{};

	Parms.InputName = InputName;
	Parms.InRadius = InRadius;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function NeoVFX.NeoInteractiveMapComponent.OverrideFluid2DInputVelocity
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// const class FName                       InputName                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   InVelocity                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UNeoInteractiveMapComponent::OverrideFluid2DInputVelocity(const class FName InputName, const struct FVector& InVelocity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NeoInteractiveMapComponent", "OverrideFluid2DInputVelocity");

	Params::NeoInteractiveMapComponent_OverrideFluid2DInputVelocity Parms{};

	Parms.InputName = InputName;
	Parms.InVelocity = std::move(InVelocity);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function NeoVFX.NeoInteractiveMapComponent.OverrideFluid2DInputVelocityCache
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// const class FName                       InputName                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   InVelocity                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UNeoInteractiveMapComponent::OverrideFluid2DInputVelocityCache(const class FName InputName, const struct FVector& InVelocity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NeoInteractiveMapComponent", "OverrideFluid2DInputVelocityCache");

	Params::NeoInteractiveMapComponent_OverrideFluid2DInputVelocityCache Parms{};

	Parms.InputName = InputName;
	Parms.InVelocity = std::move(InVelocity);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function NeoVFX.NeoInteractiveMapComponent.OverrideFluid2DInputVelocityScale
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class FName                       InputName                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InVelocityScale                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UNeoInteractiveMapComponent::OverrideFluid2DInputVelocityScale(const class FName InputName, float InVelocityScale)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NeoInteractiveMapComponent", "OverrideFluid2DInputVelocityScale");

	Params::NeoInteractiveMapComponent_OverrideFluid2DInputVelocityScale Parms{};

	Parms.InputName = InputName;
	Parms.InVelocityScale = InVelocityScale;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function NeoVFX.NeoInteractiveMapComponent.OverrideFluid3DInputDensity
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class FName                       InputName                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InDensity                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UNeoInteractiveMapComponent::OverrideFluid3DInputDensity(const class FName InputName, float InDensity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NeoInteractiveMapComponent", "OverrideFluid3DInputDensity");

	Params::NeoInteractiveMapComponent_OverrideFluid3DInputDensity Parms{};

	Parms.InputName = InputName;
	Parms.InDensity = InDensity;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function NeoVFX.NeoInteractiveMapComponent.OverrideFluid3DInputEnable
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class FName                       InputName                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bEnable                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UNeoInteractiveMapComponent::OverrideFluid3DInputEnable(const class FName InputName, bool bEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NeoInteractiveMapComponent", "OverrideFluid3DInputEnable");

	Params::NeoInteractiveMapComponent_OverrideFluid3DInputEnable Parms{};

	Parms.InputName = InputName;
	Parms.bEnable = bEnable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function NeoVFX.NeoInteractiveMapComponent.OverrideFluid3DInputRadius
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class FName                       InputName                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InRadius                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UNeoInteractiveMapComponent::OverrideFluid3DInputRadius(const class FName InputName, float InRadius)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NeoInteractiveMapComponent", "OverrideFluid3DInputRadius");

	Params::NeoInteractiveMapComponent_OverrideFluid3DInputRadius Parms{};

	Parms.InputName = InputName;
	Parms.InRadius = InRadius;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function NeoVFX.NeoInteractiveMapComponent.OverrideFluid3DInputVelocity
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// const class FName                       InputName                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   InVelocity                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UNeoInteractiveMapComponent::OverrideFluid3DInputVelocity(const class FName InputName, const struct FVector& InVelocity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NeoInteractiveMapComponent", "OverrideFluid3DInputVelocity");

	Params::NeoInteractiveMapComponent_OverrideFluid3DInputVelocity Parms{};

	Parms.InputName = InputName;
	Parms.InVelocity = std::move(InVelocity);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function NeoVFX.NeoInteractiveMapComponent.OverrideFluid3DInputVelocityScale
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class FName                       InputName                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InVelocityScale                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UNeoInteractiveMapComponent::OverrideFluid3DInputVelocityScale(const class FName InputName, float InVelocityScale)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NeoInteractiveMapComponent", "OverrideFluid3DInputVelocityScale");

	Params::NeoInteractiveMapComponent_OverrideFluid3DInputVelocityScale Parms{};

	Parms.InputName = InputName;
	Parms.InVelocityScale = InVelocityScale;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function NeoVFX.NeoInteractiveMapComponent.OverrideWave2DInputDensity
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class FName                       InputName                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InDensity                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UNeoInteractiveMapComponent::OverrideWave2DInputDensity(const class FName InputName, float InDensity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NeoInteractiveMapComponent", "OverrideWave2DInputDensity");

	Params::NeoInteractiveMapComponent_OverrideWave2DInputDensity Parms{};

	Parms.InputName = InputName;
	Parms.InDensity = InDensity;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function NeoVFX.NeoInteractiveMapComponent.OverrideWave2DInputEnable
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class FName                       InputName                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bEnable                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UNeoInteractiveMapComponent::OverrideWave2DInputEnable(const class FName InputName, bool bEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NeoInteractiveMapComponent", "OverrideWave2DInputEnable");

	Params::NeoInteractiveMapComponent_OverrideWave2DInputEnable Parms{};

	Parms.InputName = InputName;
	Parms.bEnable = bEnable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function NeoVFX.NeoInteractiveMapComponent.OverrideWave2DInputRadius
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class FName                       InputName                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InRadius                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UNeoInteractiveMapComponent::OverrideWave2DInputRadius(const class FName InputName, float InRadius)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NeoInteractiveMapComponent", "OverrideWave2DInputRadius");

	Params::NeoInteractiveMapComponent_OverrideWave2DInputRadius Parms{};

	Parms.InputName = InputName;
	Parms.InRadius = InRadius;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function NeoVFX.NeoInteractiveMapComponent.OverrideWave2DInputVelocity
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// const class FName                       InputName                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   InVelocity                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UNeoInteractiveMapComponent::OverrideWave2DInputVelocity(const class FName InputName, const struct FVector& InVelocity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NeoInteractiveMapComponent", "OverrideWave2DInputVelocity");

	Params::NeoInteractiveMapComponent_OverrideWave2DInputVelocity Parms{};

	Parms.InputName = InputName;
	Parms.InVelocity = std::move(InVelocity);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function NeoVFX.NeoInteractiveMapComponent.OverrideWave2DInputVelocityScale
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class FName                       InputName                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InVelocityScale                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UNeoInteractiveMapComponent::OverrideWave2DInputVelocityScale(const class FName InputName, float InVelocityScale)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NeoInteractiveMapComponent", "OverrideWave2DInputVelocityScale");

	Params::NeoInteractiveMapComponent_OverrideWave2DInputVelocityScale Parms{};

	Parms.InputName = InputName;
	Parms.InVelocityScale = InVelocityScale;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function NeoVFX.NeoInteractiveMapComponent.VolumeTriggerBegin
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ESimulationMethod                       InMethod                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UNeoInteractiveMapVolumeComponent*OverrideVolume                                         (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UNeoInteractiveMapComponent::VolumeTriggerBegin(ESimulationMethod InMethod, class UNeoInteractiveMapVolumeComponent* OverrideVolume)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NeoInteractiveMapComponent", "VolumeTriggerBegin");

	Params::NeoInteractiveMapComponent_VolumeTriggerBegin Parms{};

	Parms.InMethod = InMethod;
	Parms.OverrideVolume = OverrideVolume;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function NeoVFX.NeoInteractiveMapComponent.VolumeTriggerEnd
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ESimulationMethod                       InMethod                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UNeoInteractiveMapComponent::VolumeTriggerEnd(ESimulationMethod InMethod)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NeoInteractiveMapComponent", "VolumeTriggerEnd");

	Params::NeoInteractiveMapComponent_VolumeTriggerEnd Parms{};

	Parms.InMethod = InMethod;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function NeoVFX.NeoInteractiveMapVolumeComponent.OnBeginOverlap
// (Final, Native, Public, HasOutParams)
// Parameters:
// class UPrimitiveComponent*              OverlappedComp                                         (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           Other                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*              OtherComp                                              (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   OtherBodyIndex                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bFromSweep                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FHitResult&                SweepResult                                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void UNeoInteractiveMapVolumeComponent::OnBeginOverlap(class UPrimitiveComponent* OverlappedComp, class AActor* Other, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NeoInteractiveMapVolumeComponent", "OnBeginOverlap");

	Params::NeoInteractiveMapVolumeComponent_OnBeginOverlap Parms{};

	Parms.OverlappedComp = OverlappedComp;
	Parms.Other = Other;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;
	Parms.bFromSweep = bFromSweep;
	Parms.SweepResult = std::move(SweepResult);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function NeoVFX.NeoInteractiveMapVolumeComponent.OnEndOverlap
// (Final, Native, Public)
// Parameters:
// class UPrimitiveComponent*              OverlappedComp                                         (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           Other                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*              OtherComp                                              (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   OtherBodyIndex                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UNeoInteractiveMapVolumeComponent::OnEndOverlap(class UPrimitiveComponent* OverlappedComp, class AActor* Other, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NeoInteractiveMapVolumeComponent", "OnEndOverlap");

	Params::NeoInteractiveMapVolumeComponent_OnEndOverlap Parms{};

	Parms.OverlappedComp = OverlappedComp;
	Parms.Other = Other;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}

}

