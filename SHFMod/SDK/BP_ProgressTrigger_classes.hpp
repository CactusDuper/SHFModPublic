#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ProgressTrigger

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "BP_InteractBase_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_ProgressTrigger.BP_ProgressTrigger_C
// 0x0050 (0x05D8 - 0x0588)
class ABP_ProgressTrigger_C final : public ABP_InteractBase_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_ProgressTrigger_C;               // 0x0588(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBP_ScreenIndicatorComponent_C*         BP_ScreenIndicatorComponent;                       // 0x0590(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UTextRenderComponent*                   TextRender;                                        // 0x0598(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          Box;                                               // 0x05A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           ProgressTag;                                       // 0x05A8(0x0008)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash)
	bool                                          TriggerOnOverlap;                                  // 0x05B0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          TriggerOnce;                                       // 0x05B1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5B2[0x2];                                      // 0x05B2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           Condition;                                         // 0x05B4(0x0008)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash)
	bool                                          ConditionNeedExactMatch;                           // 0x05BC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ShowIndicatorOnCondition;                          // 0x05BD(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5BE[0x2];                                      // 0x05BE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CustomPromptText;                                  // 0x05C0(0x0010)(Edit, BlueprintVisible)
	bool                                          PlayerIsOverlapping;                               // 0x05D0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5D1[0x3];                                      // 0x05D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FColor                                 DebugColor;                                        // 0x05D4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void BeginOverlapTransfer(class AActor* OtherActor);
	void BndEvt__BP_SetProgressTrigger_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void BndEvt__BP_SetProgressTrigger_Box_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void BPI_ProgressTigger_GetIndicatorLocation(struct FVector* Location);
	bool BPI_ProgressTrigger_MatchesTag(const struct FGameplayTag& TagTwo);
	bool CanInteractWithPawnBP(class AActor* InteractorPawn);
	void EndOverlapTransfer(class AActor* OtherActor);
	bool ExecuteInstantFeedback(class AActor* InteractPawn);
	void ExecuteUbergraph_BP_ProgressTrigger(int32 EntryPoint);
	class FString GetDebugTriggerInfo();
	class FString GetDebugTriggerTitle();
	struct FVector GetHintLocationBP();
	struct FVector GetIndicatorLocation();
	class FText GetPromptTextBP();
	class UBoxComponent* GetTriggerBox();
	void IsShowingIndicator(bool* ShowIndicator);
	bool IsTriggerAvailable();
	void ReceiveBeginPlay();
	void ReceiveEndPlay(EEndPlayReason EndPlayReason);
	void ReceiveTick(float DeltaSeconds);
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		BP_STATIC_CLASS_IMPL("BP_ProgressTrigger_C")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"BP_ProgressTrigger_C")
	}
	static class ABP_ProgressTrigger_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_ProgressTrigger_C>();
	}
};
DUMPER7_ASSERTS_ABP_ProgressTrigger_C;

}

