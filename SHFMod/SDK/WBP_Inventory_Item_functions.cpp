#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Inventory_Item

#include "Basic.hpp"

#include "WBP_Inventory_Item_classes.hpp"
#include "WBP_Inventory_Item_parameters.hpp"


namespace SDK
{

// Function WBP_Inventory_Item.WBP_Inventory_Item_C.AskDiscard
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UWBP_Inventory_Item_C::AskDiscard()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Inventory_Item_C", "AskDiscard");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_Inventory_Item.WBP_Inventory_Item_C.BackFromView
// (Public, BlueprintCallable, BlueprintEvent)

void UWBP_Inventory_Item_C::BackFromView()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Inventory_Item_C", "BackFromView");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_Inventory_Item.WBP_Inventory_Item_C.BP_DisableInputs
// (Event, Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                                   NoUse                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_Inventory_Item_C::BP_DisableInputs(bool* NoUse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Inventory_Item_C", "BP_DisableInputs");

	Params::WBP_Inventory_Item_C_BP_DisableInputs Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (NoUse != nullptr)
		*NoUse = Parms.NoUse;
}


// Function WBP_Inventory_Item.WBP_Inventory_Item_C.BP_EnableInputs
// (Event, Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                                   NoUse                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_Inventory_Item_C::BP_EnableInputs(bool* NoUse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Inventory_Item_C", "BP_EnableInputs");

	Params::WBP_Inventory_Item_C_BP_EnableInputs Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (NoUse != nullptr)
		*NoUse = Parms.NoUse;
}


// Function WBP_Inventory_Item.WBP_Inventory_Item_C.Cancel
// (Event, Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool UWBP_Inventory_Item_C::Cancel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Inventory_Item_C", "Cancel");

	Params::WBP_Inventory_Item_C_Cancel Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function WBP_Inventory_Item.WBP_Inventory_Item_C.CanEquip
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool UWBP_Inventory_Item_C::CanEquip()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Inventory_Item_C", "CanEquip");

	Params::WBP_Inventory_Item_C_CanEquip Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function WBP_Inventory_Item.WBP_Inventory_Item_C.ClearResource
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                                   NoUse                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_Inventory_Item_C::ClearResource(bool* NoUse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Inventory_Item_C", "ClearResource");

	Params::WBP_Inventory_Item_C_ClearResource Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (NoUse != nullptr)
		*NoUse = Parms.NoUse;
}


// Function WBP_Inventory_Item.WBP_Inventory_Item_C.Confirm
// (Event, Protected, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool UWBP_Inventory_Item_C::Confirm()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Inventory_Item_C", "Confirm");

	Params::WBP_Inventory_Item_C_Confirm Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function WBP_Inventory_Item.WBP_Inventory_Item_C.Discard
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UWBP_Inventory_Item_C::Discard()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Inventory_Item_C", "Discard");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_Inventory_Item.WBP_Inventory_Item_C.Equip
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FName                       ID                                                     (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const int32                             Index_0                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_Inventory_Item_C::Equip(const class FName ID, const int32 Index_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Inventory_Item_C", "Equip");

	Params::WBP_Inventory_Item_C_Equip Parms{};

	Parms.ID = ID;
	Parms.Index_0 = Index_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_Inventory_Item.WBP_Inventory_Item_C.EquipFail
// (Public, BlueprintCallable, BlueprintEvent)

void UWBP_Inventory_Item_C::EquipFail()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Inventory_Item_C", "EquipFail");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_Inventory_Item.WBP_Inventory_Item_C.ExchangeEquppedIndex
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             ID                                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   OldIndex                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   NewIndex                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool*                                   IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_Inventory_Item_C::ExchangeEquppedIndex(class FName ID, int32 OldIndex, int32 NewIndex, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Inventory_Item_C", "ExchangeEquppedIndex");

	Params::WBP_Inventory_Item_C_ExchangeEquppedIndex Parms{};

	Parms.ID = ID;
	Parms.OldIndex = OldIndex;
	Parms.NewIndex = NewIndex;

	UObject::ProcessEvent(Func, &Parms);

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;
}


// Function WBP_Inventory_Item.WBP_Inventory_Item_C.ExecuteUbergraph_WBP_Inventory_Item
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_Inventory_Item_C::ExecuteUbergraph_WBP_Inventory_Item(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Inventory_Item_C", "ExecuteUbergraph_WBP_Inventory_Item");

	Params::WBP_Inventory_Item_C_ExecuteUbergraph_WBP_Inventory_Item Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_Inventory_Item.WBP_Inventory_Item_C.GetFadeOutAnim
// (Event, Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UWidgetAnimation*                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash)

class UWidgetAnimation* UWBP_Inventory_Item_C::GetFadeOutAnim()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Inventory_Item_C", "GetFadeOutAnim");

	Params::WBP_Inventory_Item_C_GetFadeOutAnim Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function WBP_Inventory_Item.WBP_Inventory_Item_C.GetPopWindow
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UNocePopWindowWidget*             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)

class UNocePopWindowWidget* UWBP_Inventory_Item_C::GetPopWindow()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Inventory_Item_C", "GetPopWindow");

	Params::WBP_Inventory_Item_C_GetPopWindow Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function WBP_Inventory_Item.WBP_Inventory_Item_C.GetShortcutIndex
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

int32 UWBP_Inventory_Item_C::GetShortcutIndex()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Inventory_Item_C", "GetShortcutIndex");

	Params::WBP_Inventory_Item_C_GetShortcutIndex Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function WBP_Inventory_Item.WBP_Inventory_Item_C.HandleNotRepeatKeys
// (Event, Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FInputEvent&               InInputEvent                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// const struct FKey&                      InKey                                                  (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool UWBP_Inventory_Item_C::HandleNotRepeatKeys(const struct FInputEvent& InInputEvent, const struct FKey& InKey)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Inventory_Item_C", "HandleNotRepeatKeys");

	Params::WBP_Inventory_Item_C_HandleNotRepeatKeys Parms{};

	Parms.InInputEvent = std::move(InInputEvent);
	Parms.InKey = std::move(InKey);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function WBP_Inventory_Item.WBP_Inventory_Item_C.HandleRepeatKeys
// (Event, Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FInputEvent&               InInputEvent                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// const struct FKey&                      InKey                                                  (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool UWBP_Inventory_Item_C::HandleRepeatKeys(const struct FInputEvent& InInputEvent, const struct FKey& InKey)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Inventory_Item_C", "HandleRepeatKeys");

	Params::WBP_Inventory_Item_C_HandleRepeatKeys Parms{};

	Parms.InInputEvent = std::move(InInputEvent);
	Parms.InKey = std::move(InKey);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function WBP_Inventory_Item.WBP_Inventory_Item_C.OnAnalogValueChanged
// (Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FGeometry&                 MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// const struct FAnalogInputEvent&         InAnalogInputEvent                                     (BlueprintVisible, BlueprintReadOnly, Parm)
// struct FEventReply                      ReturnValue                                            (Parm, OutParm, ReturnParm)

struct FEventReply UWBP_Inventory_Item_C::OnAnalogValueChanged(const struct FGeometry& MyGeometry, const struct FAnalogInputEvent& InAnalogInputEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Inventory_Item_C", "OnAnalogValueChanged");

	Params::WBP_Inventory_Item_C_OnAnalogValueChanged Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InAnalogInputEvent = std::move(InAnalogInputEvent);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function WBP_Inventory_Item.WBP_Inventory_Item_C.OnInitialized
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UWBP_Inventory_Item_C::OnInitialized()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Inventory_Item_C", "OnInitialized");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_Inventory_Item.WBP_Inventory_Item_C.OnInputDeviceChanged
// (Event, Protected, BlueprintEvent)

void UWBP_Inventory_Item_C::OnInputDeviceChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Inventory_Item_C", "OnInputDeviceChanged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_Inventory_Item.WBP_Inventory_Item_C.OnListMouseConfirm
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Index_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_Inventory_Item_C::OnListMouseConfirm(int32 Index_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Inventory_Item_C", "OnListMouseConfirm");

	Params::WBP_Inventory_Item_C_OnListMouseConfirm Parms{};

	Parms.Index_0 = Index_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_Inventory_Item.WBP_Inventory_Item_C.OnListUpdateSelection
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Index_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_Inventory_Item_C::OnListUpdateSelection(int32 Index_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Inventory_Item_C", "OnListUpdateSelection");

	Params::WBP_Inventory_Item_C_OnListUpdateSelection Parms{};

	Parms.Index_0 = Index_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_Inventory_Item.WBP_Inventory_Item_C.OnPopWindowClose
// (Public, BlueprintCallable, BlueprintEvent)

void UWBP_Inventory_Item_C::OnPopWindowClose()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Inventory_Item_C", "OnPopWindowClose");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_Inventory_Item.WBP_Inventory_Item_C.OnShortcutListMouseConfirm
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Index_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_Inventory_Item_C::OnShortcutListMouseConfirm(int32 Index_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Inventory_Item_C", "OnShortcutListMouseConfirm");

	Params::WBP_Inventory_Item_C_OnShortcutListMouseConfirm Parms{};

	Parms.Index_0 = Index_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_Inventory_Item.WBP_Inventory_Item_C.OnShortcutListUpdateSelection
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Index_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_Inventory_Item_C::OnShortcutListUpdateSelection(int32 Index_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Inventory_Item_C", "OnShortcutListUpdateSelection");

	Params::WBP_Inventory_Item_C_OnShortcutListUpdateSelection Parms{};

	Parms.Index_0 = Index_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_Inventory_Item.WBP_Inventory_Item_C.PlayOffAnimation
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UWBP_Inventory_Item_C::PlayOffAnimation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Inventory_Item_C", "PlayOffAnimation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_Inventory_Item.WBP_Inventory_Item_C.PlayOnAnimation
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UWBP_Inventory_Item_C::PlayOnAnimation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Inventory_Item_C", "PlayOnAnimation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_Inventory_Item.WBP_Inventory_Item_C.RefreshEquippedItems
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class FName>                     ReturnValue                                            (Parm, OutParm, ReturnParm)

TArray<class FName> UWBP_Inventory_Item_C::RefreshEquippedItems()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Inventory_Item_C", "RefreshEquippedItems");

	Params::WBP_Inventory_Item_C_RefreshEquippedItems Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function WBP_Inventory_Item.WBP_Inventory_Item_C.RefreshListGuide
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UWBP_Inventory_Item_C::RefreshListGuide()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Inventory_Item_C", "RefreshListGuide");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_Inventory_Item.WBP_Inventory_Item_C.SetAllData
// (Event, Protected, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                                   NoUse                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_Inventory_Item_C::SetAllData(bool* NoUse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Inventory_Item_C", "SetAllData");

	Params::WBP_Inventory_Item_C_SetAllData Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (NoUse != nullptr)
		*NoUse = Parms.NoUse;
}


// Function WBP_Inventory_Item.WBP_Inventory_Item_C.ToEdit
// (Public, BlueprintCallable, BlueprintEvent)

void UWBP_Inventory_Item_C::ToEdit()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Inventory_Item_C", "ToEdit");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_Inventory_Item.WBP_Inventory_Item_C.ToList
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsCancel                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_Inventory_Item_C::ToList(bool IsCancel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Inventory_Item_C", "ToList");

	Params::WBP_Inventory_Item_C_ToList Parms{};

	Parms.IsCancel = IsCancel;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_Inventory_Item.WBP_Inventory_Item_C.ToView
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UWBP_Inventory_Item_C::ToView()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Inventory_Item_C", "ToView");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_Inventory_Item.WBP_Inventory_Item_C.Unequip
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UWBP_Inventory_Item_C::Unequip()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Inventory_Item_C", "Unequip");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_Inventory_Item.WBP_Inventory_Item_C.UpdateAllShortcuts
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UWBP_Inventory_Item_C::UpdateAllShortcuts()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Inventory_Item_C", "UpdateAllShortcuts");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_Inventory_Item.WBP_Inventory_Item_C.UpdateInputDeviceIfNeeded
// (BlueprintCallable, BlueprintEvent)

void UWBP_Inventory_Item_C::UpdateInputDeviceIfNeeded()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Inventory_Item_C", "UpdateInputDeviceIfNeeded");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_Inventory_Item.WBP_Inventory_Item_C.UpdateSelection
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const TArray<struct FNoceInventoryConsumable>&Items                                                  (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// int32                                   Index_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_Inventory_Item_C::UpdateSelection(const TArray<struct FNoceInventoryConsumable>& Items, int32 Index_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Inventory_Item_C", "UpdateSelection");

	Params::WBP_Inventory_Item_C_UpdateSelection Parms{};

	Parms.Items = std::move(Items);
	Parms.Index_0 = Index_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_Inventory_Item.WBP_Inventory_Item_C.UpdateShortcutIconText
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UWBP_ItemChild_C*                 Widget                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// int32                                   Index_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_Inventory_Item_C::UpdateShortcutIconText(class UWBP_ItemChild_C* Widget, int32 Index_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Inventory_Item_C", "UpdateShortcutIconText");

	Params::WBP_Inventory_Item_C_UpdateShortcutIconText Parms{};

	Parms.Widget = Widget;
	Parms.Index_0 = Index_0;

	UObject::ProcessEvent(Func, &Parms);
}

}

