#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Lock_Gimmick_Base

#include "Basic.hpp"

#include "NeoAudio_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "GameNoce_structs.hpp"
#include "BP_FSMGimmick_classes.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Lock_Gimmick_Base.BP_Lock_Gimmick_Base_C
// 0x0180 (0x1040 - 0x0EC0)
class ABP_Lock_Gimmick_Base_C final : public ABP_FSMGimmick_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_Lock_Gimmick_Base_C;             // 0x0EB8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USpotLightComponent*                    SpotLight;                                         // 0x0EC0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UArrowComponent*                        Arrow;                                             // 0x0EC8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UArrowComponent*                        Indicator;                                         // 0x0ED0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	bool                                          IsHorizontal;                                      // 0x0ED8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_ED9[0x7];                                      // 0x0ED9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        UnlockDuration;                                    // 0x0EE0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        LockDuration;                                      // 0x0EE8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                UnlockLocation;                                    // 0x0EF0(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ArrowOffset;                                       // 0x0F08(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsAutoCheckAnswer;                                 // 0x0F20(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CanPerformFailed;                                  // 0x0F21(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          EndGimmickWhenWrong;                               // 0x0F22(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F23[0x5];                                      // 0x0F23(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        FailedDialogDelayTime;                             // 0x0F28(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FNoceDialogDataRowHandle               FailedDialogRow;                                   // 0x0F30(0x0008)(Edit, BlueprintVisible, NoDestructor)
	struct FNoceDialogDataRowHandle               CameraZoomInDialogRow;                             // 0x0F38(0x0008)(Edit, BlueprintVisible, NoDestructor)
	struct FGameplayTag                           RequiredProgressTag;                               // 0x0F40(0x0008)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash)
	bool                                          IsExactMatch;                                      // 0x0F48(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F49[0x3];                                      // 0x0F49(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FNoceDialogDataRowHandle               RequiredDialogRow;                                 // 0x0F4C(0x0008)(Edit, BlueprintVisible, NoDestructor)
	class FName                                   GuideName;                                         // 0x0F54(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   ConfirmedGuideName;                                // 0x0F5C(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   GuideName_NoNotebook;                              // 0x0F64(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   ConfirmedGuideName_NoNotebook;                     // 0x0F6C(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CurrentIndex;                                      // 0x0F74(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<TSoftObjectPtr<class UBP_LockCharComponent_Base_C>> CharList;                             // 0x0F78(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	double                                        HorizontalInputInterval;                           // 0x0F88(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        InputTimer;                                        // 0x0F90(0x0008)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FNeoAudioTriggerIdHandle               AudioRotate;                                       // 0x0F98(0x0008)(Edit, BlueprintVisible, NoDestructor)
	struct FNeoAudioTriggerIdHandle               AudioUpDown;                                       // 0x0FA0(0x0008)(Edit, BlueprintVisible, NoDestructor)
	struct FNeoAudioTriggerIdHandle               AudioCorrect;                                      // 0x0FA8(0x0008)(Edit, BlueprintVisible, NoDestructor)
	bool                                          IsUnlocked;                                        // 0x0FB0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsShowDebugInfo;                                   // 0x0FB1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FB2[0x6];                                      // 0x0FB2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void()>              OnCheckCorrectCalled;                              // 0x0FB8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMulticastInlineDelegate<void()>              OnCheckWrongCalled;                                // 0x0FC8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	double                                        DelayToCompleteGimmickTime;                        // 0x0FD8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsUnlockAnim;                                      // 0x0FE0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FE1[0x7];                                      // 0x0FE1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        AnimDuration;                                      // 0x0FE8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        AnimTimer;                                         // 0x0FF0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        AnimBlendAlpha;                                    // 0x0FF8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           AnimTimerHandle;                                   // 0x1000(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          KeyItemPlaced;                                     // 0x1008(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1009[0x3];                                     // 0x1009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CheckRound;                                        // 0x100C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FNoceKeyItemDataRowHandle              KeyItem;                                           // 0x1010(0x0008)(Edit, BlueprintVisible, NoDestructor)
	struct FNoceDialogDataRowHandle               MissingKeyItemDialogRow;                           // 0x1018(0x0008)(Edit, BlueprintVisible, NoDestructor)
	TArray<int32>                                 MissingCharIndexList;                              // 0x1020(0x0010)(Edit, BlueprintVisible)
	double                                        VerticalInputInterval;                             // 0x1030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void UpdateForRound();
	void SubstractCurrentIndex();
	void StartGimmick(class ANocePlayerCharacter* InCharacter);
	void MoveToCharNext();
	void IsCharValid(bool* IsValid);
	void ShowDebugInfo(bool IsShow);
	void ShowChar(bool IsShow);
	void SetupForRound();
	void Setup();
	void SetPerformFinished();
	void SetFocus();
	void ReceiveTick(float DeltaSeconds);
	void ReceiveBeginPlay();
	void ReceiveActorBeginOverlap(class AActor* OtherActor);
	void PlayAnimation();
	void OnCheckWrong();
	void OnCheckCorrect();
	void OnCameraZoomIn();
	void MoveToPrevious();
	void MoveToNext();
	void HandleUp();
	void MoveToCharPrevious();
	void HandleRight();
	void HandlePlayAnimation(bool IsUnlock);
	void HandleLeft();
	void HandleDown();
	void HandleCheckAnswer(bool* IsCorrect);
	void GetFloatCurveValue(double Alpha, class UCurveFloat* FloatCurve, double* Value);
	void GetAdditionalAnimationDuration(double* AdditionalDuration);
	void ExitGimmick();
	void ExecuteUbergraph_BP_Lock_Gimmick_Base(int32 EntryPoint);
	bool ExecuteInstantFeedback(class AActor* InteractPawn_0);
	void CheckAnswer(bool* IsCorrect);
	void Check_KeyUpdate(double AxisMoveRight, double AxisMoveForward);
	void CanInput(bool* CanInput_0);
	void BPI_LockGimmick_OnCheckWrong();
	void BPI_LockGimmick_OnCheckCorrect();
	void BPI_LockGimmick_OnCameraZoomIn();
	void BPI_LockGimmick_HandleUp();
	void BPI_LockGimmick_HandleRight();
	void BPI_LockGimmick_HandleLeft();
	void BPI_LockGimmick_HandleDown();
	void BPI_LockGimmick_HandleCheckAnswer(bool* IsCorrect);
	void BPI_LockGimmick_GetAutoCheckAnswer(bool* IsAutoCheckAnswer_0, class FName* GuideName_0, class FName* ConfirmedGuideName_0);
	void BP_OnRecordLoaded();
	void AddCurrentIndex();

public:
	static class UClass* StaticClass()
	{
		BP_STATIC_CLASS_IMPL("BP_Lock_Gimmick_Base_C")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"BP_Lock_Gimmick_Base_C")
	}
	static class ABP_Lock_Gimmick_Base_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Lock_Gimmick_Base_C>();
	}
};
DUMPER7_ASSERTS_ABP_Lock_Gimmick_Base_C;

}

