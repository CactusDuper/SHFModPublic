#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_NoceGameFunctionLibrary

#include "Basic.hpp"

#include "Engine_classes.hpp"
#include "GameNoce_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_NoceGameFunctionLibrary.BP_NoceGameFunctionLibrary_C
// 0x0000 (0x0028 - 0x0028)
class UBP_NoceGameFunctionLibrary_C final : public UBlueprintFunctionLibrary
{
public:
	static void SSwordEnemyDieEvent(class ANoceEnemyCharacter* InEnemy, class UObject* __WorldContext);
	static void RequestWakeMeshObject(class UPrimitiveComponent* StaticComp, const struct FVector& Impulse, class UObject* __WorldContext);
	static void RequestWakeChaosObject(class UGeometryCollectionComponent* GeometryCollectionComp, const struct FVector& Impulse, class UObject* __WorldContext);
	static void RequestPortalUpdateDataLayer(const struct FGameplayTag& PortalLayerTag, class UObject* __WorldContext);
	static void RequestGameOverFlowEnabled(bool Enable, class UObject* __WorldContext);
	static void RequestEnergySavingMode(bool Activate, class UObject* __WorldContext);
	static void RemovePortalAdditionalTags(class UObject* __WorldContext);
	static void IsGameProgressBlocked(class UObject* __WorldContext, bool* Value);
	static void IsDefaultDarkHinakoClass(class UObject* __WorldContext, bool* IsClaw);

public:
	static class UClass* StaticClass()
	{
		BP_STATIC_CLASS_IMPL("BP_NoceGameFunctionLibrary_C")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"BP_NoceGameFunctionLibrary_C")
	}
	static class UBP_NoceGameFunctionLibrary_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_NoceGameFunctionLibrary_C>();
	}
};
DUMPER7_ASSERTS_UBP_NoceGameFunctionLibrary_C;

}

