#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Pl_Base_Base_State

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "GameNoce_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "SMSystem_structs.hpp"
#include "SMSystem_classes.hpp"


namespace SDK
{

// SMNodeBlueprintGeneratedClass BP_Pl_Base_Base_State.BP_Pl_Base_Base_State_C
// 0x0110 (0x0200 - 0x00F0)
class UBP_Pl_Base_Base_State_C : public USMStateInstance
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x00F0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class FName                                   ABP_StateMachineName;                              // 0x00F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	class ABP_Pl_Base_NocePlayerCharacter_C*      BP_NocePlayerCharacter;                            // 0x0100(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class ANocePlayerState*                       NocePlayerState;                                   // 0x0108(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class ANocePlayerController*                  NocePlayerController;                              // 0x0110(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UNoceAnimCancelComponent*               NoceAnimCancel;                                    // 0x0118(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UNoceMontageStateMonitorComponent*      NoceMontageStateMonitor;                           // 0x0120(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UNocePlayerAnimInstance*                NocePlayerAnimInstance;                            // 0x0128(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          InputAccepted;                                     // 0x0130(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_131[0x7];                                      // 0x0131(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UNoceAbilitySystemComponent*            NoceAbilitySystem;                                 // 0x0138(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UCharacterMovementComponent*            CharacterMovement;                                 // 0x0140(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBP_Pl_Base_InteractInfoComp_C*         BP_InteractInfoComp;                               // 0x0148(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UNocePlayerStaminaComponent*            PlayerStaminaComp;                                 // 0x0150(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UNoceInputQueueComponent*               InputQueueComp;                                    // 0x0158(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UNoceInvincibleComponent*               InvincibleComp;                                    // 0x0160(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UNoceTimeComponent*                     TimeComp;                                          // 0x0168(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBP_Pl_AutoAimComponent_C*              Auto_Aim_Component;                                // 0x0170(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UNoceSanityComponent*                   SanityComponent;                                   // 0x0178(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 GE_SanityCostSetByCaller;                          // 0x0180(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 GE_CurrentMaxSanitySetByCaller;                    // 0x0188(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          Initialized;                                       // 0x0190(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_191[0x7];                                      // 0x0191(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<ENocePlayerAnimStateType>              LocomotionAnimStateTypes;                          // 0x0198(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UNocePlayerCameraComponent*             PlayerCamera;                                      // 0x01A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBP_NocePlayerCameraRotateComponent_C*  PlayerCameraRotate;                                // 0x01B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UNocePlayerKatanaComponent*             PlayerKatana;                                      // 0x01B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UNocePlayerClawTransformComponent*      PlayerClawTransform;                               // 0x01C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UNocePlayerInputHelperComponent*        PlayerInputHelper;                                 // 0x01C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          ApplyCachedPos;                                    // 0x01D0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D1[0x7];                                      // 0x01D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CachedPosWaitMontageBlendInTimer;                  // 0x01D8(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	float                                         HeadOverlapRadius;                                 // 0x01E0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E4[0x4];                                      // 0x01E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                HeadOffset;                                        // 0x01E8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void Cached_Pos_Wait_Montage_Blend_In(float InTime);
	void CanAcceptInputAttack(bool* AttackAccepted);
	void CanAcceptInputClawTransform(bool* AttackAccepted);
	void CanAcceptInputDodge(bool* AttackAccepted);
	bool CanAcceptInputFocus();
	bool CanAcceptInputInteract();
	void CanSkipThisState(bool* CanSkip);
	bool CanUseCounter();
	bool CanVault();
	void CheckShojiArmCorrector();
	void ClearApplyCachedPos();
	double ComputeAngle(const struct FVector& A, const struct FVector& B);
	void ConstructionScript();
	void CostStamina(class FName InStaminaKey);
	void DebugInfo_LogStateBegin();
	void DebugInfo_LogStateEnd();
	void ExecuteUbergraph_BP_Pl_Base_Base_State(int32 EntryPoint);
	void GetAnimCancelType(ENocePlayerAnimStateType InAnimStateType, ENoceAnimCancel* AnimCancel);
	void GetAnimCancelTypeHeavyAttack(ENocePlayerAnimStateType InAnimStateType, ENoceAnimCancel* AnimCancel);
	void GetAnimCancelTypeLightAttack(ENocePlayerAnimStateType InAnimStateType, ENoceAnimCancel* AnimCancel);
	double GetInputActionDownTime(class FName InputAction);
	void HandleAutoCounter(bool* OutAutoCounter);
	void HandleBrokenWeapon();
	void HandleCounter(bool* OutCounter);
	void HandleDeflect(struct FNoceAttackDeflectResult& InDeflectResult);
	void HandleInputActionClawTransform(bool InTransformKB);
	void HandleInputActionDodge(bool* OutCanDodge);
	void HandleInputActionForLocomotion(ENoceInputAction InInputAction, bool InPressed);
	void HandleInputActionHeavyAttack(bool InCheckCounterCancel, bool* OutCanHeavyAttack);
	void HandleInputActionInteract();
	void HandleInputActionLightAttack(bool* OutCanLightAttack);
	void HandleInputActionSprint();
	void HandleInputAxis(ENoceInputAxis InInputAxis, double InValue, TArray<ENocePlayerAnimStateType>& InAnimStateTypes);
	void HandleInputQueue(const TArray<ENocePlayerAnimStateType>& InAnimStateTypes);
	void HandleInputQueueForLocomotion();
	void HandleUsingFocus(bool* OutValue);
	void HasObstacleInFront(bool InCheckSprint, bool* OutHasObstacle);
	void Initialize();
	void InNoCostStamina(bool* Value);
	void InStaminaTired(bool* Value);
	bool IsChangeWeapon();
	bool IsClawGTransformToClaw();
	bool IsCustomUpperBody();
	bool IsForceTransformToClaw();
	bool IsHellModeDamage();
	bool IsInputActionPressed(class FName InputAction);
	bool IsLeaveLocomotion();
	bool IsUseShortcutItem();
	void IsWeaponBroken(bool* OutValue);
	void OnCachedPosMontageBlendIn();
	void OnInputAction(ENoceInputAction InInputAction, bool InPressed);
	void OnInputAxis(ENoceInputAxis InInputAxis, float InValue);
	void OnMontageStateChanged(ENoceMontageState NewMontageState);
	void OnStateBegin();
	void OnStateEnd();
	void OnStateInitialized();
	void PlaySprintForbiddenHint();
	void PlayStamiaTiredForbiddenHint();
	void QueueDodgeState();
	void QueueStaminaState();
	void ResetAnimInstanceVariables();
	void SetupCanEnterDodge();
	void SetupClawGTransformToClaw();
	void SetupClawTransform();
	void SetupDodgeDirection();
	void SetupFocusAttack();
	void SetupWantToAttack();
	void SetupWantToDodge();
	void UpdateCharacterRotationMode();
	void UpdateForApplyCachedPos();

public:
	static class UClass* StaticClass()
	{
		BP_STATIC_CLASS_IMPL("BP_Pl_Base_Base_State_C")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"BP_Pl_Base_Base_State_C")
	}
	static class UBP_Pl_Base_Base_State_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_Pl_Base_Base_State_C>();
	}
};
DUMPER7_ASSERTS_UBP_Pl_Base_Base_State_C;

}

