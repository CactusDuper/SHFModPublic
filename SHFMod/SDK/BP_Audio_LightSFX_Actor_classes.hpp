#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Audio_LightSFX_Actor

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "NeoAudio_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Audio_LightSFX_Actor.BP_Audio_LightSFX_Actor_C
// 0x0070 (0x0300 - 0x0290)
class ABP_Audio_LightSFX_Actor_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0290(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UNeoAudioSoundComponent*                NeoAudioSound;                                     // 0x0298(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x02A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class ALight*                                 Light;                                             // 0x02A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	struct FNeoAudioTriggerIdHandle               Light_SFX;                                         // 0x02B0(0x0008)(Edit, BlueprintVisible, NoDestructor)
	struct FNeoAudioTriggerIdHandle               LightSFX_Hum;                                      // 0x02B8(0x0008)(Edit, BlueprintVisible, NoDestructor)
	struct FNeoAudioTriggerIdHandle               Stop_LightSFX_Hum;                                 // 0x02C0(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	double                                        Threshold_Low;                                     // 0x02C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Threshold_High;                                    // 0x02D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Cooldown;                                          // 0x02D8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          TurnOnValueFilter;                                 // 0x02DC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Looping;                                           // 0x02DD(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2DE[0x2];                                      // 0x02DE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FNeoAudioTriggerIdHandle               Lightoff_SFX;                                      // 0x02E0(0x0008)(Edit, BlueprintVisible, NoDestructor)
	bool                                          ManualStop;                                        // 0x02E8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E9[0x7];                                      // 0x02E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Chapter;                                           // 0x02F0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)

public:
	void AssignLight(const struct FNeoAudioTriggerIdHandle& Lightoff_SFX_0, const struct FNeoAudioTriggerIdHandle& LightSFX_Hum_0, bool Condition, const struct FNeoAudioTriggerIdHandle& Light_SFX_0, class ALight* Light_0);
	void ExecuteUbergraph_BP_Audio_LightSFX_Actor(int32 EntryPoint);
	void GetIntensity();
	void LightOn();
	void ReceiveBeginPlay();
	void ReturnIntensity(float* Intensity);
	void SetThreshold(double Threshold_Low_0, double Threshold_High_0, float Cooldown_0);

public:
	static class UClass* StaticClass()
	{
		BP_STATIC_CLASS_IMPL("BP_Audio_LightSFX_Actor_C")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"BP_Audio_LightSFX_Actor_C")
	}
	static class ABP_Audio_LightSFX_Actor_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Audio_LightSFX_Actor_C>();
	}
};
DUMPER7_ASSERTS_ABP_Audio_LightSFX_Actor_C;

}

