#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Rummage_Base

#include "Basic.hpp"

#include "BP_Rummage_Base_classes.hpp"
#include "BP_Rummage_Base_parameters.hpp"


namespace SDK
{

// Function BP_Rummage_Base.BP_Rummage_Base_C.BindEventToPickup
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_Rummage_Base_C::BindEventToPickup()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Rummage_Base_C", "BindEventToPickup");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Rummage_Base.BP_Rummage_Base_C.BPI_Gimmick_GetCameraBlendInVariables
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// double*                                 BlendInTime                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double*                                 BlendInExp                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32*                                  ViewTargetBlend                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Rummage_Base_C::BPI_Gimmick_GetCameraBlendInVariables(double* BlendInTime, double* BlendInExp, int32* ViewTargetBlend)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Rummage_Base_C", "BPI_Gimmick_GetCameraBlendInVariables");

	Params::BP_Rummage_Base_C_BPI_Gimmick_GetCameraBlendInVariables Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (BlendInTime != nullptr)
		*BlendInTime = Parms.BlendInTime;

	if (BlendInExp != nullptr)
		*BlendInExp = Parms.BlendInExp;

	if (ViewTargetBlend != nullptr)
		*ViewTargetBlend = Parms.ViewTargetBlend;
}


// Function BP_Rummage_Base.BP_Rummage_Base_C.BPI_Rummage_CanCompeteGimmick
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                                   Output                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Rummage_Base_C::BPI_Rummage_CanCompeteGimmick(bool* Output)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Rummage_Base_C", "BPI_Rummage_CanCompeteGimmick");

	Params::BP_Rummage_Base_C_BPI_Rummage_CanCompeteGimmick Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Output != nullptr)
		*Output = Parms.Output;
}


// Function BP_Rummage_Base.BP_Rummage_Base_C.BPI_Rummage_IsDisablePlayerInput
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                                   Disable                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Rummage_Base_C::BPI_Rummage_IsDisablePlayerInput(bool* Disable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Rummage_Base_C", "BPI_Rummage_IsDisablePlayerInput");

	Params::BP_Rummage_Base_C_BPI_Rummage_IsDisablePlayerInput Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Disable != nullptr)
		*Disable = Parms.Disable;
}


// Function BP_Rummage_Base.BP_Rummage_Base_C.BPI_Rummage_IsHidePlayer
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                                   HidePlayer_0                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Rummage_Base_C::BPI_Rummage_IsHidePlayer(bool* HidePlayer_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Rummage_Base_C", "BPI_Rummage_IsHidePlayer");

	Params::BP_Rummage_Base_C_BPI_Rummage_IsHidePlayer Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (HidePlayer_0 != nullptr)
		*HidePlayer_0 = Parms.HidePlayer_0;
}


// Function BP_Rummage_Base.BP_Rummage_Base_C.BPI_Rummage_OnGimmickCameraBlendIn
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_Rummage_Base_C::BPI_Rummage_OnGimmickCameraBlendIn()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Rummage_Base_C", "BPI_Rummage_OnGimmickCameraBlendIn");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Rummage_Base.BP_Rummage_Base_C.CanCompeteGimmick
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                                   Output                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Rummage_Base_C::CanCompeteGimmick(bool* Output)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Rummage_Base_C", "CanCompeteGimmick");

	Params::BP_Rummage_Base_C_CanCompeteGimmick Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Output != nullptr)
		*Output = Parms.Output;
}


// Function BP_Rummage_Base.BP_Rummage_Base_C.CheckAndSetSpawnedItem
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ANoceInteractableBase*            Item                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool*                                   IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Rummage_Base_C::CheckAndSetSpawnedItem(class ANoceInteractableBase* Item, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Rummage_Base_C", "CheckAndSetSpawnedItem");

	Params::BP_Rummage_Base_C_CheckAndSetSpawnedItem Parms{};

	Parms.Item = Item;

	UObject::ProcessEvent(Func, &Parms);

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;
}


// Function BP_Rummage_Base.BP_Rummage_Base_C.ExecuteInstantFeedback
// (Event, Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           InteractPawn_0                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool ABP_Rummage_Base_C::ExecuteInstantFeedback(class AActor* InteractPawn_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Rummage_Base_C", "ExecuteInstantFeedback");

	Params::BP_Rummage_Base_C_ExecuteInstantFeedback Parms{};

	Parms.InteractPawn_0 = InteractPawn_0;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_Rummage_Base.BP_Rummage_Base_C.ExecuteUbergraph_BP_Rummage_Base
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Rummage_Base_C::ExecuteUbergraph_BP_Rummage_Base(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Rummage_Base_C", "ExecuteUbergraph_BP_Rummage_Base");

	Params::BP_Rummage_Base_C_ExecuteUbergraph_BP_Rummage_Base Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Rummage_Base.BP_Rummage_Base_C.ExitGimmick
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_Rummage_Base_C::ExitGimmick()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Rummage_Base_C", "ExitGimmick");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Rummage_Base.BP_Rummage_Base_C.GetHintLocationBP
// (Event, Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

struct FVector ABP_Rummage_Base_C::GetHintLocationBP()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Rummage_Base_C", "GetHintLocationBP");

	Params::BP_Rummage_Base_C_GetHintLocationBP Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_Rummage_Base.BP_Rummage_Base_C.GetSpawnTransform
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FTransform*                      OutTransform                                           (Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Rummage_Base_C::GetSpawnTransform(struct FTransform* OutTransform)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Rummage_Base_C", "GetSpawnTransform");

	Params::BP_Rummage_Base_C_GetSpawnTransform Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (OutTransform != nullptr)
		*OutTransform = std::move(Parms.OutTransform);
}


// Function BP_Rummage_Base.BP_Rummage_Base_C.NeedSetAudioState
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool*                                   Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Rummage_Base_C::NeedSetAudioState(bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Rummage_Base_C", "NeedSetAudioState");

	Params::BP_Rummage_Base_C_NeedSetAudioState Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function BP_Rummage_Base.BP_Rummage_Base_C.NeedSetPlayerToUseGimmickState
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool*                                   Yes                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Rummage_Base_C::NeedSetPlayerToUseGimmickState(bool* Yes)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Rummage_Base_C", "NeedSetPlayerToUseGimmickState");

	Params::BP_Rummage_Base_C_NeedSetPlayerToUseGimmickState Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Yes != nullptr)
		*Yes = Parms.Yes;
}


// Function BP_Rummage_Base.BP_Rummage_Base_C.OnGimmickCameraBlendIn
// (Protected, BlueprintCallable, BlueprintEvent)

void ABP_Rummage_Base_C::OnGimmickCameraBlendIn()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Rummage_Base_C", "OnGimmickCameraBlendIn");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Rummage_Base.BP_Rummage_Base_C.OnPrepareGimmick
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_Rummage_Base_C::OnPrepareGimmick()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Rummage_Base_C", "OnPrepareGimmick");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Rummage_Base.BP_Rummage_Base_C.OnPrePerformRummageFinish
// (Protected, BlueprintCallable, BlueprintEvent)

void ABP_Rummage_Base_C::OnPrePerformRummageFinish()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Rummage_Base_C", "OnPrePerformRummageFinish");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Rummage_Base.BP_Rummage_Base_C.OnSpawned
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_Interact_Pickup_C*            SpawnedActor                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_Rummage_Base_C::OnSpawned(class ABP_Interact_Pickup_C* SpawnedActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Rummage_Base_C", "OnSpawned");

	Params::BP_Rummage_Base_C_OnSpawned Parms{};

	Parms.SpawnedActor = SpawnedActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Rummage_Base.BP_Rummage_Base_C.OnSpawnedItemPickedUp
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_Rummage_Base_C::OnSpawnedItemPickedUp()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Rummage_Base_C", "OnSpawnedItemPickedUp");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Rummage_Base.BP_Rummage_Base_C.PerformRummage
// (Protected, BlueprintCallable, BlueprintEvent)

void ABP_Rummage_Base_C::PerformRummage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Rummage_Base_C", "PerformRummage");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Rummage_Base.BP_Rummage_Base_C.PrePerformRummage
// (Protected, BlueprintCallable, BlueprintEvent)

void ABP_Rummage_Base_C::PrePerformRummage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Rummage_Base_C", "PrePerformRummage");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Rummage_Base.BP_Rummage_Base_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_Rummage_Base_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Rummage_Base_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Rummage_Base.BP_Rummage_Base_C.ReceiveEndPlay
// (Event, Protected, BlueprintEvent)
// Parameters:
// EEndPlayReason                          EndPlayReason                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Rummage_Base_C::ReceiveEndPlay(EEndPlayReason EndPlayReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Rummage_Base_C", "ReceiveEndPlay");

	Params::BP_Rummage_Base_C_ReceiveEndPlay Parms{};

	Parms.EndPlayReason = EndPlayReason;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Rummage_Base.BP_Rummage_Base_C.ResizeSpawnedItemTriggerBox
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_Rummage_Base_C::ResizeSpawnedItemTriggerBox()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Rummage_Base_C", "ResizeSpawnedItemTriggerBox");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Rummage_Base.BP_Rummage_Base_C.SpawnTargetStuff
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_Rummage_Base_C::SpawnTargetStuff()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Rummage_Base_C", "SpawnTargetStuff");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Rummage_Base.BP_Rummage_Base_C.UpdatePickupsPointList
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_Rummage_Base_C::UpdatePickupsPointList()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Rummage_Base_C", "UpdatePickupsPointList");

	UObject::ProcessEvent(Func, nullptr);
}

}

