#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPI_NocePlayerCharacter

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "GameNoce_structs.hpp"
#include "GameplayTags_structs.hpp"


namespace SDK::Params
{

// Function BPI_NocePlayerCharacter.BPI_NocePlayerCharacter_C.BPI_ApplyCameraMode
// 0x000C (0x000C - 0x0000)
struct BPI_NocePlayerCharacter_C_BPI_ApplyCameraMode final
{
public:
	struct FGameplayTag                           CameraMode;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	bool                                          WithInterpolation;                                 // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ForceSet;                                          // 0x0009(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
DUMPER7_ASSERTS_BPI_NocePlayerCharacter_C_BPI_ApplyCameraMode;

// Function BPI_NocePlayerCharacter.BPI_NocePlayerCharacter_C.BPI_ApplyCustomCamera
// 0x000C (0x000C - 0x0000)
struct BPI_NocePlayerCharacter_C_BPI_ApplyCustomCamera final
{
public:
	struct FGameplayTag                           CameraMode;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	bool                                          WithInterpolation;                                 // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
DUMPER7_ASSERTS_BPI_NocePlayerCharacter_C_BPI_ApplyCustomCamera;

// Function BPI_NocePlayerCharacter.BPI_NocePlayerCharacter_C.BPI_ApplyDamageWithReaction
// 0x0038 (0x0038 - 0x0000)
struct BPI_NocePlayerCharacter_C_BPI_ApplyDamageWithReaction final
{
public:
	double                                        InHealthDamage;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        InWinceDamage;                                     // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        InMaxSanityDamage;                                 // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        InStaminaDamage;                                   // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        InMaxSanityDamageToHealthDamageRatio;              // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsForceWince;                                      // 0x0028(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENoceWinceType                                InWinceType;                                       // 0x0029(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENoceDeathType                                InDeathType;                                       // 0x002A(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          InCheckInvincible_;                                // 0x002B(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          InHealthDamageEffectedByDamageRatio;               // 0x002C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          InHealthDamageApplyGutsCheck;                      // 0x002D(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          InIsLimitHealth;                                   // 0x002E(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          InCheckOmamoriKagami;                              // 0x002F(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          InCheckSuperArmor;                                 // 0x0030(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
DUMPER7_ASSERTS_BPI_NocePlayerCharacter_C_BPI_ApplyDamageWithReaction;

// Function BPI_NocePlayerCharacter.BPI_NocePlayerCharacter_C.BPI_DebugPlayerDeath
// 0x0008 (0x0008 - 0x0000)
struct BPI_NocePlayerCharacter_C_BPI_DebugPlayerDeath final
{
public:
	int32                                         DeathType;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         DeathDir;                                          // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
DUMPER7_ASSERTS_BPI_NocePlayerCharacter_C_BPI_DebugPlayerDeath;

// Function BPI_NocePlayerCharacter.BPI_NocePlayerCharacter_C.BPI_DebugPlayerInvincbile
// 0x0001 (0x0001 - 0x0000)
struct BPI_NocePlayerCharacter_C_BPI_DebugPlayerInvincbile final
{
public:
	bool                                          InEnable;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
DUMPER7_ASSERTS_BPI_NocePlayerCharacter_C_BPI_DebugPlayerInvincbile;

// Function BPI_NocePlayerCharacter.BPI_NocePlayerCharacter_C.BPI_DebugPlayerNoCostStamina
// 0x0001 (0x0001 - 0x0000)
struct BPI_NocePlayerCharacter_C_BPI_DebugPlayerNoCostStamina final
{
public:
	bool                                          InEable;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
DUMPER7_ASSERTS_BPI_NocePlayerCharacter_C_BPI_DebugPlayerNoCostStamina;

// Function BPI_NocePlayerCharacter.BPI_NocePlayerCharacter_C.BPI_DebugPlayerNoStaminaTiredTimerTick
// 0x0001 (0x0001 - 0x0000)
struct BPI_NocePlayerCharacter_C_BPI_DebugPlayerNoStaminaTiredTimerTick final
{
public:
	bool                                          InEnable;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
DUMPER7_ASSERTS_BPI_NocePlayerCharacter_C_BPI_DebugPlayerNoStaminaTiredTimerTick;

// Function BPI_NocePlayerCharacter.BPI_NocePlayerCharacter_C.BPI_DebugSetNoCostClawTransform
// 0x0001 (0x0001 - 0x0000)
struct BPI_NocePlayerCharacter_C_BPI_DebugSetNoCostClawTransform final
{
public:
	bool                                          InEnable;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
DUMPER7_ASSERTS_BPI_NocePlayerCharacter_C_BPI_DebugSetNoCostClawTransform;

// Function BPI_NocePlayerCharacter.BPI_NocePlayerCharacter_C.BPI_DropWeapon
// 0x0018 (0x0018 - 0x0000)
struct BPI_NocePlayerCharacter_C_BPI_DropWeapon final
{
public:
	struct FVector                                Impulse;                                           // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
DUMPER7_ASSERTS_BPI_NocePlayerCharacter_C_BPI_DropWeapon;

// Function BPI_NocePlayerCharacter.BPI_NocePlayerCharacter_C.BPI_EnableForceStay
// 0x0001 (0x0001 - 0x0000)
struct BPI_NocePlayerCharacter_C_BPI_EnableForceStay final
{
public:
	bool                                          InEnable;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
DUMPER7_ASSERTS_BPI_NocePlayerCharacter_C_BPI_EnableForceStay;

// Function BPI_NocePlayerCharacter.BPI_NocePlayerCharacter_C.BPI_EnableMaterialsClaw
// 0x0001 (0x0001 - 0x0000)
struct BPI_NocePlayerCharacter_C_BPI_EnableMaterialsClaw final
{
public:
	bool                                          InEnable;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
DUMPER7_ASSERTS_BPI_NocePlayerCharacter_C_BPI_EnableMaterialsClaw;

// Function BPI_NocePlayerCharacter.BPI_NocePlayerCharacter_C.BPI_EnableMaterialsClawG
// 0x0001 (0x0001 - 0x0000)
struct BPI_NocePlayerCharacter_C_BPI_EnableMaterialsClawG final
{
public:
	bool                                          InEnable;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
DUMPER7_ASSERTS_BPI_NocePlayerCharacter_C_BPI_EnableMaterialsClawG;

// Function BPI_NocePlayerCharacter.BPI_NocePlayerCharacter_C.BPI_GetAudioProbeLocation
// 0x0018 (0x0018 - 0x0000)
struct BPI_NocePlayerCharacter_C_BPI_GetAudioProbeLocation final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
DUMPER7_ASSERTS_BPI_NocePlayerCharacter_C_BPI_GetAudioProbeLocation;

// Function BPI_NocePlayerCharacter.BPI_NocePlayerCharacter_C.BPI_GetCameraViewRotation
// 0x0018 (0x0018 - 0x0000)
struct BPI_NocePlayerCharacter_C_BPI_GetCameraViewRotation final
{
public:
	struct FRotator                               Rotation;                                          // 0x0000(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
DUMPER7_ASSERTS_BPI_NocePlayerCharacter_C_BPI_GetCameraViewRotation;

// Function BPI_NocePlayerCharacter.BPI_NocePlayerCharacter_C.BPI_GetCounterAutoAimSearchInfo
// 0x0010 (0x0010 - 0x0000)
struct BPI_NocePlayerCharacter_C_BPI_GetCounterAutoAimSearchInfo final
{
public:
	double                                        OutRadius;                                         // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        OutHalfAngle;                                      // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
DUMPER7_ASSERTS_BPI_NocePlayerCharacter_C_BPI_GetCounterAutoAimSearchInfo;

// Function BPI_NocePlayerCharacter.BPI_NocePlayerCharacter_C.BPI_HandleDamage
// 0x0178 (0x0178 - 0x0000)
struct BPI_NocePlayerCharacter_C_BPI_HandleDamage final
{
public:
	struct FNoceAttackHitResult                   InAttackHitResult;                                 // 0x0000(0x0178)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, ContainsInstancedReference)
};
DUMPER7_ASSERTS_BPI_NocePlayerCharacter_C_BPI_HandleDamage;

// Function BPI_NocePlayerCharacter.BPI_NocePlayerCharacter_C.BPI_HandleOnSlopeChanged
// 0x0001 (0x0001 - 0x0000)
struct BPI_NocePlayerCharacter_C_BPI_HandleOnSlopeChanged final
{
public:
	bool                                          InIsOnSlope;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
DUMPER7_ASSERTS_BPI_NocePlayerCharacter_C_BPI_HandleOnSlopeChanged;

// Function BPI_NocePlayerCharacter.BPI_NocePlayerCharacter_C.BPI_InRealBattleStatus
// 0x0001 (0x0001 - 0x0000)
struct BPI_NocePlayerCharacter_C_BPI_InRealBattleStatus final
{
public:
	bool                                          OutValue;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
DUMPER7_ASSERTS_BPI_NocePlayerCharacter_C_BPI_InRealBattleStatus;

// Function BPI_NocePlayerCharacter.BPI_NocePlayerCharacter_C.BPI_LockInputWithDuration
// 0x0018 (0x0018 - 0x0000)
struct BPI_NocePlayerCharacter_C_BPI_LockInputWithDuration final
{
public:
	bool                                          InAcceptAction;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          InAcceptAxis;                                      // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          InAcceptUIAction;                                  // 0x0002(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          InAcceptCamera;                                    // 0x0003(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   InToken;                                           // 0x0004(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        InDuration;                                        // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
DUMPER7_ASSERTS_BPI_NocePlayerCharacter_C_BPI_LockInputWithDuration;

// Function BPI_NocePlayerCharacter.BPI_NocePlayerCharacter_C.BPI_ResetCustomCamera
// 0x0001 (0x0001 - 0x0000)
struct BPI_NocePlayerCharacter_C_BPI_ResetCustomCamera final
{
public:
	bool                                          WithInterpolation;                                 // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
DUMPER7_ASSERTS_BPI_NocePlayerCharacter_C_BPI_ResetCustomCamera;

// Function BPI_NocePlayerCharacter.BPI_NocePlayerCharacter_C.BPI_SetCameraViewRotation
// 0x0018 (0x0018 - 0x0000)
struct BPI_NocePlayerCharacter_C_BPI_SetCameraViewRotation final
{
public:
	struct FRotator                               Rotation;                                          // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
DUMPER7_ASSERTS_BPI_NocePlayerCharacter_C_BPI_SetCameraViewRotation;

// Function BPI_NocePlayerCharacter.BPI_NocePlayerCharacter_C.BPI_SetClawFurWPOIntensityForCutscene
// 0x0008 (0x0008 - 0x0000)
struct BPI_NocePlayerCharacter_C_BPI_SetClawFurWPOIntensityForCutscene final
{
public:
	double                                        InValue;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
DUMPER7_ASSERTS_BPI_NocePlayerCharacter_C_BPI_SetClawFurWPOIntensityForCutscene;

// Function BPI_NocePlayerCharacter.BPI_NocePlayerCharacter_C.BPI_SetCollisionResponseIgnorePawn
// 0x0001 (0x0001 - 0x0000)
struct BPI_NocePlayerCharacter_C_BPI_SetCollisionResponseIgnorePawn final
{
public:
	bool                                          Ignore;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
DUMPER7_ASSERTS_BPI_NocePlayerCharacter_C_BPI_SetCollisionResponseIgnorePawn;

// Function BPI_NocePlayerCharacter.BPI_NocePlayerCharacter_C.BPI_SetPlayerIdleVarInt
// 0x0004 (0x0004 - 0x0000)
struct BPI_NocePlayerCharacter_C_BPI_SetPlayerIdleVarInt final
{
public:
	int32                                         IdleVarInt;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
DUMPER7_ASSERTS_BPI_NocePlayerCharacter_C_BPI_SetPlayerIdleVarInt;

// Function BPI_NocePlayerCharacter.BPI_NocePlayerCharacter_C.BPI_SetPlayerIdleVarTime
// 0x0008 (0x0008 - 0x0000)
struct BPI_NocePlayerCharacter_C_BPI_SetPlayerIdleVarTime final
{
public:
	double                                        OverwriteIdleVarTime;                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
DUMPER7_ASSERTS_BPI_NocePlayerCharacter_C_BPI_SetPlayerIdleVarTime;

// Function BPI_NocePlayerCharacter.BPI_NocePlayerCharacter_C.BPI_ShowCloth
// 0x0008 (0x0008 - 0x0000)
struct BPI_NocePlayerCharacter_C_BPI_ShowCloth final
{
public:
	class FName                                   InValue;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
DUMPER7_ASSERTS_BPI_NocePlayerCharacter_C_BPI_ShowCloth;

// Function BPI_NocePlayerCharacter.BPI_NocePlayerCharacter_C.BPI_StartFaceTargetCameraMode
// 0x0008 (0x0008 - 0x0000)
struct BPI_NocePlayerCharacter_C_BPI_StartFaceTargetCameraMode final
{
public:
	class AActor*                                 InTargetActor;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
DUMPER7_ASSERTS_BPI_NocePlayerCharacter_C_BPI_StartFaceTargetCameraMode;

// Function BPI_NocePlayerCharacter.BPI_NocePlayerCharacter_C.BPI_StartFaceTargetCameraModeWithRotation
// 0x0018 (0x0018 - 0x0000)
struct BPI_NocePlayerCharacter_C_BPI_StartFaceTargetCameraModeWithRotation final
{
public:
	struct FRotator                               InRotation;                                        // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
DUMPER7_ASSERTS_BPI_NocePlayerCharacter_C_BPI_StartFaceTargetCameraModeWithRotation;

// Function BPI_NocePlayerCharacter.BPI_NocePlayerCharacter_C.BPI_StartRunTo
// 0x0028 (0x0028 - 0x0000)
struct BPI_NocePlayerCharacter_C_BPI_StartRunTo final
{
public:
	struct FRotator                               InRunToRotation;                                   // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                        InRunToDuration;                                   // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          InLimitInput;                                      // 0x0020(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
DUMPER7_ASSERTS_BPI_NocePlayerCharacter_C_BPI_StartRunTo;

// Function BPI_NocePlayerCharacter.BPI_NocePlayerCharacter_C.BPI_StartWeddingCameraMode
// 0x0018 (0x0018 - 0x0000)
struct BPI_NocePlayerCharacter_C_BPI_StartWeddingCameraMode final
{
public:
	struct FRotator                               InRotation;                                        // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
DUMPER7_ASSERTS_BPI_NocePlayerCharacter_C_BPI_StartWeddingCameraMode;

// Function BPI_NocePlayerCharacter.BPI_NocePlayerCharacter_C.BPI_StopWalking
// 0x0001 (0x0001 - 0x0000)
struct BPI_NocePlayerCharacter_C_BPI_StopWalking final
{
public:
	bool                                          IsStop;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
DUMPER7_ASSERTS_BPI_NocePlayerCharacter_C_BPI_StopWalking;

// Function BPI_NocePlayerCharacter.BPI_NocePlayerCharacter_C.BPI_SwitchWeaponAudioType
// 0x0008 (0x0008 - 0x0000)
struct BPI_NocePlayerCharacter_C_BPI_SwitchWeaponAudioType final
{
public:
	struct FGameplayTag                           InSwitchValue;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
DUMPER7_ASSERTS_BPI_NocePlayerCharacter_C_BPI_SwitchWeaponAudioType;

// Function BPI_NocePlayerCharacter.BPI_NocePlayerCharacter_C.BPI_TestHellModeDamage
// 0x0008 (0x0008 - 0x0000)
struct BPI_NocePlayerCharacter_C_BPI_TestHellModeDamage final
{
public:
	class UNoceHellModeDataAsset*                 InHellModeDataAsset;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
DUMPER7_ASSERTS_BPI_NocePlayerCharacter_C_BPI_TestHellModeDamage;

// Function BPI_NocePlayerCharacter.BPI_NocePlayerCharacter_C.BPI_WalkToLocation
// 0x0030 (0x0030 - 0x0000)
struct BPI_NocePlayerCharacter_C_BPI_WalkToLocation final
{
public:
	double                                        InStartDelayTime;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                InTargetLocation;                                  // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        InCameraLerpTime;                                  // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          InLimitInput;                                      // 0x0028(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
DUMPER7_ASSERTS_BPI_NocePlayerCharacter_C_BPI_WalkToLocation;

// Function BPI_NocePlayerCharacter.BPI_NocePlayerCharacter_C.BPI_WalkToWithCameraRotation
// 0x0048 (0x0048 - 0x0000)
struct BPI_NocePlayerCharacter_C_BPI_WalkToWithCameraRotation final
{
public:
	double                                        InStartDelayTime;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               InCameraRotation;                                  // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                InWalkToLocation;                                  // 0x0020(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        InCameraLerpTime;                                  // 0x0038(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          InLimitInput;                                      // 0x0040(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
DUMPER7_ASSERTS_BPI_NocePlayerCharacter_C_BPI_WalkToWithCameraRotation;

}

