#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPI_NocePlayerController

#include "Basic.hpp"

#include "CoreUObject_classes.hpp"
#include "GameNoce_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BPI_NocePlayerController.BPI_NocePlayerController_C
// 0x0000 (0x0000 - 0x0000)
class IBPI_NocePlayerController_C final
{
public:
	void BPI_EnableLineOfSight(bool InValue);
	void BPI_EndCounterableHint();
	void BPI_HandleBreakDown();
	void BPI_HandleEndHPWarnings(bool InSourceFormEvent);
	void BPI_HandleHellModeSpiritAttack();
	void BPI_HandleJustDodge();
	void BPI_HandleSanityFocus(bool InValue);
	void BPI_HandleSanityWeak(bool InValue);
	void BPI_HandleShiromukuRevive(int32 InValue);
	void BPI_HandleStartHPWarnings(double InPlayTime, bool InSourceFormEvent);
	void BPI_PlayControllerVibrationByData(class UForceFeedbackEffect* ForceFeedbackEffect, const struct FNeoAudioPostEventParam& HapticEffect);
	void BPI_PlayControllerVibrationByType(ENoceControllerVibrationType VibrationType);
	void BPI_StartCounterableHint(double InAlpha, double InBlend, double InJitterScale, double InJitterSpeed, double InOverlayColor_ColorShiftBlend, double InOverlayColorRatio, const struct FLinearColor& InOverlayColor);
	void BPI_SwitchControlledPlayer(class ACharacter* InPlayerCharacter, bool InResetWeapon, class FName InWeaponName, bool InFullReocver, bool InDestroyOldCharacter);
	void BPI_UseHIna(bool InResetWeapon, bool InFullRecover);
	void BPI_UseHinaClaw(bool InResetWeapon, bool InFullRecover);
	void BPI_UseHinaClawDevLevel(bool InResetWeapon, bool InFullRecover);

public:
	static class UClass* StaticClass()
	{
		BP_STATIC_CLASS_IMPL("BPI_NocePlayerController_C")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"BPI_NocePlayerController_C")
	}
	static class IBPI_NocePlayerController_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<IBPI_NocePlayerController_C>();
	}

	class UObject* AsUObject()
	{
		return reinterpret_cast<UObject*>(this);
	}
	const class UObject* AsUObject() const
	{
		return reinterpret_cast<const UObject*>(this);
	}
};
DUMPER7_ASSERTS_IBPI_NocePlayerController_C;

}

