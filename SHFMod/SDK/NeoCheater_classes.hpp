#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: NeoCheater

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "UMG_classes.hpp"
#include "CoreUObject_structs.hpp"
#include "NeoCheater_structs.hpp"


namespace SDK
{

// Class NeoCheater.NeoCheatFunctionLibrary
// 0x0000 (0x0028 - 0x0028)
class UNeoCheatFunctionLibrary final : public UBlueprintFunctionLibrary
{
public:
	static class FName GetName(const struct FKey& InKey);
	static TArray<class FText> GetNumTexts(const int32 InStartNum, const int32 InEndNum);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("NeoCheatFunctionLibrary")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"NeoCheatFunctionLibrary")
	}
	static class UNeoCheatFunctionLibrary* GetDefaultObj()
	{
		return GetDefaultObjImpl<UNeoCheatFunctionLibrary>();
	}
};
DUMPER7_ASSERTS_UNeoCheatFunctionLibrary;

// Class NeoCheater.NeoCheatInputWidget
// 0x0020 (0x0300 - 0x02E0)
class UNeoCheatInputWidget final : public UUserWidget
{
public:
	uint8                                         Pad_2E0[0x10];                                     // 0x02E0(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         WidgetZOrder;                                      // 0x02F0(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          IsShowingGamepad;                                  // 0x02F4(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          IsShowingMouseKeyboard;                            // 0x02F5(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_2F6[0xA];                                      // 0x02F6(0x000A)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	bool OnAnalogValueChangedEvent(const struct FKey& InKey, const float InValue);
	bool OnApplicationActivationChanged(bool IsActivated);
	void OnApplicationDeactivated(bool IsActivated);
	bool OnKeyDownEvent(const struct FKey& InKey);
	bool OnKeyUpEvent(const struct FKey& InKey);
	bool OnMouseButtonDoubleClickEvent(const struct FKey& InKey);
	bool OnMouseButtonDownEvent(const struct FKey& InKey);
	bool OnMouseButtonUpEvent(const struct FKey& InKey);
	bool OnMouseWheelEvent(const struct FKey& InKey);
	void SetShowGamepad(bool IsShow);
	void SetShowMouseKeyboard(bool IsShow);
	void SetWidgetZOrder(int32 InWidgetZOrder);
	bool UpdateVisibility();

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("NeoCheatInputWidget")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"NeoCheatInputWidget")
	}
	static class UNeoCheatInputWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UNeoCheatInputWidget>();
	}
};
DUMPER7_ASSERTS_UNeoCheatInputWidget;

// Class NeoCheater.NeoCheatManager
// 0x0218 (0x02A0 - 0x0088)
class UNeoCheatManager : public UCheatManager
{
public:
	struct FSoftClassPath                         DebugMenuWidgetClass;                              // 0x0088(0x0020)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSoftClassPath                         DebugPopWindowWidgetClass;                         // 0x00A8(0x0020)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                   ConfirmText;                                       // 0x00C8(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	TArray<class FString>                         FunctionCategories;                                // 0x00D8(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FNeoCheatEngineCommandStruct>   EngineCommands;                                    // 0x00E8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<TSoftClassPtr<class UClass>>           CheatManagerExtesionClasses;                       // 0x00F8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	class UUserWidget*                            DebugMenuWidget;                                   // 0x0108(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UNeoCheatMenuPopupWidget*               PopupWindow;                                       // 0x0110(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_118[0x8];                                      // 0x0118(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class FString, struct FNeoCheatCommandStruct> FunctionNameToCommandMap;                     // 0x0120(0x0050)(Protected, NativeAccessSpecifierProtected)
	TMap<class FString, struct FNeoCheatCommandMetaStruct> FunctionNameToCommandMetaMap;             // 0x0170(0x0050)(Protected, NativeAccessSpecifierProtected)
	struct FTimerHandle                           ExecuteLaterTimerHandle;                           // 0x01C0(0x0008)(NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	ENeoCheatUIInputMode                          CachedInputMode;                                   // 0x01C8(0x0001)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_1C9[0x17];                                     // 0x01C9(0x0017)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class FString, float>                    CurrentValue;                                      // 0x01E0(0x0050)(Transient, Protected, NativeAccessSpecifierProtected)
	TMap<class FString, float>                    ConfigValue;                                       // 0x0230(0x0050)(Config, Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_280[0x20];                                     // 0x0280(0x0020)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void AddNeoCheatExtension(const TSoftClassPtr<class UClass> Class_0);
	void ClearCheatConfig();
	void ExecComboCommand(const class FString& ComboCommandName);
	void ExecuteCommand(const class FString& Command, const float& CommandValue);
	class UNeoCheatManagerExtension* FindNeoCheatExtension(const TSubclassOf<class UNeoCheatManagerExtension> Class_0);
	void GetCheatFunctionsWithCategory(TArray<struct FNeoCheatCategoryStruct>* CheatCommands);
	class UNeoCheatMenuPopupWidget* GetPopupWindow();
	void OnEndPlay(class AActor* Player, EEndPlayReason EndPlayReason);
	void OnPopWindowClosed();
	void RemoveNeoCheatExtension(const TSoftClassPtr<class UClass> Class_0);
	void SaveCheatConfig();
	void ToggleDebugMenu();

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("NeoCheatManager")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"NeoCheatManager")
	}
	static class UNeoCheatManager* GetDefaultObj()
	{
		return GetDefaultObjImpl<UNeoCheatManager>();
	}
};
DUMPER7_ASSERTS_UNeoCheatManager;

// Class NeoCheater.NeoCheatManagerExtension
// 0x00C0 (0x00E8 - 0x0028)
class UNeoCheatManagerExtension : public UCheatManagerExtension
{
public:
	uint8                                         Pad_28[0x10];                                      // 0x0028(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   ConfirmText;                                       // 0x0038(0x0010)(NativeAccessSpecifierPublic)
	TMap<class FString, struct FNeoCheatCommandStruct> FunctionNameToCommandMap;                     // 0x0048(0x0050)(Protected, NativeAccessSpecifierProtected)
	TMap<class FString, struct FNeoCheatCommandMetaStruct> FunctionNameToCommandMetaMap;             // 0x0098(0x0050)(Protected, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("NeoCheatManagerExtension")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"NeoCheatManagerExtension")
	}
	static class UNeoCheatManagerExtension* GetDefaultObj()
	{
		return GetDefaultObjImpl<UNeoCheatManagerExtension>();
	}
};
DUMPER7_ASSERTS_UNeoCheatManagerExtension;

// Class NeoCheater.NeoCheatMenuArrowBtn
// 0x0010 (0x02F0 - 0x02E0)
class UNeoCheatMenuArrowBtn final : public UUserWidget
{
public:
	class UWidgetAnimation*                       Select;                                            // 0x02E0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                       Default;                                           // 0x02E8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	void OnDeselect();
	void OnSelect();

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("NeoCheatMenuArrowBtn")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"NeoCheatMenuArrowBtn")
	}
	static class UNeoCheatMenuArrowBtn* GetDefaultObj()
	{
		return GetDefaultObjImpl<UNeoCheatMenuArrowBtn>();
	}
};
DUMPER7_ASSERTS_UNeoCheatMenuArrowBtn;

// Class NeoCheater.NeoCheatMenuConfirmBtn
// 0x0020 (0x0300 - 0x02E0)
class UNeoCheatMenuConfirmBtn final : public UUserWidget
{
public:
	class UWidgetAnimation*                       Select;                                            // 0x02E0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                       Default;                                           // 0x02E8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                       Decide;                                            // 0x02F0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                             ConfirmTextBlock;                                  // 0x02F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	void OnDecide();
	void OnDeselect();
	void OnSelect();
	void SetText(const class FText& InText);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("NeoCheatMenuConfirmBtn")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"NeoCheatMenuConfirmBtn")
	}
	static class UNeoCheatMenuConfirmBtn* GetDefaultObj()
	{
		return GetDefaultObjImpl<UNeoCheatMenuConfirmBtn>();
	}
};
DUMPER7_ASSERTS_UNeoCheatMenuConfirmBtn;

// Class NeoCheater.NeoCheatMenuMultiArrowBtn
// 0x0060 (0x0340 - 0x02E0)
class UNeoCheatMenuMultiArrowBtn final : public UUserWidget
{
public:
	uint8                                         Pad_2E0[0x20];                                     // 0x02E0(0x0020)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidgetAnimation*                       Select;                                            // 0x0300(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                       Default;                                           // 0x0308(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class FText>                           Options;                                           // 0x0310(0x0010)(BlueprintVisible, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	int32                                         CurrentIndex;                                      // 0x0320(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_324[0x4];                                      // 0x0324(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UTextBlock*                             ItemTextBlock;                                     // 0x0328(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UNeoCheatMenuArrowBtn*                  ArrowBtnLeft;                                      // 0x0330(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UNeoCheatMenuArrowBtn*                  ArrowBtnRight;                                     // 0x0338(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	int32 GetCurrentIndex();
	void OnDeselect();
	void OnSelect();
	void SelectNext();
	void SelectNextPage();
	void SelectPrevious();
	void SelectPreviousPage();
	void SetDynamicOption(const struct FNeoCheatPopWindowDynamicOptionParam& Option, const int32& Index_0);
	void SetOption(const struct FNeoCheatPopWindowOptionParam& Option);
	void UpdateDynamicOption(const int32& Index_0);
	void UpdateText();

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("NeoCheatMenuMultiArrowBtn")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"NeoCheatMenuMultiArrowBtn")
	}
	static class UNeoCheatMenuMultiArrowBtn* GetDefaultObj()
	{
		return GetDefaultObjImpl<UNeoCheatMenuMultiArrowBtn>();
	}
};
DUMPER7_ASSERTS_UNeoCheatMenuMultiArrowBtn;

// Class NeoCheater.NeoCheatMenuPopupWidget
// 0x00B8 (0x0398 - 0x02E0)
class UNeoCheatMenuPopupWidget final : public UUserWidget
{
public:
	TMulticastInlineDelegate<void(const struct FNeoCheatPopWindowOutputParam& Result)> OnDecide;     // 0x02E0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void()>              OnClosed;                                          // 0x02F0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	uint8                                         Pad_300[0x10];                                     // 0x0300(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidgetAnimation*                       FadeIn;                                            // 0x0310(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                       FadeOut;                                           // 0x0318(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                             TitleTextBlock;                                    // 0x0320(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UVerticalBox*                           OptionVerticalBox;                                 // 0x0328(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UNeoCheatMenuConfirmBtn*                ConfirmBtn;                                        // 0x0330(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FSoftClassPath                         OptionBtnClass;                                    // 0x0338(0x0020)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          IsSkipInput;                                       // 0x0358(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_359[0x7];                                      // 0x0359(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UNeoCheatMenuMultiArrowBtn*>     OptionBtns;                                        // 0x0360(0x0010)(BlueprintVisible, ExportObject, ZeroConstructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	struct FNeoCheatPopWindowOutputParam          OptionIndex;                                       // 0x0370(0x0010)(BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	int32                                         CurrentIndex;                                      // 0x0380(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_384[0x14];                                     // 0x0384(0x0014)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void DeselectCurrentItem();
	bool Hide();
	bool IsCancel(const struct FKeyEvent& InKeyEvent);
	bool IsConfirm(const struct FKeyEvent& InKeyEvent);
	bool IsDown(const struct FKeyEvent& InKeyEvent);
	bool IsFastLeft(const struct FKeyEvent& InKeyEvent);
	bool IsFastRight(const struct FKeyEvent& InKeyEvent);
	bool IsLeft(const struct FKeyEvent& InKeyEvent);
	bool IsRight(const struct FKeyEvent& InKeyEvent);
	bool IsUp(const struct FKeyEvent& InKeyEvent);
	void OnFadeOutFinished();
	void SelectCurrentItem();
	bool Show(const struct FNeoCheatPopWindowInputParam& InputParam);
	bool ShowDynamicOptions(const struct FNeoCheatPopWindowDynamicInputParam& InputParam);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("NeoCheatMenuPopupWidget")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"NeoCheatMenuPopupWidget")
	}
	static class UNeoCheatMenuPopupWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UNeoCheatMenuPopupWidget>();
	}
};
DUMPER7_ASSERTS_UNeoCheatMenuPopupWidget;

// Class NeoCheater.NeoCheatSampleManager
// 0x0010 (0x02B0 - 0x02A0)
class UNeoCheatSampleManager final : public UNeoCheatManager
{
public:
	uint8                                         Pad_2A0[0x10];                                     // 0x02A0(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnAddEnemy5WindowDecided(const struct FNeoCheatPopWindowOutputParam& Result);
	void OnAddEnemy6WindowDecided(const struct FNeoCheatPopWindowOutputParam& Result);
	void Test_Enemy1();
	void Test_Enemy2(bool InValue);
	void Test_Enemy3(int32 InValue);
	void Test_Enemy4(float InValue);
	void Test_Enemy5();
	void Test_Enemy6();
	void Test_Player1();
	void Test_Player2();
	void Test_Player3();

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("NeoCheatSampleManager")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"NeoCheatSampleManager")
	}
	static class UNeoCheatSampleManager* GetDefaultObj()
	{
		return GetDefaultObjImpl<UNeoCheatSampleManager>();
	}
};
DUMPER7_ASSERTS_UNeoCheatSampleManager;

// Class NeoCheater.NeoCheatUIExtension
// 0x0078 (0x0160 - 0x00E8)
class UNeoCheatUIExtension final : public UNeoCheatManagerExtension
{
public:
	struct FSoftClassPath                         InputWidgetPath;                                   // 0x00E8(0x0020)(Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FSoftClassPath                         TextPackagePath;                                   // 0x0108(0x0020)(Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         InputWidgetZOrder;                                 // 0x0128(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_12C[0x4];                                      // 0x012C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UNeoCheatInputWidget*                   InputWidget;                                       // 0x0130(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class FName>                           CurrentStringTables;                               // 0x0138(0x0010)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	TArray<class FString>                         CurrentStringTableKeys;                            // 0x0148(0x0010)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	int32                                         LastStringTableIndex;                              // 0x0158(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         LastKeyIndex;                                      // 0x015C(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	void CleanUp();
	void CreateInputWidget();
	void Debug_CheckTexts();
	void Debug_GamepadInput(bool InVisible);
	void Debug_MouseKeyboardInput(bool InVisible);
	void Debug_ShowTextID(bool ShowID);
	bool HideText();
	void OnPopWindowClosed();
	bool ShowText(const class FText& Text);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("NeoCheatUIExtension")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"NeoCheatUIExtension")
	}
	static class UNeoCheatUIExtension* GetDefaultObj()
	{
		return GetDefaultObjImpl<UNeoCheatUIExtension>();
	}
};
DUMPER7_ASSERTS_UNeoCheatUIExtension;

}

