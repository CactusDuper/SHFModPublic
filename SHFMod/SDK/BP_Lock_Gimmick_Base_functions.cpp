#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Lock_Gimmick_Base

#include "Basic.hpp"

#include "BP_Lock_Gimmick_Base_classes.hpp"
#include "BP_Lock_Gimmick_Base_parameters.hpp"


namespace SDK
{

// Function BP_Lock_Gimmick_Base.BP_Lock_Gimmick_Base_C.UpdateForRound
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_Lock_Gimmick_Base_C::UpdateForRound()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Lock_Gimmick_Base_C", "UpdateForRound");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Lock_Gimmick_Base.BP_Lock_Gimmick_Base_C.SubstractCurrentIndex
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_Lock_Gimmick_Base_C::SubstractCurrentIndex()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Lock_Gimmick_Base_C", "SubstractCurrentIndex");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Lock_Gimmick_Base.BP_Lock_Gimmick_Base_C.StartGimmick
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ANocePlayerCharacter*             InCharacter                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_Lock_Gimmick_Base_C::StartGimmick(class ANocePlayerCharacter* InCharacter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Lock_Gimmick_Base_C", "StartGimmick");

	Params::BP_Lock_Gimmick_Base_C_StartGimmick Parms{};

	Parms.InCharacter = InCharacter;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Lock_Gimmick_Base.BP_Lock_Gimmick_Base_C.MoveToCharNext
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_Lock_Gimmick_Base_C::MoveToCharNext()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Lock_Gimmick_Base_C", "MoveToCharNext");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Lock_Gimmick_Base.BP_Lock_Gimmick_Base_C.IsCharValid
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool*                                   IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Lock_Gimmick_Base_C::IsCharValid(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Lock_Gimmick_Base_C", "IsCharValid");

	Params::BP_Lock_Gimmick_Base_C_IsCharValid Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;
}


// Function BP_Lock_Gimmick_Base.BP_Lock_Gimmick_Base_C.ShowDebugInfo
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsShow                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Lock_Gimmick_Base_C::ShowDebugInfo(bool IsShow)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Lock_Gimmick_Base_C", "ShowDebugInfo");

	Params::BP_Lock_Gimmick_Base_C_ShowDebugInfo Parms{};

	Parms.IsShow = IsShow;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Lock_Gimmick_Base.BP_Lock_Gimmick_Base_C.ShowChar
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsShow                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Lock_Gimmick_Base_C::ShowChar(bool IsShow)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Lock_Gimmick_Base_C", "ShowChar");

	Params::BP_Lock_Gimmick_Base_C_ShowChar Parms{};

	Parms.IsShow = IsShow;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Lock_Gimmick_Base.BP_Lock_Gimmick_Base_C.SetupForRound
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_Lock_Gimmick_Base_C::SetupForRound()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Lock_Gimmick_Base_C", "SetupForRound");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Lock_Gimmick_Base.BP_Lock_Gimmick_Base_C.Setup
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_Lock_Gimmick_Base_C::Setup()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Lock_Gimmick_Base_C", "Setup");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Lock_Gimmick_Base.BP_Lock_Gimmick_Base_C.SetPerformFinished
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_Lock_Gimmick_Base_C::SetPerformFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Lock_Gimmick_Base_C", "SetPerformFinished");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Lock_Gimmick_Base.BP_Lock_Gimmick_Base_C.SetFocus
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_Lock_Gimmick_Base_C::SetFocus()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Lock_Gimmick_Base_C", "SetFocus");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Lock_Gimmick_Base.BP_Lock_Gimmick_Base_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Lock_Gimmick_Base_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Lock_Gimmick_Base_C", "ReceiveTick");

	Params::BP_Lock_Gimmick_Base_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Lock_Gimmick_Base.BP_Lock_Gimmick_Base_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_Lock_Gimmick_Base_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Lock_Gimmick_Base_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Lock_Gimmick_Base.BP_Lock_Gimmick_Base_C.ReceiveActorBeginOverlap
// (Event, Public, BlueprintEvent)
// Parameters:
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_Lock_Gimmick_Base_C::ReceiveActorBeginOverlap(class AActor* OtherActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Lock_Gimmick_Base_C", "ReceiveActorBeginOverlap");

	Params::BP_Lock_Gimmick_Base_C_ReceiveActorBeginOverlap Parms{};

	Parms.OtherActor = OtherActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Lock_Gimmick_Base.BP_Lock_Gimmick_Base_C.PlayAnimation
// (BlueprintCallable, BlueprintEvent)

void ABP_Lock_Gimmick_Base_C::PlayAnimation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Lock_Gimmick_Base_C", "PlayAnimation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Lock_Gimmick_Base.BP_Lock_Gimmick_Base_C.OnCheckWrong
// (BlueprintCallable, BlueprintEvent)

void ABP_Lock_Gimmick_Base_C::OnCheckWrong()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Lock_Gimmick_Base_C", "OnCheckWrong");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Lock_Gimmick_Base.BP_Lock_Gimmick_Base_C.OnCheckCorrect
// (BlueprintCallable, BlueprintEvent)

void ABP_Lock_Gimmick_Base_C::OnCheckCorrect()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Lock_Gimmick_Base_C", "OnCheckCorrect");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Lock_Gimmick_Base.BP_Lock_Gimmick_Base_C.OnCameraZoomIn
// (BlueprintCallable, BlueprintEvent)

void ABP_Lock_Gimmick_Base_C::OnCameraZoomIn()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Lock_Gimmick_Base_C", "OnCameraZoomIn");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Lock_Gimmick_Base.BP_Lock_Gimmick_Base_C.MoveToPrevious
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_Lock_Gimmick_Base_C::MoveToPrevious()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Lock_Gimmick_Base_C", "MoveToPrevious");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Lock_Gimmick_Base.BP_Lock_Gimmick_Base_C.MoveToNext
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_Lock_Gimmick_Base_C::MoveToNext()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Lock_Gimmick_Base_C", "MoveToNext");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Lock_Gimmick_Base.BP_Lock_Gimmick_Base_C.HandleUp
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_Lock_Gimmick_Base_C::HandleUp()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Lock_Gimmick_Base_C", "HandleUp");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Lock_Gimmick_Base.BP_Lock_Gimmick_Base_C.MoveToCharPrevious
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_Lock_Gimmick_Base_C::MoveToCharPrevious()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Lock_Gimmick_Base_C", "MoveToCharPrevious");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Lock_Gimmick_Base.BP_Lock_Gimmick_Base_C.HandleRight
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_Lock_Gimmick_Base_C::HandleRight()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Lock_Gimmick_Base_C", "HandleRight");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Lock_Gimmick_Base.BP_Lock_Gimmick_Base_C.HandlePlayAnimation
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsUnlock                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Lock_Gimmick_Base_C::HandlePlayAnimation(bool IsUnlock)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Lock_Gimmick_Base_C", "HandlePlayAnimation");

	Params::BP_Lock_Gimmick_Base_C_HandlePlayAnimation Parms{};

	Parms.IsUnlock = IsUnlock;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Lock_Gimmick_Base.BP_Lock_Gimmick_Base_C.HandleLeft
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_Lock_Gimmick_Base_C::HandleLeft()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Lock_Gimmick_Base_C", "HandleLeft");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Lock_Gimmick_Base.BP_Lock_Gimmick_Base_C.HandleDown
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_Lock_Gimmick_Base_C::HandleDown()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Lock_Gimmick_Base_C", "HandleDown");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Lock_Gimmick_Base.BP_Lock_Gimmick_Base_C.HandleCheckAnswer
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                                   IsCorrect                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Lock_Gimmick_Base_C::HandleCheckAnswer(bool* IsCorrect)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Lock_Gimmick_Base_C", "HandleCheckAnswer");

	Params::BP_Lock_Gimmick_Base_C_HandleCheckAnswer Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsCorrect != nullptr)
		*IsCorrect = Parms.IsCorrect;
}


// Function BP_Lock_Gimmick_Base.BP_Lock_Gimmick_Base_C.GetFloatCurveValue
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// double                                  Alpha                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UCurveFloat*                      FloatCurve                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// double*                                 Value                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Lock_Gimmick_Base_C::GetFloatCurveValue(double Alpha, class UCurveFloat* FloatCurve, double* Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Lock_Gimmick_Base_C", "GetFloatCurveValue");

	Params::BP_Lock_Gimmick_Base_C_GetFloatCurveValue Parms{};

	Parms.Alpha = Alpha;
	Parms.FloatCurve = FloatCurve;

	UObject::ProcessEvent(Func, &Parms);

	if (Value != nullptr)
		*Value = Parms.Value;
}


// Function BP_Lock_Gimmick_Base.BP_Lock_Gimmick_Base_C.GetAdditionalAnimationDuration
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// double*                                 AdditionalDuration                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Lock_Gimmick_Base_C::GetAdditionalAnimationDuration(double* AdditionalDuration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Lock_Gimmick_Base_C", "GetAdditionalAnimationDuration");

	Params::BP_Lock_Gimmick_Base_C_GetAdditionalAnimationDuration Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AdditionalDuration != nullptr)
		*AdditionalDuration = Parms.AdditionalDuration;
}


// Function BP_Lock_Gimmick_Base.BP_Lock_Gimmick_Base_C.ExitGimmick
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_Lock_Gimmick_Base_C::ExitGimmick()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Lock_Gimmick_Base_C", "ExitGimmick");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Lock_Gimmick_Base.BP_Lock_Gimmick_Base_C.ExecuteUbergraph_BP_Lock_Gimmick_Base
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Lock_Gimmick_Base_C::ExecuteUbergraph_BP_Lock_Gimmick_Base(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Lock_Gimmick_Base_C", "ExecuteUbergraph_BP_Lock_Gimmick_Base");

	Params::BP_Lock_Gimmick_Base_C_ExecuteUbergraph_BP_Lock_Gimmick_Base Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Lock_Gimmick_Base.BP_Lock_Gimmick_Base_C.ExecuteInstantFeedback
// (Event, Protected, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           InteractPawn_0                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool ABP_Lock_Gimmick_Base_C::ExecuteInstantFeedback(class AActor* InteractPawn_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Lock_Gimmick_Base_C", "ExecuteInstantFeedback");

	Params::BP_Lock_Gimmick_Base_C_ExecuteInstantFeedback Parms{};

	Parms.InteractPawn_0 = InteractPawn_0;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_Lock_Gimmick_Base.BP_Lock_Gimmick_Base_C.CheckAnswer
// (Protected, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                                   IsCorrect                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Lock_Gimmick_Base_C::CheckAnswer(bool* IsCorrect)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Lock_Gimmick_Base_C", "CheckAnswer");

	Params::BP_Lock_Gimmick_Base_C_CheckAnswer Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsCorrect != nullptr)
		*IsCorrect = Parms.IsCorrect;
}


// Function BP_Lock_Gimmick_Base.BP_Lock_Gimmick_Base_C.Check_KeyUpdate
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  AxisMoveRight                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  AxisMoveForward                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Lock_Gimmick_Base_C::Check_KeyUpdate(double AxisMoveRight, double AxisMoveForward)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Lock_Gimmick_Base_C", "Check_KeyUpdate");

	Params::BP_Lock_Gimmick_Base_C_Check_KeyUpdate Parms{};

	Parms.AxisMoveRight = AxisMoveRight;
	Parms.AxisMoveForward = AxisMoveForward;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Lock_Gimmick_Base.BP_Lock_Gimmick_Base_C.CanInput
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool*                                   CanInput_0                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Lock_Gimmick_Base_C::CanInput(bool* CanInput_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Lock_Gimmick_Base_C", "CanInput");

	Params::BP_Lock_Gimmick_Base_C_CanInput Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (CanInput_0 != nullptr)
		*CanInput_0 = Parms.CanInput_0;
}


// Function BP_Lock_Gimmick_Base.BP_Lock_Gimmick_Base_C.BPI_LockGimmick_OnCheckWrong
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_Lock_Gimmick_Base_C::BPI_LockGimmick_OnCheckWrong()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Lock_Gimmick_Base_C", "BPI_LockGimmick_OnCheckWrong");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Lock_Gimmick_Base.BP_Lock_Gimmick_Base_C.BPI_LockGimmick_OnCheckCorrect
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_Lock_Gimmick_Base_C::BPI_LockGimmick_OnCheckCorrect()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Lock_Gimmick_Base_C", "BPI_LockGimmick_OnCheckCorrect");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Lock_Gimmick_Base.BP_Lock_Gimmick_Base_C.BPI_LockGimmick_OnCameraZoomIn
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_Lock_Gimmick_Base_C::BPI_LockGimmick_OnCameraZoomIn()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Lock_Gimmick_Base_C", "BPI_LockGimmick_OnCameraZoomIn");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Lock_Gimmick_Base.BP_Lock_Gimmick_Base_C.BPI_LockGimmick_HandleUp
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_Lock_Gimmick_Base_C::BPI_LockGimmick_HandleUp()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Lock_Gimmick_Base_C", "BPI_LockGimmick_HandleUp");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Lock_Gimmick_Base.BP_Lock_Gimmick_Base_C.BPI_LockGimmick_HandleRight
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_Lock_Gimmick_Base_C::BPI_LockGimmick_HandleRight()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Lock_Gimmick_Base_C", "BPI_LockGimmick_HandleRight");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Lock_Gimmick_Base.BP_Lock_Gimmick_Base_C.BPI_LockGimmick_HandleLeft
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_Lock_Gimmick_Base_C::BPI_LockGimmick_HandleLeft()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Lock_Gimmick_Base_C", "BPI_LockGimmick_HandleLeft");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Lock_Gimmick_Base.BP_Lock_Gimmick_Base_C.BPI_LockGimmick_HandleDown
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_Lock_Gimmick_Base_C::BPI_LockGimmick_HandleDown()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Lock_Gimmick_Base_C", "BPI_LockGimmick_HandleDown");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Lock_Gimmick_Base.BP_Lock_Gimmick_Base_C.BPI_LockGimmick_HandleCheckAnswer
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                                   IsCorrect                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Lock_Gimmick_Base_C::BPI_LockGimmick_HandleCheckAnswer(bool* IsCorrect)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Lock_Gimmick_Base_C", "BPI_LockGimmick_HandleCheckAnswer");

	Params::BP_Lock_Gimmick_Base_C_BPI_LockGimmick_HandleCheckAnswer Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsCorrect != nullptr)
		*IsCorrect = Parms.IsCorrect;
}


// Function BP_Lock_Gimmick_Base.BP_Lock_Gimmick_Base_C.BPI_LockGimmick_GetAutoCheckAnswer
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                                   IsAutoCheckAnswer_0                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName*                            GuideName_0                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName*                            ConfirmedGuideName_0                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Lock_Gimmick_Base_C::BPI_LockGimmick_GetAutoCheckAnswer(bool* IsAutoCheckAnswer_0, class FName* GuideName_0, class FName* ConfirmedGuideName_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Lock_Gimmick_Base_C", "BPI_LockGimmick_GetAutoCheckAnswer");

	Params::BP_Lock_Gimmick_Base_C_BPI_LockGimmick_GetAutoCheckAnswer Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsAutoCheckAnswer_0 != nullptr)
		*IsAutoCheckAnswer_0 = Parms.IsAutoCheckAnswer_0;

	if (GuideName_0 != nullptr)
		*GuideName_0 = Parms.GuideName_0;

	if (ConfirmedGuideName_0 != nullptr)
		*ConfirmedGuideName_0 = Parms.ConfirmedGuideName_0;
}


// Function BP_Lock_Gimmick_Base.BP_Lock_Gimmick_Base_C.BP_OnRecordLoaded
// (Event, Public, BlueprintEvent)

void ABP_Lock_Gimmick_Base_C::BP_OnRecordLoaded()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Lock_Gimmick_Base_C", "BP_OnRecordLoaded");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Lock_Gimmick_Base.BP_Lock_Gimmick_Base_C.AddCurrentIndex
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_Lock_Gimmick_Base_C::AddCurrentIndex()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Lock_Gimmick_Base_C", "AddCurrentIndex");

	UObject::ProcessEvent(Func, nullptr);
}

}

