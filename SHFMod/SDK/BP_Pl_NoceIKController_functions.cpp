#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Pl_NoceIKController

#include "Basic.hpp"

#include "BP_Pl_NoceIKController_classes.hpp"
#include "BP_Pl_NoceIKController_parameters.hpp"


namespace SDK
{

// Function BP_Pl_NoceIKController.BP_Pl_NoceIKController_C.ReceiveBeginPlay
// (Event, Public, BlueprintEvent)

void UBP_Pl_NoceIKController_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Pl_NoceIKController_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Pl_NoceIKController.BP_Pl_NoceIKController_C.Initialize
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_Pl_NoceIKController_C::Initialize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Pl_NoceIKController_C", "Initialize");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Pl_NoceIKController.BP_Pl_NoceIKController_C.ExecuteUbergraph_BP_Pl_NoceIKController
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_Pl_NoceIKController_C::ExecuteUbergraph_BP_Pl_NoceIKController(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Pl_NoceIKController_C", "ExecuteUbergraph_BP_Pl_NoceIKController");

	Params::BP_Pl_NoceIKController_C_ExecuteUbergraph_BP_Pl_NoceIKController Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Pl_NoceIKController.BP_Pl_NoceIKController_C.CanApplyFullBodyIK
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool UBP_Pl_NoceIKController_C::CanApplyFullBodyIK()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Pl_NoceIKController_C", "CanApplyFullBodyIK");

	Params::BP_Pl_NoceIKController_C_CanApplyFullBodyIK Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_Pl_NoceIKController.BP_Pl_NoceIKController_C.CalculateCustomAimTargetPosition
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FVector&                   InAimTargetPosition                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector*                         OutAimTargetPosition                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool*                                   bUpdated                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_Pl_NoceIKController_C::CalculateCustomAimTargetPosition(const struct FVector& InAimTargetPosition, struct FVector* OutAimTargetPosition, bool* bUpdated)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Pl_NoceIKController_C", "CalculateCustomAimTargetPosition");

	Params::BP_Pl_NoceIKController_C_CalculateCustomAimTargetPosition Parms{};

	Parms.InAimTargetPosition = std::move(InAimTargetPosition);

	UObject::ProcessEvent(Func, &Parms);

	if (OutAimTargetPosition != nullptr)
		*OutAimTargetPosition = std::move(Parms.OutAimTargetPosition);

	if (bUpdated != nullptr)
		*bUpdated = Parms.bUpdated;
}

}

